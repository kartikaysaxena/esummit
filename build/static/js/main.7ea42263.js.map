{"version":3,"file":"static/js/main.7ea42263.js","mappings":"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","sources":["../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/classnames/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","components/navbar.jsx","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","components/events.jsx","components/footer.jsx","../node_modules/react-scroll-horizontal/dist/index.es.js","pages/Events.jsx","pages/esummit.jsx","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"948f8ffa\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"esummit:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkesummit\"] = self[\"webpackChunkesummit\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(branches[i], decoded);\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nfunction decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === matches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized: boolean;\n  let hasLazyRoutes = initialMatches.some((m) => m.route.lazy);\n  let hasLoaders = initialMatches.some((m) => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    initialized = initialMatches.every(\n      (m) =>\n        m.route.loader &&\n        m.route.loader.hydrate !== true &&\n        ((loaderData && loaderData[m.route.id] !== undefined) ||\n          (errors && errors[m.route.id] !== undefined))\n    );\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingError || null,\n          ...(pendingActionData ? { actionData: pendingActionData } : {}),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    if (\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration)\n    ) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(\n        {\n          navigation: loadingNavigation,\n          ...(actionData\n            ? Object.keys(actionData).length === 0\n              ? { actionData: null }\n              : { actionData }\n            : {}),\n          ...(revalidatingFetchers.length > 0\n            ? { fetchers: new Map(state.fetchers) }\n            : {}),\n        },\n        {\n          flushSync,\n        }\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(state, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  v7_relativeSplatPath: boolean,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location,\n          v7_relativeSplatPath\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this navigation's state updates\n   */\n  unstable_flushSync?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={{\n                  v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n                }}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <DataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","import React, { useState, useEffect } from 'react';\nimport esummit from '../static/esummit-1.png'\n\nexport default function Navbar() {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div style={{height: '7rem'}}>\n            <nav className=\"navbar navbar-expand-lg navbar-light\" style={{ margin: '2rem 8rem'}}>\n                <a className=\"navbar-brand\" href=\"#\">\n                    <img src={esummit} alt=\"\" style={{ height: '4rem', width: 'auto' }} />\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className={`collapse navbar-collapse ${isMenuOpen ? 'show' : ''}`}>\n                    <ul className=\"navbar-nav ml-auto mr-auto nav-links\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" style={{ color: 'white' }} href=\"/main.html\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\"  style={{ color: 'white' }} href=\"#about\">About</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\"  style={{ color: 'white' }} href=\"#events\">Events</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\"  style={{ color: 'white' }} href=\"#team\">Team</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    )\n}\n","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport a1 from '../static/pitch-it-up.jpg';\nimport a2 from '../static/adv-your-way.jpg';\nimport a3 from '../static/executive-desk.jpg';\nimport a4 from '../static/entrepreneurial-dilemma.jpg';\nimport a5 from '../static/angel.jpg';\nimport a6 from '../static/bizz-quizz-final.jpg';\nimport a7 from '../static/case-study.jpg';\n\nconst imageMap = {\n    a1: a1,\n    a2: a2,\n    a3: a3,\n    a4: a4,\n    a5: a5,\n    a6: a6,\n    a7: a7\n  };\n  \n\nconst EventModal = ({ show, handleClose, event }) => {\n  const { name, date, venue, registrationLink, posterCode, description } = event;\n  const dateTime = new Date(date);\n\n  const dateOfEvent = dateTime.getDate(); // Get the day of the month (1-31)\n  const monthOfEvent = dateTime.getMonth() + 1;\n\n  const monthArray = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n];\n\n// Function to convert month digit to month name\n  function digitToMonth(digit) {\n      return monthArray[digit - 1] || \"Invalid Month\";\n  }\n\n\n  return (\n    <Modal show={show} onHide={handleClose} center>\n      <Modal.Header closeButton>\n        <Modal.Title>{name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={imageMap[posterCode]} alt=\"Event Poster\" style={{ maxWidth: '100%' }} />\n        <p>Date: {dateOfEvent} {digitToMonth(dateOfEvent)} </p>\n        <p>Venue: {venue}</p>\n        <p>{description}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => window.open(registrationLink, '_blank')}>\n          Register Now\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst EventCard = ({ event }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n\n  return (\n    <div className='card event-card' style={{margin : '0 2rem', marginRight: '4rem'}}>\n      <img src={imageMap[event.posterCode]} alt=\"Event Poster\" style={{ cursor: 'pointer', maxWidth: '100%' }} onClick={handleShowModal} />\n      <EventModal show={showModal} handleClose={handleCloseModal} event={event} />\n    </div>\n  );\n};\n\nexport default EventCard;\n","import React, { useState, useEffect } from 'react';\nexport default function Footer() {\n\n    return (\n        <>\n\n<svg className='svg' id='about' width=\"1440\" height=\"466\" viewBox=\"0 0 1440 466\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M-8 6.7928L26.6781 3.24665C89.9425 -3.2227 153.858 2.10751 215.177 18.9664L443.232 81.6674C521.26 103.121 603.253 105.842 682.532 89.6089L1048.36 14.7053C1146.21 -5.32989 1247.78 3.58617 1340.64 40.3629L1442 80.505V466H-8V6.7928Z\" fill=\"#371B56\"/>\n\n  <foreignObject x=\"0\" y=\"100\" width=\"100%\" height=\"100%\">\n  <div style={{ \n    width: 'calc(100% - 4rem)', \n    height: '100%', \n    margin: '0 2rem',\n    display: 'flex', \n    justifyContent: 'space-between',\n    alignItems: 'center',\n    fontFamily: 'Inter'\n  }}>\n    \n    <div style={{color: 'white', width: '40%'}}>\n      <div style={{color: 'white', marginLeft: '4rem', marginBottom: '1rem', textAlign: 'center', fontSize: 35, fontFamily: 'Roboto', fontWeight: '400', wordWrap: 'break-word' }}>\n          E-Summit'24\n      </div>\n      <div style={{marginBottom: '1rem', fontFamily: 'Inter', fontSize: 28}}>\n      Phone: <br />\n      7355797206 8919006593\n      </div>\n      <div style={{marginBottom: '1rem', fontFamily: 'Inter', fontSize: 28}}>\n        Email: entrepreneurship@iitp.ac.in\n      </div>\n      <div style={{marginLeft: '1rem'}}>\n        <div style={{ \n          width: '100%', \n          height: '100%', \n          paddingLeft: 26.66, \n          paddingRight: 26.66, \n          paddingTop: 5.13, \n          paddingBottom: 5.13, \n          borderRadius: 16.41, \n          border: '2.05px white solid', \n          justifyContent: 'center', \n          alignItems: 'center', \n          gap: 10.26, \n          display: 'inline-flex' \n        }}>\n          <a href=\"#hello\" style={{ textDecoration: 'none', color: 'white', textAlign: 'center', fontSize: 24.61, fontFamily: 'Roboto', fontWeight: '400', wordWrap: 'break-word' }}>\n            Contact Us\n          </a>\n        </div>\n\n      </div>\n    </div>\n    <div style={{ marginRight: '2rem', width: '50%', alignItems: 'center', height: '100%' }}>\n      <div style={{ color: 'white', textAlign: 'center',  fontSize: 28 }}>\n        Contact Us\n      </div>\n      <div style={{ width :'50%' , display: 'flex', justifyContent: 'space-between'  ,flexDirection: 'row', alignItems: 'center', marginTop: '3rem', marginLeft: '14rem' }}>\n        <div style={{ color: 'white' }}>\n        <a href=\"https://www.facebook.com/ecelliitp/\" target='_blank' rel=\"noreferrer\" style={{ color: 'white', textDecoration: 'none' }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-facebook\" viewBox=\"0 0 16 16\">\n            <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951\"/>\n          </svg>\n        </a>\n        </div>\n        <div style={{ color: 'white' }}>\n        <a href=\"https://twitter.com/ecelliitp/\" target='_blank' rel=\"noreferrer\" style={{ color: 'white', textDecoration: 'none' }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-twitter\" viewBox=\"0 0 16 16\">\n              <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334q.002-.211-.006-.422A6.7 6.7 0 0 0 16 3.542a6.7 6.7 0 0 1-1.889.518 3.3 3.3 0 0 0 1.447-1.817 6.5 6.5 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.32 9.32 0 0 1-6.767-3.429 3.29 3.29 0 0 0 1.018 4.382A3.3 3.3 0 0 1 .64 6.575v.045a3.29 3.29 0 0 0 2.632 3.218 3.2 3.2 0 0 1-.865.115 3 3 0 0 1-.614-.057 3.28 3.28 0 0 0 3.067 2.277A6.6 6.6 0 0 1 .78 13.58a6 6 0 0 1-.78-.045A9.34 9.34 0 0 0 5.026 15\"/>\n          </svg>\n        </a> \n         </div>\n        <div style={{ color: 'white' }}>\n        <a href=\"https://www.instagram.com/ecell_iitpatna/\" target='_blank' rel=\"noreferrer\" style={{ color: 'white', textDecoration: 'none' }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-instagram\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.9 3.9 0 0 0-1.417.923A3.9 3.9 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.9 3.9 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.9 3.9 0 0 0-.923-1.417A3.9 3.9 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599s.453.546.598.92c.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.5 2.5 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.5 2.5 0 0 1-.92-.598 2.5 2.5 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233s.008-2.388.046-3.231c.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92s.546-.453.92-.598c.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92m-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217m0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334\"/>\n            </svg>\n          </a>\n        </div>\n        <div style={{ color: 'white' }}>\n        <a href=\"https://www.linkedin.com/company/ecell-iit-patna/\" target='_blank' rel=\"noreferrer\" style={{ color: 'white', textDecoration: 'none' }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\n              <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z\"/>\n            </svg>\n          </a>\n         </div>\n      </div>\n    </div>\n\n  </div>\n</foreignObject>\n\n</svg>\n\n\n        </>\n    )\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DOM from 'react-dom';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar mapToZero_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports['default'] = mapToZero;\n\nfunction mapToZero(obj) {\n  var ret = {};\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ret[key] = 0;\n    }\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];\n});\n\nunwrapExports(mapToZero_1);\n\nvar stripStyle_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports['default'] = stripStyle;\n\nfunction stripStyle(style) {\n  var ret = {};\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];\n});\n\nunwrapExports(stripStyle_1);\n\nvar stepper_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\n\nvar reusedTuple = [0, 0];\n\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX);\n\n  // Damping, in kg / s\n  var Fdamper = -b * v;\n\n  // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n  var a = Fspring + Fdamper;\n\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\n\nmodule.exports = exports[\"default\"];\n// array reference around.\n});\n\nunwrapExports(stepper_1);\n\nvar performanceNow = createCommonjsModule(function (module) {\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(commonjsGlobal);\n});\n\nvar performanceNow$1 = createCommonjsModule(function (module) {\n// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(commonjsGlobal);\n\n\n});\n\nvar root = typeof window === 'undefined' ? commonjsGlobal : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix];\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix];\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix];\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60;\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = performanceNow$1()\n        , next = Math.max(0, frameDuration - (_now - last));\n      last = next + _now;\n      setTimeout(function() {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last);\n            } catch(e) {\n              setTimeout(function() { throw e }, 0);\n            }\n          }\n        }\n      }, Math.round(next));\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    });\n    return id\n  };\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true;\n      }\n    }\n  };\n}\n\nvar raf_1 = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n};\nvar cancel = function() {\n  caf.apply(root, arguments);\n};\nvar polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf;\n  object.cancelAnimationFrame = caf;\n};\nraf_1.cancel = cancel;\nraf_1.polyfill = polyfill;\n\nvar shouldStopAnimation_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports['default'] = shouldStopAnimation;\n\nfunction shouldStopAnimation(currentStyle, style, currentVelocity) {\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    if (currentVelocity[key] !== 0) {\n      return false;\n    }\n\n    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;\n    // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 !=== 1\n    if (currentStyle[key] !== styleValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];\n});\n\nunwrapExports(shouldStopAnimation_1);\n\nvar Motion_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar _mapToZero2 = _interopRequireDefault(mapToZero_1);\n\n\n\nvar _stripStyle2 = _interopRequireDefault(stripStyle_1);\n\n\n\nvar _stepper4 = _interopRequireDefault(stepper_1);\n\n\n\nvar _performanceNow2 = _interopRequireDefault(performanceNow);\n\n\n\nvar _raf2 = _interopRequireDefault(raf_1);\n\n\n\nvar _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);\n\n\n\nvar _react2 = _interopRequireDefault(React);\n\n\n\nvar _propTypes2 = _interopRequireDefault(PropTypes);\n\nvar msPerFrame = 1000 / 60;\n\nvar Motion = (function (_React$Component) {\n  _inherits(Motion, _React$Component);\n\n  _createClass(Motion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),\n      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      onRest: _propTypes2['default'].func\n    },\n    enumerable: true\n  }]);\n\n  function Motion(props) {\n    var _this = this;\n\n    _classCallCheck(this, Motion);\n\n    _React$Component.call(this, props);\n    this.wasAnimating = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyle = null;\n\n    this.clearUnreadPropStyle = function (destStyle) {\n      var dirty = false;\n      var _state = _this.state;\n      var currentStyle = _state.currentStyle;\n      var currentVelocity = _state.currentVelocity;\n      var lastIdealStyle = _state.lastIdealStyle;\n      var lastIdealVelocity = _state.lastIdealVelocity;\n\n      for (var key in destStyle) {\n        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n          continue;\n        }\n\n        var styleValue = destStyle[key];\n        if (typeof styleValue === 'number') {\n          if (!dirty) {\n            dirty = true;\n            currentStyle = _extends({}, currentStyle);\n            currentVelocity = _extends({}, currentVelocity);\n            lastIdealStyle = _extends({}, lastIdealStyle);\n            lastIdealVelocity = _extends({}, lastIdealVelocity);\n          }\n\n          currentStyle[key] = styleValue;\n          currentVelocity[key] = 0;\n          lastIdealStyle[key] = styleValue;\n          lastIdealVelocity[key] = 0;\n        }\n      }\n\n      if (dirty) {\n        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // check if we need to animate in the first place\n        var propsStyle = _this.props.style;\n        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {\n          if (_this.wasAnimating && _this.props.onRest) {\n            _this.props.onRest();\n          }\n\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.wasAnimating = false;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        _this.wasAnimating = true;\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyle = {};\n        var newLastIdealVelocity = {};\n        var newCurrentStyle = {};\n        var newCurrentVelocity = {};\n\n        for (var key in propsStyle) {\n          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {\n            continue;\n          }\n\n          var styleValue = propsStyle[key];\n          if (typeof styleValue === 'number') {\n            newCurrentStyle[key] = styleValue;\n            newCurrentVelocity[key] = 0;\n            newLastIdealStyle[key] = styleValue;\n            newLastIdealVelocity[key] = 0;\n          } else {\n            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];\n            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];\n            for (var i = 0; i < framesToCatchUp; i++) {\n              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              newLastIdealStyleValue = _stepper[0];\n              newLastIdealVelocityValue = _stepper[1];\n            }\n\n            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n            var nextIdealX = _stepper2[0];\n            var nextIdealV = _stepper2[1];\n\n            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n            newLastIdealStyle[key] = newLastIdealStyleValue;\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\n          }\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyle: newCurrentStyle,\n          currentVelocity: newCurrentVelocity,\n          lastIdealStyle: newLastIdealStyle,\n          lastIdealVelocity: newLastIdealVelocity\n        });\n\n        _this.unreadPropStyle = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  Motion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyle = _props.defaultStyle;\n    var style = _props.style;\n\n    var currentStyle = defaultStyle || _stripStyle2['default'](style);\n    var currentVelocity = _mapToZero2['default'](currentStyle);\n    return {\n      currentStyle: currentStyle,\n      currentVelocity: currentVelocity,\n      lastIdealStyle: currentStyle,\n      lastIdealVelocity: currentVelocity\n    };\n  };\n\n  // it's possible that currentStyle's value is stale: if props is immediately\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n  // In reality currentStyle should be 400\n\n  Motion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyle != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyle);\n    }\n\n    this.unreadPropStyle = props.style;\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  Motion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  Motion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyle);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return Motion;\n})(_react2['default'].Component);\n\nexports['default'] = Motion;\nmodule.exports = exports['default'];\n\n// after checking for unreadPropStyle != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)\n});\n\nunwrapExports(Motion_1);\n\nvar StaggeredMotion_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar _mapToZero2 = _interopRequireDefault(mapToZero_1);\n\n\n\nvar _stripStyle2 = _interopRequireDefault(stripStyle_1);\n\n\n\nvar _stepper4 = _interopRequireDefault(stepper_1);\n\n\n\nvar _performanceNow2 = _interopRequireDefault(performanceNow);\n\n\n\nvar _raf2 = _interopRequireDefault(raf_1);\n\n\n\nvar _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);\n\n\n\nvar _react2 = _interopRequireDefault(React);\n\n\n\nvar _propTypes2 = _interopRequireDefault(PropTypes);\n\nvar msPerFrame = 1000 / 60;\n\nfunction shouldStopAnimationAll(currentStyles, styles, currentVelocities) {\n  for (var i = 0; i < currentStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar StaggeredMotion = (function (_React$Component) {\n  _inherits(StaggeredMotion, _React$Component);\n\n  _createClass(StaggeredMotion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),\n      styles: _propTypes2['default'].func.isRequired,\n      children: _propTypes2['default'].func.isRequired\n    },\n    enumerable: true\n  }]);\n\n  function StaggeredMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, StaggeredMotion);\n\n    _React$Component.call(this, props);\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _state = _this.state;\n      var currentStyles = _state.currentStyles;\n      var currentVelocities = _state.currentVelocities;\n      var lastIdealStyles = _state.lastIdealStyles;\n      var lastIdealVelocities = _state.lastIdealVelocities;\n\n      var someDirty = false;\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i];\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              someDirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n          }\n        }\n      }\n\n      if (someDirty) {\n        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        var destStyles = _this.props.styles(_this.state.lastIdealStyles);\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyles = [];\n        var newLastIdealVelocities = [];\n        var newCurrentStyles = [];\n        var newCurrentVelocities = [];\n\n        for (var i = 0; i < destStyles.length; i++) {\n          var destStyle = destStyles[i];\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in destStyle) {\n            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n              continue;\n            }\n\n            var styleValue = destStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];\n              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  StaggeredMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n\n    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);\n    var currentVelocities = currentStyles.map(function (currentStyle) {\n      return _mapToZero2['default'](currentStyle);\n    });\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: currentStyles,\n      lastIdealVelocities: currentVelocities\n    };\n  };\n\n  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  StaggeredMotion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return StaggeredMotion;\n})(_react2['default'].Component);\n\nexports['default'] = StaggeredMotion;\nmodule.exports = exports['default'];\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n\n// after checking for unreadPropStyles != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)\n});\n\nunwrapExports(StaggeredMotion_1);\n\nvar mergeDiff_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports['default'] = mergeDiff;\n\nfunction mergeDiff(prev, next, onRemove) {\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\n  // potentially triggering chrome hash map mode for objs (so it might be faster\n\n  var prevKeyIndex = {};\n  for (var i = 0; i < prev.length; i++) {\n    prevKeyIndex[prev[i].key] = i;\n  }\n  var nextKeyIndex = {};\n  for (var i = 0; i < next.length; i++) {\n    nextKeyIndex[next[i].key] = i;\n  }\n\n  // first, an overly elaborate way of merging prev and next, eliminating\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\n  // This way of writing it saves allocations\n  var ret = [];\n  for (var i = 0; i < next.length; i++) {\n    ret[i] = next[i];\n  }\n  for (var i = 0; i < prev.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\n      // merge in keys that the user desires to kill\n      var fill = onRemove(i, prev[i]);\n      if (fill != null) {\n        ret.push(fill);\n      }\n    }\n  }\n\n  // now all the items all present. Core sorting logic to have the right order\n  return ret.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a.key];\n    var nextOrderB = nextKeyIndex[b.key];\n    var prevOrderA = prevKeyIndex[a.key];\n    var prevOrderB = prevKeyIndex[b.key];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      // both keys in next\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\n    } else if (prevOrderA != null && prevOrderB != null) {\n      // both keys in prev\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\n    } else if (nextOrderA != null) {\n      // key a in next, key b in prev\n\n      // how to determine the order between a and b? We find a \"pivot\" (term\n      // abuse), a key present in both prev and next, that is sandwiched between\n      // a and b. In the context of our above example, if we're comparing a and\n      // d, b's (the only) pivot\n      for (var i = 0; i < next.length; i++) {\n        var pivot = next[i].key;\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n      // pluggable. default to: next bigger than prev\n      return 1;\n    }\n    // prevOrderA, nextOrderB\n    for (var i = 0; i < next.length; i++) {\n      var pivot = next[i].key;\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n        continue;\n      }\n      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {\n        return -1;\n      }\n    }\n    // pluggable. default to: next bigger than prev\n    return -1;\n  });\n}\n\nmodule.exports = exports['default'];\n// to loop through and find a key's index each time), but I no longer care\n});\n\nunwrapExports(mergeDiff_1);\n\nvar TransitionMotion_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\nvar _mapToZero2 = _interopRequireDefault(mapToZero_1);\n\n\n\nvar _stripStyle2 = _interopRequireDefault(stripStyle_1);\n\n\n\nvar _stepper4 = _interopRequireDefault(stepper_1);\n\n\n\nvar _mergeDiff2 = _interopRequireDefault(mergeDiff_1);\n\n\n\nvar _performanceNow2 = _interopRequireDefault(performanceNow);\n\n\n\nvar _raf2 = _interopRequireDefault(raf_1);\n\n\n\nvar _shouldStopAnimation2 = _interopRequireDefault(shouldStopAnimation_1);\n\n\n\nvar _react2 = _interopRequireDefault(React);\n\n\n\nvar _propTypes2 = _interopRequireDefault(PropTypes);\n\nvar msPerFrame = 1000 / 60;\n\n// the children function & (potential) styles function asks as param an\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\n// internal states doesn't contain such a data structure (check the state and\n// TransitionMotionState). So when children function and others ask for such\n// data we need to generate them on the fly by combining mergedPropsStyles and\n// currentStyles/lastIdealStyles\nfunction rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {\n  // Copy the value to a `const` so that Flow understands that the const won't\n  // change and will be non-nullable in the callback below.\n  var cUnreadPropStyles = unreadPropStyles;\n  if (cUnreadPropStyles == null) {\n    return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n      return {\n        key: mergedPropsStyle.key,\n        data: mergedPropsStyle.data,\n        style: plainStyles[i]\n      };\n    });\n  }\n  return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n    for (var j = 0; j < cUnreadPropStyles.length; j++) {\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\n        return {\n          key: cUnreadPropStyles[j].key,\n          data: cUnreadPropStyles[j].data,\n          style: plainStyles[i]\n        };\n      }\n    }\n    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };\n  });\n}\n\nfunction shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {\n  if (mergedPropsStyles.length !== destStyles.length) {\n    return false;\n  }\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\n      return false;\n    }\n  }\n\n  // we have the invariant that mergedPropsStyles and\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\n  // mergeAndSync comment for more info\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// core key merging logic\n\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\n// c}, previous current (interpolating) style is {a, b}\n// **invariant**: current[i] corresponds to merged[i] in terms of key\n\n// steps:\n// turn merged style into {a?, b, c}\n//    add c, value of c is destStyles.c\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\n// turn current (interpolating) style from {a, b} into {a?, b, c}\n//    maybe remove a\n//    certainly add c, value of c is willEnter(c)\n// loop over merged and construct new current\n// dest doesn't change, that's owner's\nfunction mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {\n  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {\n    var leavingStyle = willLeave(oldMergedPropsStyle);\n    if (leavingStyle == null) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };\n  });\n\n  var newCurrentStyles = [];\n  var newCurrentVelocities = [];\n  var newLastIdealStyles = [];\n  var newLastIdealVelocities = [];\n  for (var i = 0; i < newMergedPropsStyles.length; i++) {\n    var newMergedPropsStyleCell = newMergedPropsStyles[i];\n    var foundOldIndex = null;\n    for (var j = 0; j < oldMergedPropsStyles.length; j++) {\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\n        foundOldIndex = j;\n        break;\n      }\n    }\n    // TODO: key search code\n    if (foundOldIndex == null) {\n      var plainStyle = willEnter(newMergedPropsStyleCell);\n      newCurrentStyles[i] = plainStyle;\n      newLastIdealStyles[i] = plainStyle;\n\n      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);\n      newCurrentVelocities[i] = velocity;\n      newLastIdealVelocities[i] = velocity;\n    } else {\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\n    }\n  }\n\n  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];\n}\n\nvar TransitionMotion = (function (_React$Component) {\n  _inherits(TransitionMotion, _React$Component);\n\n  _createClass(TransitionMotion, null, [{\n    key: 'propTypes',\n    value: {\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired\n      })),\n      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired\n      }))]).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      willEnter: _propTypes2['default'].func,\n      willLeave: _propTypes2['default'].func,\n      didLeave: _propTypes2['default'].func\n    },\n    enumerable: true\n  }, {\n    key: 'defaultProps',\n    value: {\n      willEnter: function willEnter(styleThatEntered) {\n        return _stripStyle2['default'](styleThatEntered.style);\n      },\n      // recall: returning null makes the current unmounting TransitionStyle\n      // disappear immediately\n      willLeave: function willLeave() {\n        return null;\n      },\n      didLeave: function didLeave() {}\n    },\n    enumerable: true\n  }]);\n\n  function TransitionMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, TransitionMotion);\n\n    _React$Component.call(this, props);\n    this.unmounting = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n      var mergedPropsStyles = _mergeAndSync[0];\n      var currentStyles = _mergeAndSync[1];\n      var currentVelocities = _mergeAndSync[2];\n      var lastIdealStyles = _mergeAndSync[3];\n      var lastIdealVelocities = _mergeAndSync[4];\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i].style;\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n              mergedPropsStyles[i] = {\n                key: mergedPropsStyles[i].key,\n                data: mergedPropsStyles[i].data,\n                style: _extends({}, mergedPropsStyles[i].style)\n              };\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n            mergedPropsStyles[i].style[key] = styleValue;\n          }\n        }\n      }\n\n      // unlike the other 2 components, we can't detect staleness and optionally\n      // opt out of setState here. each style object's data might contain new\n      // stuff we're not/cannot compare\n      _this.setState({\n        currentStyles: currentStyles,\n        currentVelocities: currentVelocities,\n        mergedPropsStyles: mergedPropsStyles,\n        lastIdealStyles: lastIdealStyles,\n        lastIdealVelocities: lastIdealVelocities\n      });\n    };\n\n    this.startAnimationIfNecessary = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // https://github.com/chenglou/react-motion/pull/420\n        // > if execution passes the conditional if (this.unmounting), then\n        // executes async defaultRaf and after that component unmounts and after\n        // that the callback of defaultRaf is called, then setState will be called\n        // on unmounted component.\n        if (_this.unmounting) {\n          return;\n        }\n\n        var propStyles = _this.props.styles;\n        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n        var newMergedPropsStyles = _mergeAndSync2[0];\n        var newCurrentStyles = _mergeAndSync2[1];\n        var newCurrentVelocities = _mergeAndSync2[2];\n        var newLastIdealStyles = _mergeAndSync2[3];\n        var newLastIdealVelocities = _mergeAndSync2[4];\n\n        for (var i = 0; i < newMergedPropsStyles.length; i++) {\n          var newMergedPropsStyle = newMergedPropsStyles[i].style;\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in newMergedPropsStyle) {\n            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\n              continue;\n            }\n\n            var styleValue = newMergedPropsStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = newLastIdealStyles[i][key];\n              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities,\n          mergedPropsStyles: newMergedPropsStyles\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  TransitionMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var willEnter = _props.willEnter;\n    var willLeave = _props.willLeave;\n    var didLeave = _props.didLeave;\n\n    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;\n\n    // this is special. for the first time around, we don't have a comparison\n    // between last (no last) and current merged props. we'll compute last so:\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\n    // fabricate last as {a, b}\n    var oldMergedPropsStyles = undefined;\n    if (defaultStyles == null) {\n      oldMergedPropsStyles = destStyles;\n    } else {\n      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {\n        // TODO: key search code\n        for (var i = 0; i < destStyles.length; i++) {\n          if (destStyles[i].key === defaultStyleCell.key) {\n            return destStyles[i];\n          }\n        }\n        return defaultStyleCell;\n      });\n    }\n    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    });\n    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    });\n\n    var _mergeAndSync3 = mergeAndSync(\n    // Because this is an old-style createReactClass component, Flow doesn't\n    // understand that the willEnter and willLeave props have default values\n    // and will always be present.\n    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really\n    oldCurrentVelocities);\n\n    var mergedPropsStyles = _mergeAndSync3[0];\n    var currentStyles = _mergeAndSync3[1];\n    var currentVelocities = _mergeAndSync3[2];\n    var lastIdealStyles = _mergeAndSync3[3];\n    var lastIdealVelocities = _mergeAndSync3[4];\n    // oldLastIdealVelocities really\n\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: lastIdealStyles,\n      lastIdealVelocities: lastIdealVelocities,\n      mergedPropsStyles: mergedPropsStyles\n    };\n  };\n\n  // after checking for unreadPropStyles != null, we manually go set the\n  // non-interpolating values (those that are a number, without a spring\n  // config)\n\n  TransitionMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    var styles = props.styles;\n    if (typeof styles === 'function') {\n      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));\n    } else {\n      this.unreadPropStyles = styles;\n    }\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounting = true;\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  TransitionMotion.prototype.render = function render() {\n    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);\n    var renderedChildren = this.props.children(hydratedStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return TransitionMotion;\n})(_react2['default'].Component);\n\nexports['default'] = TransitionMotion;\nmodule.exports = exports['default'];\n\n// list of styles, each containing interpolating values. Part of what's passed\n// to children function. Notice that this is\n// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\n// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\n// contains the key & data info (so that we only have a single source of truth\n// for these, and to save space). Check the comment for `rehydrateStyles` to\n// see how we regenerate the entirety of what's passed to children function\n\n// the array that keeps track of currently rendered stuff! Including stuff\n// that you've unmounted but that's still animating. This is where it lives\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n});\n\nunwrapExports(TransitionMotion_1);\n\nvar presets = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports[\"default\"] = {\n  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided\n  gentle: { stiffness: 120, damping: 14 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 210, damping: 20 }\n};\nmodule.exports = exports[\"default\"];\n});\n\nunwrapExports(presets);\n\nvar spring_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = spring;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\n\nvar _presets2 = _interopRequireDefault(presets);\n\nvar defaultConfig = _extends({}, _presets2['default'].noWobble, {\n  precision: 0.01\n});\n\nfunction spring(val, config) {\n  return _extends({}, defaultConfig, config, { val: val });\n}\n\nmodule.exports = exports['default'];\n});\n\nunwrapExports(spring_1);\n\nvar reorderKeys_1 = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\nexports['default'] = reorderKeys;\n\nvar hasWarned = false;\n\nfunction reorderKeys() {\n  if (process.env.NODE_ENV === 'development') {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\\'s new styles array API.');\n    }\n  }\n}\n\nmodule.exports = exports['default'];\n});\n\nunwrapExports(reorderKeys_1);\n\nvar reactMotion = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\n\n\nexports.Motion = _interopRequire(Motion_1);\n\n\n\nexports.StaggeredMotion = _interopRequire(StaggeredMotion_1);\n\n\n\nexports.TransitionMotion = _interopRequire(TransitionMotion_1);\n\n\n\nexports.spring = _interopRequire(spring_1);\n\n\n\nexports.presets = _interopRequire(presets);\n\n\n\nexports.stripStyle = _interopRequire(stripStyle_1);\n\n// deprecated, dummy warning function\n\n\n\nexports.reorderKeys = _interopRequire(reorderKeys_1);\n});\n\nunwrapExports(reactMotion);\nvar reactMotion_1 = reactMotion.Motion;\nvar reactMotion_2 = reactMotion.StaggeredMotion;\nvar reactMotion_3 = reactMotion.TransitionMotion;\nvar reactMotion_4 = reactMotion.spring;\nvar reactMotion_5 = reactMotion.presets;\nvar reactMotion_6 = reactMotion.stripStyle;\nvar reactMotion_7 = reactMotion.reorderKeys;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar ScrollHorizontal = function (_Component) {\n  inherits(ScrollHorizontal, _Component);\n\n  function ScrollHorizontal(props) {\n    classCallCheck(this, ScrollHorizontal);\n\n    var _this = possibleConstructorReturn(this, (ScrollHorizontal.__proto__ || Object.getPrototypeOf(ScrollHorizontal)).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.animValues !== _this.props.animValues) {\n        var currentAnimValues = _this.state.animValues;\n        _this.setState({\n          animValues: currentAnimValues + _this.props.animValues\n        }, _this.calculate());\n      } else {\n        _this.calculate();\n      }\n    };\n\n    _this.state = { animValues: 0 };\n\n    _this.onScrollStart = _this.onScrollStart.bind(_this);\n    _this.resetMin = _this.resetMin.bind(_this);\n    _this.resetMax = _this.resetMax.bind(_this);\n    return _this;\n  }\n\n  createClass(ScrollHorizontal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // Place the 'lock__' class on the HTML element - if toggled\n      if (this.props.pageLock) {\n        var orig = document.firstElementChild.className;\n        document.firstElementChild.className = orig + (orig ? ' ' : '') + 'locked__';\n      }\n\n      DOM.findDOMNode(this.hScrollParent).addEventListener('wheel', this.onScrollStart, { passive: false });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.pageLock) {\n        document.firstElementChild.className = document.firstElementChild.className.replace(/ ?locked__/, '');\n      }\n\n      DOM.findDOMNode(this.hScrollParent).removeEventListener('wheel', this.onScrollStart);\n    }\n  }, {\n    key: 'onScrollStart',\n    value: function onScrollStart(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      // If scrolling on x axis, change to y axis. Otherwise, just get the y deltas.\n      // (Basically, this for Apple mice that allow horizontal scrolling by default)\n      var rawData = e.deltaY ? e.deltaY : e.deltaX;\n      var mouseY = Math.floor(rawData);\n\n      // Bring in the existing animation values\n      var animationValue = this.state.animValues;\n      var newAnimationValue = animationValue + mouseY;\n      var newAnimationValueNegative = animationValue - mouseY;\n\n      if (!this.caniscroll()) {\n        return;\n      }\n\n      var scrolling = function scrolling() {\n        _this2.props.reverseScroll ? _this2.setState({ animValues: newAnimationValueNegative }) : _this2.setState({ animValues: newAnimationValue });\n      };\n\n      // Begin Scrolling Animation\n      window.requestAnimationFrame(scrolling);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.calculate.timer !== void 0 && this.props.children === nextProps.children && this.state.animValues === nextState.animValues && this.props.animValues === nextProps.animValues) {\n        return false;\n      }\n\n      if (this.props.children === nextProps.children && this.caniscroll() === false) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'caniscroll',\n    value: function caniscroll() {\n      var el = DOM.findDOMNode(this.hScrollParent);\n      var rect = el.getBoundingClientRect();\n      var scroller = el.firstElementChild;\n\n      return scroller.offsetLeft < rect.left || scroller.offsetLeft + scroller.offsetWidth > rect.width;\n    }\n  }, {\n    key: 'calculate',\n    value: function calculate() {\n      var _this3 = this;\n\n      // Cancel the previous calculate\n      clearTimeout(this.calculate.timer);\n\n      // Lazy to calculate, prevent max recurse call\n      this.calculate.timer = setTimeout(function () {\n        // Calculate the bounds of the scroll area\n        var el = DOM.findDOMNode(_this3.hScrollParent);\n\n        var max = el.lastElementChild.scrollWidth;\n        var win = el.offsetWidth;\n\n        // Get the new animation values\n        var curr = _this3.state.animValues;\n\n        // Establish the bounds. We do this every time b/c it might change.\n        var bounds = -(max - win);\n\n        // Logic to hold everything in place\n        if (curr >= 1) {\n          _this3.resetMin();\n        } else if (curr <= bounds) {\n          var x = bounds + 1;\n          _this3.resetMax(x);\n        }\n      });\n    }\n  }, {\n    key: 'resetMin',\n    value: function resetMin() {\n      this.setState({ animValues: 0 });\n    }\n  }, {\n    key: 'resetMax',\n    value: function resetMax(x) {\n      this.setState({ animValues: x });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          config = _props.config,\n          style = _props.style,\n          children = _props.children;\n      var width = style.width,\n          height = style.height;\n\n      var springConfig = config || reactMotion_5.noWobble;\n\n      // Styles\n      var styles = _extends({\n        height: height || '100%',\n        width: width || '100%',\n        overflow: 'hidden',\n        position: 'relative'\n      }, style);\n\n      return React.createElement(\n        'div',\n        {\n          ref: function ref(r) {\n            _this4.hScrollParent = r;\n          },\n          style: styles,\n          className: 'scroll-horizontal ' + (this.props.className || '')\n        },\n        React.createElement(\n          reactMotion_1,\n          { style: { z: reactMotion_4(this.state.animValues, springConfig) } },\n          function (_ref) {\n            var z = _ref.z;\n\n            var scrollingElementStyles = {\n              transform: 'translate3d(' + z + 'px, 0,0)',\n              display: 'inline-flex',\n              height: '100%',\n              position: 'absolute',\n              willChange: 'transform'\n            };\n\n            return React.createElement(\n              'div',\n              { style: scrollingElementStyles },\n              children\n            );\n          }\n        )\n      );\n    }\n  }]);\n  return ScrollHorizontal;\n}(Component);\n\n\nScrollHorizontal.propTypes = {\n  reverseScroll: PropTypes.bool,\n  pageLock: PropTypes.bool,\n  config: PropTypes.object,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.array.isRequired,\n  animValues: PropTypes.number\n};\n\nScrollHorizontal.defaultProps = {\n  reverseScroll: false,\n  pageLock: false,\n  config: null,\n  style: { width: '100%', height: '100%' },\n  className: null,\n  animValues: null\n};\n\nexport default ScrollHorizontal;\n","import React, { useState, useEffect, useRef } from 'react';\nimport HorizontalScroll from 'react-scroll-horizontal'\nimport EventCard from '../components/events';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\nimport './esummit.css';\n\nexport default function Events() {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            try {\n                const response = await fetch('https://script.google.com/macros/s/AKfycbzXU8rKk32OXOLJRCJQuuN9l9JNyFxUoWio7M1AGp5rD6sjWkl3RpFIV0Yy4Dt8u24f0w/exec');\n                const data = await response.json();\n                setEvents(data);\n            } catch (error) {\n                console.error('Error fetching events:', error);\n            }\n        };\n\n        fetchEvents();\n    }, []);\n    const ref = useRef(null);\n    const [containerWidth, setWidth] = useState(160 + \"%\");\n    const [animationState, setPlay] = useState(\"paused\");\n    useEffect(() => {\n      if (ref.current) {\n        setWidth(ref.current.scrollWidth + \"px\");\n        setPlay(\"running\");\n      }\n    }, []);\n\n    return (\n           <div className=\"d-flex\" id='events' ref={ref} style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', width: `${containerWidth}`, animationPlayState: animationState, marginBottom: '4rem' }}>\n                    {events.map((event, index) => (\n                        <EventCard key={index} event={event}  />\n                    ))}\n            </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport './esummit.css'\nimport IITP from '../static/IITP.jpg'\nimport theme from '../static/theme.jpg'\nimport Navbar from '../components/navbar';\nimport EventCard from '../components/events'\nimport Footer from '../components/footer';\nimport Events from './Events';\n\nexport default function Esummit() {\n\n\n    const [countdown, setCountdown] = useState({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n    });\n\n    useEffect(() => {\n        const countdownDate = new Date(\"2024-03-15T00:00:00\");\n        const interval = setInterval(() => {\n            const now = new Date().getTime();\n            const distance = countdownDate - now;\n\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            setCountdown({ days, hours, minutes, seconds });\n\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            }\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n    \n \n    return (\n        <div className='background-container' style={{ width: '100%', maxWidth: '100vw', overflowX: 'hidden' }}>\n            <Navbar />\n\n            {/* theme */}\n\n            <div className='center-img' >\n                <img src={theme} alt=\"\" style={{objectFit: 'cover' }} />\n            </div>\n\n\n            {/* countdown */}\n            <div style={{display: 'inlinr-block',justifyContent: 'center', alignItems: 'center', height: '20rem', margin: '5rem 3.05rem', overflow: 'hidden'}}>\n                <div style={{display: 'flex', justifyContent: 'space-around', width: '100%', height:'100%' }}>\n                    <div style={{width: '90%', display: 'flex', height: '80%', position: 'relative', boxShadow: '-5px -5px 250px rgba(255, 255, 255, 0.02) inset', borderRadius: 50, border: '4px rgba(255, 255, 255, 0.40) solid', backdropFilter: 'blur(42px)' }}>\n                        <div style={{width: '50%', height: '100%', marginLeft: '8rem', alignItems: 'center', marginTop: '2vh'}}>\n                            <span style={{color: 'white', fontSize: 'clamp(4px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>Count </span>\n                            <span style={{color: 'white', fontSize: 'clamp(4px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>Every<br/></span>\n                            <span style={{color: 'white', fontSize: 'clamp(4px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>Second</span>\n                            <span style={{color: 'white', fontSize: 'clamp(4px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}> Until<br/>the </span>\n                            <span style={{color: 'white', fontSize: 'clamp(4px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>Summit</span>\n                        </div>\n                        <div style={{marginTop: '2vh', marginBottom:'4rem', display: 'flex', }}>\n                            <div style={{color: 'white', fontSize: 'clamp(50px, 5vw, 40px)', fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word', display: 'flex'}}>\n                                <div style={{marginRight: '2rem'}}>\n                                    <div>\n                                        {countdown.days} :\n                                    </div>\n                                    <div style={{}}>\n                                        <span style={{color: 'white', fontSize: 25, fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>[Days]</span>\n                                    </div>\n                                </div>\n                                <div style={{marginRight:'2rem'}}>\n                                    <div>\n                                        {countdown.hours} :\n                                    </div>\n                                    <div style={{}}>\n                                        <span style={{color: 'white', fontSize: 25, fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>[Hours]</span>\n                                    </div>             \n                                </div>\n                                <div style={{marginRight:'2rem'}}>\n                                    <div>\n                                         {countdown.minutes} :\n                                    </div>\n                                    <div style={{}}>\n                                        <span style={{color: 'white', fontSize: 25, fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>[Minutes]</span>\n                                    </div>             \n                                </div>\n                                <div style={{marginRight:'2rem'}}>\n                                    <div>\n                                        {countdown.seconds}\n                                    </div>\n                                    <div style={{}}>\n                                        <span style={{color: 'white', fontSize: 25, fontFamily: 'Inter', fontWeight: '500', wordWrap: 'break-word'}}>[Seconds]</span>\n                                    </div>             \n                                </div>   \n                            </div>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div style={{ width: '100%', paddingLeft: '2rem', paddingRight: '2rem', marginBottom: '5rem', display: 'flex', justifyContent: 'space-between' }}>\n                <div style={{marginTop: '2em', marginRight: '2rem'}}>\n                    <div style={{fontSize: '5rem', color: 'white', textAlign: 'center', marginBottom: '2rem'}}>\n                        About the E-Summit\n                    </div>\n                    <div style={{fontSize: '1.5rem', color: 'white', textAlign: 'center'}}>\n                        E-Summit 2k24 by E-Cell, IIT Patna is your gateway to an inspiring week of entrepreneurial exploration. From March 15th to 17th, immerse yourself in dynamic events, enlightening lectures, and thrilling competitions. Discover the art of turning innovative ideas into reality through case studies, pitching sessions, and engaging auctions. \n                    </div>\n                    <div style={{fontSize: '1.5rem', color: 'white', textAlign: 'center'}}>\n                        This summit is your opportunity to glean insights from seasoned professionals, refine your skills, and ignite your entrepreneurial journey. Register now to join a community of like-minded individuals and set your entrepreneurial spirit ablaze!                    \n                    </div>\n                </div>\n                <div>\n                    <img src={IITP} alt=\"IIT Patna\" style={{ width: '100%', height: 'auto', borderRadius: '50px', boxShadow: '0px 0px 20px 5px rgba(255, 255, 255, 0.2)', marginTop: '2rem' }} />\n                </div>\n                \n            </div>\n            <div style={{display: 'flex', justifyContent: 'space-around', width: '100%', marginBottom: '2rem'}}>\n                <svg width=\"385\" height=\"313\" viewBox=\"0 0 385 313\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <g filter=\"url(#filter0_bi_211_519)\">\n                    <rect width=\"387\" height=\"313\" fill=\"url(#paint0_radial_211_519)\" fill-opacity=\"0.24\"/>\n                    <path d=\"M368.994 169.05C368.994 168.79 368.722 168.62 368.488 168.733C364.857 170.487 361.312 172.177 360.406 172.636C354.206 175.785 349.543 178.664 345.969 181.799C342.705 184.655 338.692 186.628 332.853 188.591C332.005 188.879 331.122 189.167 330.028 189.503L327.249 190.376C321.528 192.176 318.591 193.386 316.146 195.224C313.672 197.087 310.501 198.392 306.336 199.467C305.195 199.755 304.002 200.029 302.551 200.331L298.959 201.066C295.865 201.714 294.104 202.203 292.793 202.88C290.992 203.802 288.915 204.445 285.341 205.294C284.402 205.517 283.462 205.735 282.521 205.947C281.328 206.226 280.415 206.446 279.496 206.677C277.271 207.227 275.084 207.876 272.945 208.621C271.365 209.173 269.727 210.507 267.808 212.653C266.547 214.09 265.347 215.563 264.211 217.069C260.847 221.422 259.776 222.704 258.22 224.033C257.375 224.753 256.476 225.429 255.529 226.059C254.166 226.971 249.451 229.678 248.621 230.254C247.757 230.8 247.029 231.476 246.474 232.246C245.748 233.35 245.362 234.44 244.848 236.503C243.578 241.596 242.788 243.612 240.051 247.111C237.67 250.15 236.073 251.854 234.3 253.346C234.025 253.577 233.744 253.807 233.423 254.057L231.229 255.766C230.252 256.534 229.369 257.263 228.386 258.118C225.71 260.42 223.729 263.205 222.6 266.249C221.138 270.151 221.009 273.674 221.571 279.314C221.846 282.108 221.869 282.367 221.869 283.24C221.869 288.285 221.939 291.655 222.238 295.615C222.372 297.471 222.548 299.196 222.773 300.777C222.791 300.905 222.901 301 223.031 301C223.189 301 223.311 300.86 223.29 300.703C222.661 296.149 222.454 290.366 222.454 283.24C222.454 282.348 222.431 282.088 222.15 279.276C221.6 273.693 221.729 270.218 223.162 266.388C224.262 263.414 226.195 260.694 228.807 258.444C229.784 257.599 230.667 256.874 231.633 256.116C232.001 255.828 233.464 254.695 233.826 254.402C234.127 254.166 234.423 253.926 234.715 253.682C236.523 252.166 238.144 250.438 240.542 247.37C243.332 243.809 244.14 241.75 245.421 236.599C245.924 234.579 246.298 233.528 246.989 232.472C247.386 231.872 248.036 231.281 248.995 230.619C249.802 230.067 254.512 227.355 255.898 226.433C256.898 225.761 257.805 225.084 258.647 224.369C260.239 223.001 261.315 221.71 264.708 217.328C265.835 215.83 267.025 214.365 268.276 212.936C270.148 210.858 271.728 209.571 273.173 209.062C275.22 208.342 277.303 207.733 279.666 207.133C281.141 206.76 282.623 206.408 284.112 206.077L285.504 205.755C289.125 204.896 291.243 204.238 293.098 203.283C294.349 202.645 296.069 202.165 299.105 201.531L302.697 200.797C304.16 200.494 305.359 200.221 306.511 199.923C310.747 198.834 313.993 197.495 316.544 195.579C318.913 193.794 321.809 192.603 327.46 190.827L330.239 189.954C331.332 189.608 332.222 189.325 333.076 189.037C338.984 187.045 343.062 185.044 346.39 182.125C349.929 179.029 354.551 176.173 360.717 173.044C361.392 172.702 363.577 171.655 366.169 170.408C367.897 169.576 368.994 167.827 368.994 165.909V149.505C368.994 146.293 364.321 144.989 361.565 146.639C360.096 147.513 358.418 148.569 356.276 149.961C355.058 150.754 353.843 151.551 352.632 152.351L351.889 152.841C350.94 153.466 349.991 154.09 349.04 154.713C344.623 157.593 341.494 159.537 338.738 161.044C336.925 162.033 336.48 162.378 334.023 164.466C330.607 167.38 327.167 168.604 316.971 169.722C310.361 170.442 305.248 172.079 298.983 175.036C298.017 175.487 294.73 177.085 294.905 177.004C293.326 177.762 292.162 178.295 291.021 178.76C287.727 180.104 284.896 180.762 281.831 180.762C271.81 180.762 257.589 186.287 251.628 191.72C244.578 198.152 233.247 205.016 225.157 206.677C220.828 207.565 218.225 210.061 216.943 213.728C216.206 215.84 216.019 217.702 216.019 220.361C216.019 220.755 216.025 220.832 216.16 222.104C216.423 224.59 216.364 226.289 215.709 228.468C214.814 231.444 212.849 234.516 209.514 237.795C201.4 245.787 196.13 260.153 196.13 272.2C196.13 273.348 196.141 274.245 196.165 276.4C196.235 281.584 196.223 283.984 196.036 286.936C195.713 292.227 194.839 296.757 193.183 300.825C193.14 300.931 193.036 301 192.922 301C192.72 301 192.583 300.794 192.658 300.607C194.274 296.599 195.134 292.131 195.451 286.912C195.632 283.97 195.65 281.584 195.58 276.4C195.556 274.25 195.545 273.348 195.545 272.2C195.545 260.047 200.85 245.575 209.07 237.487C212.345 234.262 214.264 231.252 215.142 228.353C215.779 226.241 215.832 224.585 215.575 222.147C215.44 220.851 215.434 220.774 215.434 220.361C215.434 217.664 215.621 215.768 216.382 213.593C217.716 209.778 220.459 207.142 225.016 206.206C232.972 204.574 244.216 197.763 251.195 191.403C257.261 185.869 271.64 180.282 281.831 180.282C284.797 180.282 287.546 179.644 290.758 178.328C291.887 177.868 293.039 177.344 294.607 176.591C294.431 176.677 297.725 175.074 298.69 174.618C305.02 171.637 310.191 169.977 316.889 169.242C326.968 168.138 330.285 166.962 333.602 164.135C336.088 162.018 336.551 161.658 338.411 160.641C341.149 159.148 344.267 157.214 348.677 154.334C349.627 153.713 350.575 153.091 351.521 152.466L352.269 151.977C353.483 151.179 354.698 150.382 355.914 149.587C358.061 148.195 359.745 147.129 361.22 146.251C364.073 144.541 368.994 145.856 368.994 149.182V169.05ZM368.994 113.025C368.994 113.156 368.889 113.262 368.759 113.266C368.468 113.276 368.166 113.297 367.853 113.323C364.267 113.626 359.763 114.979 355.083 116.899C352.954 117.773 350.134 118.181 346.794 118.2C344.044 118.219 341.108 117.974 338.177 117.561C337.182 117.417 336.27 117.269 335.445 117.115C334.76 116.992 334.066 116.9 333.368 116.841C330.126 116.619 326.875 116.478 323.622 116.419C317.527 116.342 313.56 116.774 313.11 117.729C312.888 118.195 313.461 118.953 314.883 120.067C315.473 120.533 316.181 121.041 317.246 121.771C318.179 122.416 319.113 123.059 320.048 123.701C320.861 124.277 321.862 124.622 323.265 124.901C323.675 124.977 323.769 124.997 324.81 125.16C326.875 125.496 327.752 125.76 328.408 126.422C329.232 127.267 329.227 128.601 328.32 130.684C326.892 133.963 324.974 135.508 322.359 135.643C320.235 135.753 317.913 135.024 313.865 133.214C311.215 132.028 309.875 129.71 308.998 125.889C308.898 125.472 308.81 125.035 308.705 124.517L308.454 123.192C307.839 120.033 307.342 118.776 306.271 118.339C305.798 118.147 305.341 117.984 304.891 117.859C303.563 117.489 302.2 117.369 300.153 117.417C298.813 117.451 291.553 117.897 292.097 117.864C280.076 118.521 275.249 120.288 270.4 125.059C269.544 125.912 268.715 126.782 267.914 127.67L266.568 129.153L265.1 130.747C262.701 133.32 260.97 134.817 259.022 136.084C258.642 136.334 258.244 136.584 257.776 136.862L255.371 138.273C254.342 138.886 253.335 139.525 252.353 140.188C249.691 141.983 246.655 144.316 242.847 147.571C238.021 151.689 235.956 154.07 236.002 155.226C236.043 156.018 236.962 156.239 239.975 156.369C240.916 156.412 241.232 156.426 241.718 156.465C243.444 156.58 244.695 156.815 245.702 157.271C250.077 159.263 252.505 160.756 253.862 162.83C255.793 165.781 254.33 169.012 248.662 172.554C243.818 175.578 242.168 177.532 242.045 179.735C242.01 180.296 242.045 180.661 242.198 181.861C242.601 184.967 242.344 186.973 240.56 190.223C239.893 191.489 239.078 192.7 238.126 193.837C236.476 195.743 234.926 196.592 231.925 197.528C231.674 197.605 229.971 198.119 229.427 198.291C228.374 198.618 227.45 198.944 226.496 199.319C224.051 200.278 221.582 201.526 218.833 203.274C213.896 206.398 211.094 210.262 209.485 215.302C208.841 217.318 208.578 218.571 207.847 222.603C207.11 226.731 206.577 228.67 205.46 230.547C204.232 232.601 198.481 243.31 197.873 244.409C196.682 246.574 195.439 248.72 194.146 250.846C191.766 254.738 189.695 257.599 187.869 259.394C184.722 262.495 182.616 266.292 179.814 273.036C179.442 273.931 179.073 274.827 178.709 275.724C177.656 278.292 176.977 279.852 176.216 281.412C172.63 288.765 161.34 294.04 149.038 294.04C142.486 294.04 136.999 292.725 130.891 289.936C127.615 288.434 128.23 288.775 117.87 282.957C109.487 278.253 107.515 277.807 105.895 279.645C105.678 279.885 104.836 280.96 104.824 280.975C103.947 281.976 102.981 282.922 101.934 283.807C101.507 284.186 98.7053 286.624 97.857 287.383C96.4647 288.631 95.3416 289.691 94.3588 290.709C93.2198 291.849 92.2242 293.081 91.387 294.386C90.6324 295.619 90.2755 296.906 89.831 299.474C89.7561 299.903 89.6805 300.332 89.6043 300.762C89.5798 300.9 89.4599 301 89.3199 301C89.1407 301 89.0047 300.839 89.0352 300.662L89.2518 299.406C89.7023 296.79 90.0708 295.47 90.8605 294.175C91.717 292.839 92.7362 291.578 93.9025 290.411C94.897 289.384 96.026 288.309 97.43 287.061C98.2782 286.298 101.08 283.855 101.502 283.48C102.494 282.641 103.412 281.745 104.25 280.8C104.305 280.737 104.358 280.674 104.41 280.608C104.627 280.336 105.235 279.574 105.421 279.362C107.322 277.202 109.563 277.711 118.197 282.564C128.534 288.362 127.92 288.026 131.178 289.514C137.203 292.264 142.585 293.56 149.038 293.56C161.118 293.56 172.186 288.391 175.678 281.229C176.571 279.361 177.398 277.472 178.159 275.565C178.526 274.669 178.892 273.773 179.258 272.877C182.084 266.081 184.213 262.25 187.425 259.087C189.209 257.33 191.262 254.494 193.626 250.634C194.778 248.748 195.989 246.646 197.34 244.212C197.943 243.118 203.705 232.4 204.934 230.336C206.016 228.516 206.542 226.611 207.274 222.536C207.999 218.485 208.268 217.222 208.917 215.182C210.555 210.046 213.428 206.091 218.47 202.894C220.879 201.334 223.486 199.99 226.245 198.887C227.216 198.503 228.158 198.176 229.217 197.84C229.766 197.667 231.475 197.154 231.72 197.077C234.616 196.175 236.073 195.373 237.652 193.559C238.442 192.647 239.22 191.495 240.027 190.021C241.765 186.863 242.01 184.938 241.618 181.909C241.49 181.181 241.437 180.446 241.46 179.711C241.589 177.34 243.338 175.276 248.305 172.175C253.763 168.762 255.126 165.772 253.347 163.055C252.06 161.092 249.691 159.638 245.421 157.694C244.502 157.271 243.315 157.055 241.665 156.94C241.197 156.906 240.881 156.892 239.939 156.849C236.564 156.705 235.476 156.441 235.423 155.246C235.365 153.897 237.471 151.468 242.426 147.235C246.246 143.971 249.299 141.623 251.979 139.819C253.026 139.113 253.979 138.513 255.021 137.884L257.431 136.473C257.893 136.195 258.285 135.955 258.659 135.71C260.566 134.462 262.263 132.998 264.632 130.459C265.123 129.93 265.61 129.399 266.094 128.865L267.446 127.382C268.499 126.235 269.224 125.462 269.955 124.752C274.91 119.87 279.888 118.051 291.758 117.408C291.5 117.417 298.778 116.976 300.135 116.937C302.253 116.889 303.674 117.014 305.084 117.408C305.552 117.537 306.032 117.705 306.529 117.907C307.857 118.454 308.383 119.765 309.027 123.115L309.284 124.44C309.384 124.953 309.477 125.385 309.577 125.798C310.419 129.489 311.694 131.697 314.14 132.792C318.094 134.558 320.34 135.264 322.324 135.163C324.664 135.043 326.413 133.641 327.764 130.521C328.612 128.582 328.618 127.406 327.951 126.72C327.425 126.182 326.617 125.942 324.693 125.63C324.17 125.553 323.649 125.465 323.131 125.366C321.645 125.078 320.563 124.694 319.662 124.065C318.74 123.414 317.807 122.773 316.866 122.141C316.048 121.586 315.252 121.01 314.479 120.413C312.882 119.165 312.221 118.286 312.56 117.557C313.157 116.289 317.135 115.857 323.634 115.939C326.901 115.983 330.166 116.123 333.421 116.361C335.035 116.549 335.293 116.597 335.574 116.649C336.393 116.793 337.299 116.947 338.276 117.086C341.087 117.503 343.937 117.715 346.794 117.72C350.046 117.701 352.784 117.307 354.826 116.472C359.564 114.528 364.121 113.16 367.795 112.843C368.118 112.817 368.441 112.799 368.75 112.788C368.884 112.783 368.994 112.891 368.994 113.025ZM368.996 64.8103C368.995 64.8103 368.994 64.8112 368.994 64.8124V65.3649C368.994 65.4729 368.962 65.5788 368.903 65.669C363.891 73.3119 358.869 79.7325 355.159 82.7716C353.293 84.3076 350.702 85.1236 347.238 85.4404C344.635 85.6708 342.395 85.6324 336.018 85.3444C330.221 85.0804 327.056 85.1332 324.014 85.7188C321.132 86.2724 318.196 86.6114 315.239 86.7316L313.923 86.7988C306.617 87.1588 302.592 87.6532 294.782 89.5539C292.15 90.1923 289.359 90.7491 286.417 91.2243C280.119 92.2069 273.748 92.8435 267.346 93.1299C262.924 93.3459 259.619 93.4035 255.506 93.4035C252.347 93.4035 248.545 94.1762 244.976 95.8898C240.121 98.2274 236.166 102.067 233.551 107.65C232.814 109.273 231.922 110.846 230.884 112.354C228.778 115.329 226.836 116.669 223.057 118.2L220.699 119.141C217.473 120.426 214.487 122.083 211.831 124.061C207.034 127.579 203.805 132.043 198.645 141.148L197.428 143.303C193.158 150.839 190.701 154.487 187.279 157.641C182.774 161.798 175.433 164.562 163.698 167.279C161.141 167.869 152.559 169.717 152.442 169.741C148.394 170.639 145.61 171.345 143.299 172.103C137.127 174.129 132.354 177.152 122.017 184.832L121.023 185.572C116.003 189.296 113.178 191.283 110.019 193.194C107.708 194.586 105.339 195.915 102.432 197.471C101.227 198.114 96.4062 200.638 95.2187 201.282C88.4796 204.882 84.3788 207.541 80.8162 210.92C79.4103 212.242 78.1496 213.664 77.0489 215.168C74.6329 218.485 73.381 221.48 71.667 227.22L70.7661 230.225C70.4151 231.401 70.0934 232.404 69.7599 233.384C68.0225 238.519 65.7235 241.716 61.1138 246.3L58.7153 248.681C57.8749 249.514 57.0576 250.362 56.2642 251.225C55.4127 252.141 54.7343 253.157 54.2518 254.239C53.5733 255.79 53.3627 257.071 53.1579 259.97C52.8186 264.794 52.3272 267.189 50.4494 270.852C49.531 272.637 47.1384 277.581 46.6996 278.436C46.0848 279.651 45.3876 280.836 44.6112 281.988C42.9264 284.455 40.6859 286.845 36.9361 290.123C33.4496 293.176 31.7473 295.355 30.7294 297.803C30.419 298.564 30.1496 299.336 29.9221 300.117L29.7152 300.796C29.6783 300.917 29.5664 301 29.4395 301C29.246 301 29.1074 300.813 29.1639 300.628L29.3547 300.002C29.6589 298.998 29.8929 298.326 30.1736 297.65C31.2266 295.13 32.9699 292.898 36.5149 289.797C40.2296 286.543 42.4409 284.181 44.1023 281.748C44.8675 280.614 45.555 279.445 46.1614 278.248C46.6002 277.404 48.9928 272.46 49.9054 270.665C51.7598 267.065 52.2395 264.713 52.5729 259.946C52.7777 256.999 52.9941 255.684 53.702 254.076C54.2041 252.949 54.9101 251.891 55.7962 250.937C56.5392 250.121 57.3172 249.319 58.2649 248.374L60.6692 245.998C65.2321 241.457 67.4902 238.318 69.2042 233.259C69.5318 232.28 69.8477 231.281 70.2045 230.11L71.0996 227.105C72.8311 221.326 74.1006 218.293 76.5517 214.918C77.6281 213.44 78.8916 212.014 80.3775 210.603C83.9869 207.186 88.1228 204.507 94.9028 200.878C96.1021 200.24 100.917 197.711 102.116 197.067C105.017 195.522 107.381 194.197 109.674 192.81C112.815 190.914 115.635 188.931 120.637 185.216L121.631 184.477C132.02 176.754 136.829 173.711 143.083 171.661C145.423 170.893 148.231 170.178 152.296 169.281C152.419 169.252 160.995 167.409 163.54 166.818C175.181 164.125 182.447 161.39 186.852 157.324C190.221 154.214 192.661 150.595 196.902 143.097L198.124 140.937C203.313 131.784 206.572 127.276 211.445 123.705C214.139 121.699 217.169 120.018 220.442 118.713L222.805 117.768C226.491 116.28 228.345 114.998 230.387 112.118C231.408 110.63 232.284 109.078 233.007 107.477C235.675 101.794 239.717 97.8674 244.69 95.477C248.346 93.7203 252.254 92.9235 255.512 92.9235C259.613 92.9235 262.912 92.8659 267.311 92.6499C273.687 92.3637 280.033 91.7288 286.306 90.7491C289.231 90.2787 292.009 89.7267 294.624 89.0931C302.481 87.1828 306.546 86.6836 313.894 86.3188L315.204 86.2516C318.574 86.074 320.937 85.8196 323.891 85.2484C326.998 84.6484 330.203 84.6004 337.112 84.9124C342.401 85.1524 344.623 85.1908 347.18 84.9604C350.52 84.6628 352.995 83.8756 354.755 82.4356C358.522 79.3401 363.704 72.66 368.998 64.8135C368.999 64.8122 368.998 64.8103 368.996 64.8103ZM368.994 278.87C368.994 279.251 368.519 279.321 368.427 278.952C367.945 277.024 367.528 274.585 367.046 271.188L366.906 270.209L366.771 269.234C365.707 261.698 364.975 258.684 363.525 257.489C362.085 256.308 361.746 255.074 362.05 253.342C362.109 253.054 362.156 252.814 362.279 252.31C362.682 250.61 362.729 249.89 362.325 249.026C361.793 247.884 360.389 246.91 357.768 246.022C354.796 245.019 353.954 243.699 354.908 241.971C355.294 241.275 355.955 240.521 356.967 239.566C357.575 238.99 360.172 236.705 359.939 236.911C363.536 233.696 365.192 231.468 365.192 229.001C365.151 227.792 365.477 226.594 366.141 225.514C366.731 224.553 367.572 223.713 368.602 223.052C368.774 222.941 368.994 223.068 368.994 223.273C368.994 223.364 368.947 223.448 368.871 223.498C367.893 224.143 367.106 224.962 366.569 225.893C366.01 226.863 365.738 227.928 365.777 229.001C365.777 231.627 364.063 233.94 360.371 237.238C360.594 237.036 358.008 239.316 357.406 239.878C356.429 240.804 355.797 241.524 355.44 242.167C354.639 243.627 355.305 244.673 357.991 245.575C360.746 246.511 362.273 247.572 362.869 248.854C363.326 249.833 363.279 250.615 362.852 252.406C362.735 252.9 362.676 253.13 362.629 253.409C362.349 255.007 362.647 256.092 363.934 257.153C365.537 258.468 366.262 261.453 367.35 269.181L367.491 270.156L367.625 271.135C368.102 274.476 368.515 276.89 368.984 278.789C368.991 278.816 368.994 278.843 368.994 278.87ZM368.994 249.967C368.994 250.259 368.605 250.358 368.466 250.102C367.578 248.472 366.347 246.208 366.098 245.71C365.502 244.495 365.367 243.886 365.566 243.223C365.683 242.82 366.765 240.977 366.923 240.665C367.509 239.493 368.014 238.295 368.437 237.078C368.534 236.798 368.994 236.867 368.994 237.163C368.994 237.19 368.99 237.218 368.981 237.244C368.568 238.472 368.06 239.677 367.461 240.852C367.28 241.212 366.239 242.993 366.134 243.339C365.97 243.876 366.087 244.404 366.642 245.532C366.879 246.015 368.074 248.211 368.96 249.833C368.983 249.874 368.994 249.92 368.994 249.967ZM368.994 210.11C368.994 210.185 368.961 210.257 368.902 210.304C367.954 211.063 366.802 211.639 365.25 212.211C365.104 212.259 357.078 214.837 353.316 216.257C347.847 218.331 343.547 219.089 339.844 218.777C336.872 218.523 334.568 217.697 331.204 215.936L329.332 214.942C328.298 214.384 327.236 213.86 326.149 213.373C323.78 212.326 324.248 210.589 327.009 208.347C329.18 206.581 332.625 204.541 337.966 201.723L340.575 200.37C351.076 194.931 351.234 194.85 353.603 193.295C360.03 189.076 364.889 186.679 368.72 186.086C368.865 186.064 368.994 186.178 368.994 186.325C368.994 186.446 368.906 186.549 368.786 186.568C365.089 187.152 360.322 189.495 353.966 193.669C351.567 195.243 351.427 195.32 340.885 200.773C340.015 201.223 339.148 201.676 338.282 202.131C332.976 204.93 329.554 206.955 327.419 208.688C324.898 210.742 324.523 212.11 326.424 212.95C327.419 213.387 328.349 213.853 329.642 214.534L331.514 215.533C334.813 217.256 337.042 218.053 339.903 218.297C343.489 218.605 347.695 217.865 353.077 215.825C356.856 214.395 364.882 211.817 365.01 211.774C366.536 211.21 367.639 210.657 368.554 209.911C368.725 209.771 368.994 209.889 368.994 210.11ZM368.746 190.381C368.882 190.375 368.994 190.484 368.994 190.619C368.994 190.749 368.891 190.855 368.762 190.861C365.025 191.033 361.82 192.412 357.464 195.21L354.755 196.976C353.93 197.515 353.071 198.018 352.182 198.483C351.702 198.733 348.958 200.082 348.543 200.288C346.607 201.248 344.945 202.112 343.354 202.976C341.712 203.864 340.119 204.812 338.581 205.818C335.884 207.603 334.252 209.13 333.918 210.306C333.55 211.587 334.784 212.48 338.042 212.926C344.302 213.781 350.28 212.902 355.855 210.694C359.572 209.224 362.955 207.243 365.859 204.838C366.845 203.944 367.73 202.978 368.504 201.954C368.659 201.75 368.994 201.857 368.994 202.113C368.994 202.168 368.976 202.223 368.943 202.267C368.172 203.303 367.28 204.275 366.28 205.17C363.327 207.616 359.887 209.631 356.107 211.126C350.432 213.373 344.331 214.27 337.943 213.397C334.398 212.917 332.883 211.817 333.351 210.195C333.725 208.88 335.416 207.291 338.212 205.443C339.587 204.531 341.195 203.581 343.032 202.578C344.629 201.704 346.297 200.845 348.239 199.88C348.66 199.669 351.398 198.325 351.877 198.08C352.614 197.696 353.398 197.235 354.393 196.597C354.861 196.299 356.674 195.109 357.101 194.835C361.552 191.968 364.854 190.555 368.746 190.381ZM368.78 116.149C368.902 116.155 368.994 116.258 368.994 116.38C368.994 116.521 368.872 116.631 368.73 116.623C367.72 116.57 366.308 116.807 364.42 117.389C358.564 119.189 356.347 119.822 353.217 120.633C352.176 120.902 351.678 121.032 350.953 121.229C350.087 121.469 349.104 121.593 347.01 121.785C346.495 121.833 345.981 121.881 345.466 121.929C340.903 122.381 338.867 123.115 338.867 124.843C338.867 126.979 340.558 131.169 343.524 137.232C344.08 138.42 344.536 139.639 344.887 140.879C345.055 141.432 345.219 141.986 345.378 142.54C346.466 146.198 347.233 147.681 348.631 148.142C349.923 148.564 351.38 148.43 353 147.796C355.036 146.985 357.224 145.425 359.552 143.251C360.442 142.435 361.29 141.575 362.238 140.577L364.086 138.609C365.406 137.259 367.121 133.814 368.438 130.404C368.549 130.116 368.994 130.195 368.994 130.503C368.994 130.537 368.988 130.571 368.976 130.603C367.638 134.043 365.905 137.521 364.542 138.912C364.285 139.175 362.98 140.572 362.7 140.875C361.746 141.883 360.886 142.747 359.997 143.572C357.61 145.785 355.376 147.383 353.252 148.228C351.503 148.919 349.877 149.068 348.408 148.583C346.747 148.041 345.951 146.5 344.811 142.655C344.646 142.102 344.482 141.548 344.319 140.995C343.851 139.459 343.459 138.379 342.985 137.414C339.979 131.27 338.282 127.07 338.282 124.843C338.282 122.745 340.529 121.934 345.396 121.449C345.912 121.398 346.429 121.35 346.946 121.305C348.993 121.118 349.959 120.998 350.766 120.777C351.503 120.576 351.994 120.441 353.036 120.173C356.159 119.366 358.365 118.733 364.209 116.937C366.148 116.342 367.654 116.086 368.78 116.149ZM18 153.167C18 153.164 18.0013 153.161 18.0036 153.159C23.9278 147.731 28.6065 142.025 31.4957 136.176C33.4262 132.268 35.0583 128.438 37.8195 121.512L38.7496 119.189C42.5696 109.618 44.6639 104.875 47.3899 100.2C50.9408 94.0947 54.7315 90.0339 59.2477 87.9411C63.1437 86.1364 65.2146 84.1684 66.3962 81.6293C66.8527 80.5998 67.2164 79.5441 67.4843 78.4709C68.2039 75.9749 68.6836 74.8278 69.7833 73.4982C71.2166 71.7606 73.4512 70.3638 76.8617 69.1975C86.0929 66.0391 86.6486 65.8183 87.4208 64.8727C87.801 64.4023 87.9063 63.8408 87.8537 62.708C87.8361 62.3576 87.7191 60.8744 87.7133 60.788C87.6481 59.901 87.6149 59.0126 87.6138 58.1241C87.6138 53.3049 87.7191 52.6665 89.0003 51.8122C89.3045 51.6106 89.6613 51.4282 90.2112 51.1882C90.3691 51.121 91.4865 50.6506 91.8726 50.4778C93.739 49.6559 95.523 48.7138 97.2077 47.6602C98.4128 46.921 98.7521 46.633 101.893 43.8539C104.105 41.8907 105.526 40.8011 107.135 39.9564C109.264 38.838 111.347 38.4588 113.511 38.9436C116.085 39.5196 119.835 39.9036 124.497 40.1243C128.534 40.3163 132.044 40.3643 137.338 40.3643C140.187 40.3643 142.585 40.5899 146.347 41.1179C150.892 41.7563 151.787 41.8571 153.589 41.8571C155.958 41.8571 157.936 41.4347 159.837 40.4411C162.797 38.8956 164.581 38.1996 166.389 37.9452C168.506 37.638 169.179 37.7244 176.07 38.934C186.167 40.7099 194.117 39.5868 200.09 34.278C203.073 31.6237 203.296 30.0061 202.126 27.1742C201.64 26.0126 201.523 25.6862 201.441 25.1102C201.272 23.9006 201.734 22.8494 203.027 21.7839C204.521 20.5578 205.7 17.6058 206.569 13.4738C206.626 13.2016 206.865 13.0048 207.144 13.0048C207.511 13.0048 207.787 13.3411 207.712 13.7007C206.808 17.9972 205.557 21.0706 203.857 22.4606C202.81 23.3246 202.477 24.0878 202.605 24.995C202.67 25.475 202.781 25.7774 203.231 26.867C204.53 30.0013 204.261 31.9837 200.95 34.9308C194.65 40.5275 186.284 41.7131 175.825 39.8748C169.144 38.6988 168.483 38.6172 166.593 38.886C164.973 39.1164 163.306 39.7692 160.469 41.2475C158.416 42.3199 156.021 42.8664 153.589 42.8171C151.688 42.8171 150.775 42.7115 146.142 42.0635C142.451 41.5451 140.105 41.3243 137.338 41.3243C132.015 41.3243 128.499 41.2763 124.427 41.0843C119.695 40.8587 115.875 40.4651 113.195 39.8652C109.908 39.1308 107.246 40.5275 102.753 44.5019C99.5359 47.353 99.1966 47.6362 97.9097 48.4282C96.1768 49.5106 94.3419 50.4784 92.4225 51.3226C92.0247 51.5002 90.9132 51.9706 90.7611 52.0378C90.2697 52.2489 89.9714 52.4025 89.7374 52.5561C88.8774 53.1321 88.7838 53.7081 88.7838 58.1241C88.7838 59.012 88.8189 59.8232 88.8833 60.7352C88.8833 60.8168 89.0003 62.3096 89.0237 62.6696C89.0822 63.9896 88.9476 64.7287 88.3919 65.4103C87.4149 66.6103 87.0639 66.7543 77.3063 70.0854C74.1006 71.1846 72.0473 72.4662 70.7544 74.0406C69.7541 75.2454 69.3095 76.3109 68.6251 78.6965C68.1395 80.3765 67.9172 81.0581 67.4902 81.9749C66.2149 84.7252 63.951 86.866 59.8268 88.7811C55.5564 90.7587 51.9002 94.6754 48.4429 100.618C45.7519 105.245 43.6635 109.958 39.8611 119.491L38.9368 121.814C36.1581 128.76 34.526 132.604 32.5838 136.545C29.6664 142.443 24.9799 148.183 19.0565 153.635C18.6508 154.009 18 153.719 18 153.167ZM18 190.602C18 190.469 18.1071 190.361 18.24 190.36L18.585 190.357C22.2821 190.357 22.9549 192.853 21.2759 196.77C20.528 198.423 19.5978 200.016 18.4973 201.53C18.3386 201.748 18 201.634 18 201.364C18 201.304 18.0191 201.246 18.0543 201.197C19.1124 199.737 20.0048 198.201 20.7202 196.607C22.2938 192.959 21.7205 190.837 18.585 190.837C18.2666 190.837 18 190.58 18 190.262V171.65C18 169.717 19.1167 167.961 20.8518 167.109C22.5907 166.254 24.3137 165.378 26.0202 164.481C34.0112 159.94 43.4471 146.433 43.4471 138.758C43.4471 130.07 56.0653 103.891 62.3013 100.637C69.7365 96.7538 81.1614 87.2164 83.244 82.5172C84.373 79.9733 86.4614 79.0277 91.6795 78.0197C95.2772 77.3285 96.7338 76.8581 97.9214 75.7206C98.7989 74.8854 99.5125 73.4214 100.454 70.7766C100.589 70.4022 101.566 67.5703 101.876 66.7159C103.994 60.9176 106.146 57.8409 109.756 56.9289C111.218 56.5641 111.528 56.4585 115.454 55.1529C119.835 53.6985 122.456 53.0265 125.469 52.7913C129.417 52.4793 133.149 53.1513 136.905 55.0329C140.082 56.6265 144.036 57.2985 148.704 57.2217C152.232 57.1641 155.841 56.7081 160.305 55.8777C161.369 55.6857 164.622 55.0425 165.137 54.9465C166.71 54.6585 167.676 54.5193 168.342 54.5193C171.25 54.5193 173.566 54.4953 176.649 54.3897C181.271 54.2361 185.752 53.9481 189.958 53.4873C194.93 52.9401 199.259 52.1769 202.757 51.1738C213.814 47.9962 221.852 42.3899 222.454 37.9308C222.624 36.702 222.688 36.51 224.086 32.5981C225.449 28.7821 225.964 26.3918 225.677 23.8478C225.56 22.7726 225.274 21.7455 224.812 20.7663C223.961 18.9424 223.314 16.415 222.849 13.2977C222.825 13.1407 222.947 13 223.106 13C223.235 13 223.345 13.0954 223.365 13.2235C223.814 16.2267 224.459 18.6729 225.362 20.5935C225.841 21.6246 226.144 22.7053 226.262 23.8046C226.555 26.4254 226.028 28.8637 224.642 32.7325C223.261 36.6012 223.197 36.798 223.039 37.9884C222.401 42.6683 214.206 48.3946 202.956 51.625C199.411 52.6425 195.047 53.4105 190.034 53.9625C185.81 54.4233 181.306 54.7161 176.679 54.8697C173.578 54.9705 171.256 54.9993 168.342 54.9993C167.734 54.9993 166.798 55.1289 165.265 55.4169C164.757 55.5129 161.504 56.1513 160.433 56.3481C155.941 57.1785 152.29 57.6441 148.716 57.7017C143.948 57.7833 139.883 57.0921 136.601 55.4457C132.956 53.6169 129.347 52.9689 125.527 53.2665C122.579 53.4969 120.005 54.1593 115.676 55.5993C111.727 56.9145 111.411 57.0153 109.931 57.3897C106.579 58.2344 104.503 61.2104 102.438 66.8551C102.127 67.7047 101.151 70.5318 101.016 70.9158C100.045 73.6278 99.3137 75.1302 98.366 76.0374C97.0673 77.2757 95.5346 77.7749 91.3402 78.5813C86.7773 79.4597 84.8293 80.3381 83.7939 82.6804C81.6586 87.4996 70.1519 97.109 62.6172 101.04C56.5743 104.203 44.0321 130.219 44.0321 138.763C44.0321 146.606 34.4967 160.257 26.3537 164.879C25.161 165.556 21.8656 167.174 18.5012 168.803C18.2694 168.915 18 168.746 18 168.489V190.611V190.602ZM18 107.227C18 106.904 18.1936 106.614 18.4886 106.482C22.6542 104.628 26.6719 101.626 30.7762 97.5842C32.9992 95.3954 39.0889 88.5699 40.0132 87.7204C41.0662 86.7412 42.3882 85.8196 44.3538 84.6244C44.9856 84.2404 47.232 82.9108 47.5654 82.7092C53.0409 79.4213 55.7553 76.9685 56.9135 73.4166C57.3815 71.9862 57.8144 70.1622 58.3526 67.5127C58.4872 66.8215 59.5226 61.532 59.8502 59.9336C61.5291 51.8842 63.2022 47.0746 65.7411 44.5259C72.0882 38.1708 77.3765 31.3069 77.3765 28.8445C77.3765 27.6254 77.5754 27.2366 80.9157 21.3039C81.3135 20.5887 81.6469 19.9887 81.9511 19.4175C83.3335 16.8087 84.141 14.826 84.3438 13.2708C84.3634 13.1205 84.4893 13.0048 84.6409 13.0048C84.8118 13.0048 84.9467 13.1506 84.9249 13.3201C84.7173 14.9388 83.8938 16.9574 82.4835 19.6095C82.1793 20.1855 81.8458 20.7855 81.4422 21.5055C78.2013 27.2702 77.9615 27.7406 77.9615 28.8445C77.9615 31.4701 72.6439 38.3676 66.1973 44.8331C63.7404 47.2906 62.0849 52.0617 60.4293 60.02C60.0959 61.6184 59.0663 66.8983 58.9259 67.5943C58.3877 70.2631 57.949 72.0966 57.4751 73.5462C56.2759 77.2325 53.4855 79.7525 47.9106 83.1028L44.699 85.0132C42.7685 86.1892 41.4757 87.0964 40.4461 88.042C39.551 88.8723 33.4613 95.6882 31.2266 97.8962C26.8304 102.223 22.5276 105.38 18.0089 107.233C18.0046 107.235 18 107.232 18 107.227ZM18 280.903C18 280.603 18.4827 280.536 18.5795 280.82C18.6931 281.153 18.8116 281.47 18.936 281.776C20.106 284.671 21.6269 285.741 23.7271 284.939C34.8243 280.692 43.4471 273.352 43.4471 265.961C43.4471 258.185 47.1735 250.606 53.4504 243.737C54.5502 242.537 55.5915 241.625 56.6854 240.857C57.1124 240.559 57.5336 240.291 58.0309 239.993L59.2009 239.307C61.3536 238.02 62.313 236.772 63.3426 233.264C63.7813 231.79 64.1499 230.854 65.7996 226.899L66.1681 225.996C68.0635 221.398 68.8357 218.811 68.6075 217.045C68.3267 214.918 66.3845 214.534 61.9971 216.257C60.2585 216.938 58.471 217.531 56.6445 218.033C48.5189 220.275 40.8731 220.817 31.6888 220.635L30.548 220.611L29.6998 220.601C26.6806 220.602 23.6904 221.085 20.8957 222.022C20.0105 222.329 19.1709 222.716 18.3925 223.177C18.221 223.278 18 223.157 18 222.958C18 222.869 18.0469 222.786 18.124 222.742C18.9175 222.282 19.7681 221.893 20.6617 221.581C23.798 220.526 27.1723 220.032 30.5597 220.131L31.7005 220.155C40.8263 220.337 48.4136 219.795 56.4573 217.577C58.2617 217.082 60.0278 216.497 61.7456 215.825C66.4489 213.982 68.8591 214.457 69.1866 216.992C69.4323 218.859 68.6485 221.475 66.7238 226.15L66.3494 227.052C64.7115 230.988 64.3429 231.924 63.9159 233.379C62.8512 236.988 61.8158 238.342 59.546 239.695L58.376 240.382C57.8846 240.67 57.4751 240.934 57.0598 241.222C55.8881 242.057 54.8344 242.997 53.9184 244.025C47.7117 250.817 44.0321 258.3 44.0321 265.961C44.0321 273.583 35.2572 281.056 23.9728 285.376C21.4573 286.341 19.6497 285.059 18.3802 281.93C18.2463 281.605 18.1239 281.266 18.0016 280.912C18.0005 280.909 18 280.906 18 280.903ZM18 251.066C18 250.756 18.4138 250.651 18.5621 250.923L18.8541 251.46C20.0826 253.764 20.8782 256.418 21.3461 259.509C21.7322 262.053 21.8375 263.973 21.9545 268.389C22.0715 272.863 22.247 274.509 22.9081 275.613C23.6569 276.861 25.055 276.741 27.7576 274.893C37.7844 268.029 40.5221 263.901 40.5221 256.356C40.5221 252.914 41.1656 250.409 42.6866 247.87C44.0145 245.628 44.8218 244.692 50.5255 238.452C51.8619 236.947 53.3491 235.536 54.9714 234.233C55.63 233.714 56.3212 233.224 57.0423 232.764C57.2645 232.62 57.4166 232.515 57.5629 232.409C58.2027 231.97 58.7262 231.427 59.1014 230.816C59.6443 229.899 60.0867 228.945 60.4235 227.964L60.6399 227.388L60.8505 226.836C61.0202 226.4 61.1313 226.092 61.2366 225.8C61.4999 225.065 61.6695 224.513 61.769 224.043C61.9913 222.987 61.8392 222.368 61.2717 222.051C59.897 221.278 55.843 221.936 47.349 224.422C41.7682 226.054 37.9189 226.424 31.057 226.467C26.5467 226.496 24.9555 226.659 23.3059 227.484C21.2701 228.502 19.8895 230.556 18.8716 234.329C18.7676 234.705 18.6643 235.068 18.5612 235.418C18.4624 235.754 18 235.681 18 235.332C18 235.303 18.0039 235.275 18.0115 235.248L18.2983 234.224C19.3513 230.336 20.8021 228.176 23.0017 227.072C24.78 226.184 26.4297 226.016 31.057 225.987C37.8487 225.944 41.6453 225.584 47.1501 223.971C55.884 221.417 59.9906 220.75 61.5993 221.653C62.4066 222.104 62.5997 222.901 62.3481 224.124C62.2076 224.737 62.024 225.343 61.7982 225.939L61.4121 226.98L61.2015 227.532L60.9851 228.108C60.6379 229.116 60.1817 230.096 59.6221 231.036C59.1541 231.771 58.6802 232.246 57.949 232.769L57.4108 233.139L56.8141 233.537C56.2876 233.892 55.8489 234.209 55.3692 234.584C53.7725 235.867 52.3089 237.257 50.9935 238.74C45.319 244.947 44.5176 245.878 43.2072 248.081C41.7331 250.553 41.1071 252.986 41.1071 256.356C41.1071 264.055 38.2875 268.313 28.132 275.258C25.1837 277.274 23.3468 277.442 22.3816 275.824C21.6679 274.624 21.4924 272.973 21.3695 268.399C21.2525 264.002 21.1472 262.087 20.767 259.567C20.3049 256.524 19.5268 253.903 18.3159 251.652L18.0023 251.075C18.0008 251.073 18 251.07 18 251.066ZM240.001 13.3865C239.937 13.1996 240.075 13.0048 240.273 13.0048C240.396 13.0048 240.505 13.0823 240.545 13.198L241.355 15.5296C243.274 21.0783 244.216 24.8078 244.432 28.8733C244.719 34.158 243.543 39.078 240.554 43.8347C235.991 51.097 228.579 56.5545 219.365 60.2024C212.123 63.0632 204.085 64.6039 198.177 64.6039C194.176 64.6039 188.092 65.2663 176.374 66.8215L175.046 66.9991C160.714 68.9143 156.532 69.3991 153.133 69.3991C151.091 69.3991 150.746 69.3607 141.702 68.0551C139.619 67.7479 138.005 67.5271 136.437 67.3351C124.603 65.9143 118.302 66.7591 117.741 71.1078C117.682 71.5158 117.636 71.9334 117.571 72.4566L117.413 73.767C116.77 78.9989 116.232 81.3173 114.892 83.3476C113.195 85.9108 110.347 87.1636 105.749 87.1636C99.7816 87.1636 98.1905 87.4516 96.6812 88.6851C96.9854 88.4403 93.7387 91.4931 91.9077 92.8611C90.2989 94.061 83.5306 98.885 82.6824 99.4994C81.3922 100.433 80.1168 101.38 78.8565 102.341C74.7792 105.456 71.9478 107.986 70.3157 110.093C66.8525 114.557 64.185 118.752 63.4771 121.651C62.5061 125.635 65.6241 126.23 74.6037 122.232C83.1161 118.447 91.8081 114.94 100.659 111.72C102.707 110.971 108.872 108.744 109.832 108.384C112.786 107.304 114.687 106.56 116.138 105.912L117.279 105.398L118.554 104.832C119.584 104.381 120.531 103.987 121.479 103.608C132.067 99.4226 141.649 98.5874 150.921 103.032C164.312 109.435 173.315 120.801 173.315 130.123C173.315 139.3 172.888 142.185 170.285 146.059C169.457 147.271 168.489 148.415 167.395 149.476C163.61 153.206 160.486 157.252 159.93 159.686C159.228 162.729 162.674 163.06 171.73 159.662C179.516 156.743 184.833 152.486 188.402 147.028C189.888 144.713 191.084 142.28 191.97 139.766C192.497 138.336 193.825 134.174 193.965 133.776C194.222 132.979 194.565 132.204 194.989 131.457C199.359 124.291 207.326 116.817 216.195 113.582C220.646 111.96 223.8 108.95 227.544 103.603C228.035 102.893 230.036 99.9361 230.55 99.2018C232.61 96.2738 234.189 94.5458 236.032 93.4515C241.969 89.8995 252.821 88.1236 265.451 88.1236C269.85 88.1236 275.127 87.5284 281.544 86.4052C284.473 85.8858 287.391 85.3225 290.295 84.7156C289.535 84.874 299.386 82.8052 301.656 82.3684C309.934 80.7701 325.681 79.9637 339.16 79.9637C349.315 79.9637 355.434 75.5334 361.699 61.4024C365.572 52.6617 365.572 48.745 363.273 44.9147L362.583 43.7771C362.002 42.8724 361.693 41.8669 361.682 40.8443C361.682 38.91 361.682 38.9196 363.144 29.0557C363.413 27.2654 363.612 25.8206 363.799 24.4286C364.326 20.3727 364.607 17.1327 364.607 14.4448C364.607 14.0835 364.599 13.7038 364.59 13.3056C364.587 13.1406 364.719 13.0048 364.884 13.0048C365.043 13.0048 365.173 13.1304 365.177 13.2887C365.188 13.6931 365.192 14.0784 365.192 14.4448C365.192 17.1567 364.911 20.4111 364.379 24.4766C364.203 25.8734 363.992 27.323 363.729 29.1133C362.267 38.9292 362.267 38.9388 362.267 40.8443C362.267 41.7899 362.53 42.5579 363.115 43.5707C363.161 43.651 363.25 43.8 363.349 43.9642C363.644 44.455 363.959 44.9502 364.222 45.4587C366.159 49.1921 365.925 53.2717 362.249 61.5656C355.908 75.8694 349.596 80.4437 339.16 80.4437C325.728 80.4437 310.01 81.2501 301.785 82.8388C299.527 83.2708 289.681 85.3348 290.436 85.1812C287.526 85.7898 284.602 86.3547 281.667 86.8756C275.208 88.0035 269.903 88.6035 265.451 88.6035C252.932 88.6035 242.192 90.3651 236.377 93.8355C234.622 94.8866 233.078 96.5714 231.053 99.4418C230.545 100.171 228.544 103.128 228.047 103.843C224.25 109.267 221.027 112.344 216.429 114.019C207.712 117.201 199.827 124.593 195.515 131.668C195.106 132.39 194.775 133.14 194.527 133.91C194.392 134.294 193.064 138.465 192.538 139.91C191.637 142.452 190.423 144.913 188.917 147.254C185.29 152.802 179.884 157.132 171.975 160.098C162.557 163.631 158.521 163.242 159.351 159.599C159.936 157.06 163.095 152.961 166.95 149.169C168.018 148.132 168.962 147.013 169.77 145.828C172.315 142.046 172.73 139.219 172.73 130.123C172.73 120.984 163.844 109.771 150.664 103.459C141.556 99.101 132.167 99.917 121.736 104.04C120.322 104.599 118.93 105.193 117.559 105.821L116.419 106.334C114.342 107.23 112.225 108.061 110.072 108.826C109.106 109.181 102.946 111.408 100.893 112.162C92.058 115.376 83.3817 118.876 74.8845 122.654C65.5539 126.811 61.7982 126.091 62.9039 121.555C63.6292 118.579 66.3143 114.346 69.8184 109.834C71.4857 107.683 74.3463 105.13 78.4587 101.991C79.617 101.103 80.8689 100.171 82.2963 99.1394C83.1504 98.5202 89.9128 93.7011 91.5099 92.5059C93.3175 91.1619 96.5408 88.1187 96.2717 88.3443C97.9214 86.9908 99.6354 86.6836 105.749 86.6836C110.136 86.6836 112.792 85.5172 114.377 83.122C115.664 81.1685 116.196 78.8789 116.834 73.719L116.986 72.4086L117.162 71.0598C117.489 68.4583 119.777 66.9799 123.731 66.4519C126.913 66.0295 131.049 66.2071 136.519 66.8647C138.099 67.0567 139.719 67.2775 141.807 67.5799C150.775 68.8759 151.144 68.9239 153.133 68.9239C156.485 68.9239 160.679 68.4295 174.953 66.5239L176.281 66.3511C188.039 64.7863 194.135 64.124 198.177 64.124C203.998 64.124 211.948 62.5976 219.108 59.7656C228.216 56.1657 235.54 50.7754 240.039 43.6139C242.976 38.934 244.134 34.1004 243.847 28.8925C243.631 24.875 242.701 21.1743 240.788 15.6592L240.001 13.3865ZM247.963 13.3636C247.917 13.1816 248.054 13.0048 248.242 13.0048C248.375 13.0048 248.491 13.0954 248.523 13.2244C248.977 15.0564 249.628 17.2957 250.522 20.1471C252.645 26.891 252.312 33.1213 250.083 38.7564C248.678 42.3881 246.423 45.7599 243.444 48.6826C240.042 51.9802 236.257 54.9977 232.142 57.6921C225.519 62.0216 218.476 65.1271 211.111 66.5191C206.747 67.3302 202.342 67.982 197.908 68.4727C196.053 68.6839 194.187 68.8807 191.882 69.1063L186.389 69.6439C179.645 70.3206 176.181 70.8678 173.73 71.7846C168.302 73.8054 157.146 74.6838 144.943 74.6838C144.141 74.6838 143.305 74.6262 142.427 74.5158C140.895 74.319 139.502 74.0214 137.081 73.4166C132.787 72.3558 131.447 72.0966 129.692 72.1878C127.411 72.2982 125.814 73.287 124.737 75.495C123.649 77.7317 123.322 79.1093 122.783 82.6852C122.14 86.9956 121.105 88.5027 116.951 89.5491C115.581 89.8746 114.249 90.302 112.973 90.8259C112.605 90.9843 112.295 91.1331 111.944 91.3155L111.16 91.7283C110.048 92.2755 108.902 92.4435 105.749 92.4435C103.877 92.4435 100.583 92.1795 100.185 92.2563C99.4716 92.3907 99.7465 92.1891 96.0085 95.2514C95.131 95.9714 93.9668 96.7778 92.3113 97.829C91.4221 98.3954 88.1228 100.435 87.6665 100.723C84.7649 102.538 82.7935 103.891 81.1965 105.226C78.3417 107.616 77.1893 109.618 77.944 111.322C78.7278 113.083 80.3249 113.443 83.1504 112.675C84.7152 112.214 86.2347 111.656 87.6957 111.005C88.5732 110.635 92.247 109.022 93.1771 108.624C95.5111 107.602 97.9156 106.691 100.378 105.898C102.565 105.189 104.72 104.414 106.837 103.574C108.03 103.109 113.119 101.098 114.441 100.589C117.021 99.581 119.18 98.7746 121.257 98.0498C131.283 94.5458 138.409 93.2979 143.293 94.8578L146.47 95.8658C147.815 96.2882 148.909 96.6434 149.991 97.0082C152.594 97.8679 155.146 98.829 157.637 99.8882C168.366 104.51 175.392 110.51 177.989 119.025C182.061 132.393 180.095 140.879 173.262 148.977C170.94 151.737 171.203 153.393 173.297 153.282C175.719 153.148 179.27 150.907 182.137 147.273C183.95 144.969 185.12 142.257 186.846 136.939L187.834 133.891C188.22 132.705 188.56 131.721 188.905 130.771C191.789 122.822 195.34 117.677 201.517 114.086C205.7 111.658 215.399 106.646 216.423 106.046C220.366 103.738 222.583 101.515 224.812 97.4066C229.339 89.0355 237.149 85.7236 250.826 85.7236C256.302 85.7236 261.303 85.1812 268.101 84.0484C269.311 83.8486 270.52 83.6438 271.728 83.434C273.132 83.194 274.109 83.0308 275.039 82.8916C277.396 82.5364 279.157 82.3636 280.661 82.3636C283.258 82.3636 286.154 81.8837 299.023 79.4885L300.749 79.1717C310.308 77.4101 315.748 76.6037 319.27 76.6037C320.171 76.6037 320.674 76.6085 323.014 76.6517C327.577 76.7237 330.192 76.7141 333.152 76.5557C342.751 76.0469 348.789 73.983 350.585 69.5671C351.182 68.1243 351.875 66.7094 352.661 65.3287C352.573 65.4775 354.001 62.948 354.358 62.2664C357.505 56.3625 357.616 51.745 353.515 43.3355C351.992 40.1376 350.958 36.7969 350.438 33.3901C349.496 27.6398 349.631 22.283 350.497 14.0224L350.584 13.2628C350.601 13.1158 350.725 13.0048 350.873 13.0048C351.047 13.0048 351.182 13.1556 351.163 13.3281L351.082 14.0608C350.216 22.2926 350.087 27.6158 351.017 33.3277C351.532 36.6935 352.554 39.9938 354.059 43.1531C358.213 51.6874 358.102 56.4345 354.896 62.4584C354.533 63.1448 353.106 65.6839 353.194 65.5303C352.415 66.8953 351.727 68.2941 351.134 69.7207C349.245 74.3862 343.003 76.5125 333.187 77.0357C330.203 77.1941 327.583 77.2037 322.996 77.1317C320.668 77.0885 320.165 77.0837 319.27 77.0837C315.813 77.0837 310.39 77.8853 300.878 79.6373L299.152 79.9589C286.189 82.3684 283.328 82.8436 280.661 82.8436C279.198 82.8436 277.472 83.0164 275.144 83.3668C274.22 83.506 273.243 83.6644 271.845 83.8996C270.636 84.1054 269.427 84.3118 268.218 84.5188C261.385 85.6564 256.343 86.2036 250.826 86.2036C237.36 86.2036 229.766 89.4243 225.362 97.5602C223.08 101.784 220.787 104.078 216.762 106.44C215.721 107.05 206.022 112.056 201.857 114.48C195.808 117.993 192.321 123.057 189.461 130.91C189.121 131.851 188.788 132.83 188.396 134.016L187.407 137.064C185.664 142.43 184.482 145.175 182.628 147.532C179.674 151.281 175.977 153.618 173.332 153.762C170.583 153.911 170.232 151.732 172.783 148.708C179.522 140.721 181.452 132.374 177.416 119.141C174.871 110.779 167.962 104.875 157.368 100.315C155.028 99.3074 152.571 98.3954 149.769 97.4498C148.693 97.0898 147.605 96.7346 146.259 96.3074L143.083 95.309C138.385 93.8115 131.371 95.0306 121.485 98.4914C119.426 99.2114 117.267 100.023 114.693 101.021L107.088 104.006C104.333 105.072 102.315 105.806 100.589 106.349C98.1463 107.135 95.7613 108.038 93.4462 109.051C92.5219 109.45 88.8482 111.058 87.9648 111.432C86.4795 112.094 84.9345 112.662 83.3434 113.131C80.243 113.971 78.3008 113.539 77.3941 111.485C76.54 109.555 77.7802 107.405 80.787 104.89C82.3957 103.536 84.3905 102.173 87.3096 100.339C87.7718 100.051 91.0711 98.0114 91.9545 97.4498C93.231 96.6666 94.4481 95.8203 95.599 94.9154C99.5418 91.6803 99.1674 91.9587 100.051 91.7907C100.56 91.6947 103.964 91.9635 105.749 91.9635C108.802 91.9635 109.861 91.8099 110.861 91.3155L111.628 90.9123C111.99 90.7203 112.318 90.5667 112.704 90.3987C114.01 89.8629 115.373 89.4259 116.776 89.0931C120.66 88.1139 121.584 86.77 122.204 82.6276C122.748 79.0133 123.082 77.6021 124.193 75.3126C125.357 72.9366 127.142 71.8278 129.657 71.7078C131.512 71.6118 132.875 71.8758 137.244 72.9558C138.969 73.4227 140.732 73.7852 142.521 74.0406C143.369 74.1462 144.177 74.2038 144.943 74.2038C157.058 74.2038 168.167 73.3302 173.49 71.343C176.018 70.4022 179.51 69.8551 186.319 69.1687L191.818 68.6311C194.111 68.4007 195.977 68.2087 197.826 67.9975C202.6 67.4503 206.835 66.8311 210.982 66.0487C218.248 64.6759 225.215 61.604 231.779 57.3129C235.865 54.637 239.622 51.6404 242.999 48.3658C245.925 45.4933 248.14 42.1804 249.522 38.6124C251.721 33.0589 252.049 26.9198 249.96 20.2623C249.222 17.9772 248.556 15.6769 247.963 13.3636ZM314.415 13.0048C314.696 13.0048 314.843 13.3399 314.648 13.5433C314.58 13.6148 314.519 13.6772 314.467 13.7296C312.156 16.1103 310.431 17.5311 308.723 18.3231C307.843 18.755 306.84 18.99 305.815 19.0047C304.423 19.0047 303.335 19.3263 301.89 20.0655L300.34 20.8863C297.777 22.2302 295.654 22.8446 292.36 22.8446C289.085 22.8446 286.516 22.2398 282.954 20.9007C282.504 20.7334 282.056 20.5638 281.608 20.3919L280.333 19.9215C279.397 19.5855 278.625 19.3599 277.894 19.2111C277.269 19.078 276.626 19.0087 275.981 19.0047C274.635 19.0047 273.465 18.6783 269.546 17.3871L268.633 17.0895C265.708 16.1439 263.895 15.736 262.479 15.8128C260.765 15.9088 259.893 16.7871 259.893 18.7647C259.893 28.7293 256.846 42.9659 252.786 46.2922C248.352 49.9354 237.254 57.6681 232.861 60.2408C225.163 64.7527 214.627 69.9367 207.057 72.2694C204.514 73.0524 201.911 73.6986 199.265 74.2038C197.346 74.5782 195.404 74.8902 192.684 75.279C192.374 75.327 187.536 75.9989 185.957 76.2341C183.113 76.6517 180.516 77.0693 177.767 77.5589C165.704 79.7093 163.101 79.9637 155.473 79.9637C154.016 79.9637 153.776 79.9301 147.254 79.0037C145.838 78.8021 144.732 78.6533 143.656 78.5237C138.912 77.9525 135.565 77.8709 133.337 78.4277C130.681 79.0997 129.868 80.6597 131.172 83.4772C132.354 86.0116 134.004 87.61 136.344 88.6323C138.251 89.4675 140.292 89.8803 144.428 90.4131C149.939 91.1235 150.828 91.2531 153.495 91.8147C157.296 92.606 160.957 93.7949 164.388 95.3522C169.243 97.5506 172.917 100.872 176.076 105.379C177.673 107.65 181.61 114.658 182.242 115.55C184.231 118.358 185.904 118.733 188.612 116.51C191.508 114.139 194.667 112.493 200.973 109.762C201.147 109.686 201.582 109.495 201.887 109.363C202.104 109.269 202.323 109.176 202.54 109.082C206.99 107.151 209.241 106.065 211.497 104.645C214.487 102.773 216.563 100.757 217.798 98.3522C222.782 88.6371 229.936 82.3636 236.786 82.3636L240.004 82.378C246.164 82.4164 250.153 82.3876 254.57 82.2292C262.561 81.9316 268.481 81.2261 271.763 79.9877C275.185 78.6917 279.613 77.3525 285.908 75.6581C287.932 75.111 289.588 74.6742 293.337 73.6902C297.842 72.5142 299.819 71.991 302.212 71.3382C304.417 70.7328 306.626 70.1376 308.84 69.5527C310.987 68.9767 312.326 68.5927 313.537 68.2183C314.869 67.8132 316.171 67.3419 317.433 66.8071C318.527 66.3367 319.633 65.7991 320.861 65.1271C322.897 64.0088 324.459 63.6248 327.904 63.1448L328.577 63.0488C331.917 62.564 333.842 61.9448 336.042 60.3464C340.616 57.0057 341.061 49.2202 338.288 38.9772C337.294 35.2956 337.06 29.7229 337.37 21.9519C337.485 19.0593 337.639 16.1679 337.831 13.2782C337.841 13.1243 337.969 13.0048 338.123 13.0048C338.292 13.0048 338.426 13.1469 338.416 13.3153L338.346 14.4736C338.159 17.5551 338.036 19.7631 337.949 21.9711C337.65 29.6989 337.879 35.2428 338.861 38.8716C341.681 49.2778 341.225 57.2073 336.428 60.7016C334.14 62.372 332.116 63.0248 328.682 63.5192L328.004 63.6152C324.634 64.0904 323.137 64.4551 321.189 65.5255C320.065 66.1467 318.901 66.7171 317.702 67.2343C316.419 67.7782 315.096 68.2574 313.742 68.6695C312.519 69.0487 311.174 69.4279 309.021 70.0087C306.814 70.6042 304.607 71.1978 302.399 71.7894C300 72.447 298.023 72.9702 293.519 74.151C289.763 75.1302 288.113 75.567 286.089 76.1093C279.812 77.8037 275.402 79.1333 272.009 80.4197C268.639 81.6964 262.666 82.4068 254.593 82.7092C250.171 82.8676 246.17 82.8964 239.998 82.858L236.786 82.8436C230.24 82.8436 223.238 88.9827 218.336 98.5394C217.055 101.031 214.919 103.109 211.854 105.029C209.502 106.502 207.18 107.616 202.488 109.646L201.248 110.184C194.989 112.896 191.865 114.523 189.022 116.856C186.015 119.323 183.903 118.848 181.739 115.79C181.084 114.869 177.147 107.87 175.573 105.614C172.455 101.179 168.857 97.925 164.107 95.7746C160.717 94.2358 157.099 93.0614 153.343 92.2803C150.711 91.7187 149.822 91.5939 144.334 90.8883C140.14 90.3507 138.052 89.9283 136.069 89.0595C133.6 87.9795 131.857 86.29 130.628 83.65C129.207 80.5829 130.172 78.7253 133.167 77.9717C135.507 77.3861 138.912 77.4677 143.744 78.0533C144.82 78.1829 145.932 78.3317 147.353 78.5333C153.8 79.4453 154.069 79.4837 155.473 79.4837C163.054 79.4837 165.622 79.2341 177.644 77.0885C180.399 76.5989 183.002 76.1765 185.851 75.7589C187.437 75.5286 192.274 74.847 192.579 74.8086C195.293 74.4198 197.229 74.1078 199.131 73.7382C201.792 73.2246 204.255 72.615 206.852 71.8182C214.358 69.5095 224.864 64.3351 232.522 59.8472C236.892 57.2889 247.966 49.5754 252.376 45.9563C256.267 42.7547 259.308 28.5997 259.308 18.7647C259.308 16.5519 260.397 15.4528 262.438 15.3328C263.977 15.2464 265.831 15.6688 268.85 16.6431L269.762 16.9407C273.582 18.1983 274.752 18.5247 275.981 18.5247C276.648 18.5247 277.326 18.6015 278.028 18.7455C278.8 18.9039 279.596 19.1391 280.567 19.4799C281.224 19.7123 281.876 19.9555 282.521 20.2095L283.194 20.4687C286.692 21.7791 289.178 22.3646 292.36 22.3646C295.525 22.3646 297.549 21.7839 300.024 20.4831C300.141 20.4207 301.252 19.8207 301.58 19.6575C303.113 18.8751 304.294 18.5247 305.815 18.5247C306.675 18.5247 307.535 18.3183 308.43 17.9007C310.056 17.1519 311.747 15.7648 314.011 13.432L314.416 13.009C314.418 13.0074 314.417 13.0048 314.415 13.0048ZM207.943 300.531C207.892 300.804 207.653 301 207.375 301C207.008 301 206.733 300.664 206.801 300.303C207.03 299.076 207.232 297.757 207.414 296.363C207.671 294.395 207.859 292.403 207.987 290.503C208.031 289.877 208.065 289.306 207.832 287.399C207.8 287.136 207.744 286.876 207.672 286.621C207.435 285.786 207.205 284.861 206.987 283.864C205.811 278.46 205.431 272.872 206.32 267.65C206.783 264.667 207.805 261.761 209.35 259.034C211.233 255.82 213.72 252.868 216.721 250.289C218.698 248.561 219.956 247.649 223.642 245.11C226.274 243.295 227.356 242.441 228.041 241.51C228.415 240.996 228.596 240.521 228.596 240.041C228.596 239.201 228.596 239.206 228.158 235.611C227.947 233.835 227.824 232.587 227.76 231.31C227.467 225.502 228.708 221.902 232.504 220.865C241.806 218.321 247.65 215.057 252.072 208.606C257.612 200.514 267.118 193.482 273.056 193.482C280.286 193.482 284.756 192.541 290.26 189.258C294.215 186.896 295.818 186.09 297.555 185.677C298.854 185.37 299.778 185.322 302.89 185.322C303.978 185.322 304.955 184.924 306.149 184.064C306.78 183.604 309.138 181.607 309.425 181.376C312.958 178.568 316.433 177.162 321.61 177.162C323.043 177.162 324.266 177.181 325.892 177.22C330.285 177.33 331.081 177.301 332.485 176.884C334.257 176.356 335.72 175.429 341.114 171.522C345.793 168.133 347.385 167.241 354.492 163.617C355.335 163.185 356.007 162.834 356.651 162.479C358.619 161.413 360.471 160.209 362.185 158.879C364.263 157.274 366.245 155.636 368.109 153.97C368.449 153.665 368.994 153.905 368.994 154.362C368.994 154.512 368.93 154.655 368.818 154.754C366.944 156.418 364.999 158.028 362.986 159.58C361.126 161.02 359.359 162.148 357.3 163.276C356.645 163.641 355.966 163.996 355.107 164.428C348.057 168.028 346.501 168.901 341.886 172.242C336.352 176.25 334.86 177.196 332.883 177.786C331.28 178.266 330.432 178.295 325.857 178.18C324.242 178.141 323.031 178.122 321.61 178.122C316.772 178.122 313.566 179.418 310.244 182.068C309.986 182.274 307.599 184.295 306.921 184.784C305.534 185.788 304.312 186.282 302.89 186.282C299.907 186.282 299.029 186.33 297.883 186.599C296.321 186.973 294.788 187.736 290.951 190.031C285.218 193.453 280.509 194.442 273.056 194.442C267.662 194.442 258.454 201.258 253.09 209.077C248.504 215.768 242.42 219.166 232.879 221.777C229.772 222.627 228.661 225.862 228.93 231.272C228.988 232.52 229.111 233.763 229.328 235.515C229.766 239.172 229.766 239.153 229.766 240.041C229.766 240.703 229.521 241.351 229.041 242.004C228.263 243.06 227.134 243.958 224.396 245.844C220.74 248.359 219.506 249.262 217.569 250.946C214.652 253.454 212.233 256.322 210.403 259.447C208.911 262.084 207.924 264.895 207.478 267.78C206.607 272.896 206.981 278.383 208.139 283.691C208.391 284.829 208.654 285.866 208.917 286.783C209 287.061 209.073 287.314 209.209 288.288C209.25 288.583 209.261 288.881 209.246 289.177C209.116 291.613 208.895 294.044 208.584 296.469C208.392 297.907 208.181 299.266 207.943 300.531ZM200.014 301H199.551C199.482 301 199.438 300.927 199.47 300.866C201.266 297.429 201.979 295.187 201.979 291.88C201.979 290.167 201.938 289.514 201.535 284.368C201.084 278.589 200.95 274.941 201.213 270.784C201.552 265.265 202.617 260.177 204.612 255.348C205.372 253.524 206.25 251.748 207.274 250.02C209.298 246.593 211.269 244.073 213.369 242.052C214.169 241.286 215.019 240.555 215.914 239.863C216.165 239.671 217.669 238.519 218.061 238.207C221.407 235.52 222.454 232.678 222.454 224.201C222.454 215.158 224.151 212.792 231.709 210.646C232.346 210.469 232.832 210.325 233.329 210.176C234.552 209.808 235.744 209.375 236.898 208.88C239.793 207.632 242.537 205.894 245.345 203.398C260.262 190.136 267.077 186.522 278.321 186.522C283.164 186.522 286.826 185.586 291.19 183.498C292.232 183.004 299.275 179.264 301.814 178.088C303.469 177.325 305.125 176.634 306.862 175.981C311.495 174.253 315.035 173.845 322.423 173.677C326.828 173.581 328.682 173.442 330.765 172.919C333.427 172.247 335.48 170.999 337.159 168.873C338.446 167.236 341.166 165.474 345.735 163.084C346.677 162.59 347.648 162.1 349.04 161.404C354.615 158.596 355.803 157.982 357.704 156.81C360.828 154.89 363.144 152.793 365.707 149.721C366.67 148.557 367.602 147.376 368.503 146.179C368.66 145.971 368.994 146.081 368.994 146.342C368.994 146.401 368.975 146.459 368.939 146.506C367.815 147.989 366.992 149.031 366.186 149.995C363.601 153.105 361.237 155.236 358.055 157.194C356.13 158.375 354.943 158.994 349.344 161.807C348.24 162.359 347.143 162.919 346.051 163.487C341.546 165.839 338.879 167.577 337.65 169.132C335.895 171.354 333.731 172.679 330.935 173.38C328.782 173.917 326.898 174.061 322.435 174.162C315.122 174.325 311.648 174.729 307.108 176.418C305.403 177.055 303.732 177.751 302.101 178.506C299.585 179.672 292.542 183.412 291.483 183.916C287.037 186.042 283.276 187.002 278.321 187.002C267.282 187.002 260.595 190.554 245.778 203.725C242.923 206.259 240.121 208.03 237.178 209.302C236.008 209.806 234.838 210.224 233.534 210.622C233.031 210.776 232.539 210.92 230.392 211.52C227.421 212.365 226.04 213.08 224.964 214.577C223.659 216.392 223.039 219.349 223.039 224.201C223.039 232.793 221.945 235.755 218.476 238.548C218.073 238.87 216.563 240.017 216.318 240.209C215.437 240.89 214.601 241.61 213.814 242.364C211.749 244.351 209.801 246.838 207.8 250.226C206.79 251.938 205.91 253.7 205.168 255.502C203.19 260.287 202.137 265.332 201.798 270.813C201.541 274.941 201.669 278.575 202.12 284.335C202.523 289.499 202.564 290.152 202.564 291.88C202.564 294.927 201.968 297.096 200.022 300.995C200.021 300.998 200.017 301 200.014 301ZM214.683 300.704C214.684 300.867 214.553 301 214.39 301C214.23 301 214.099 300.871 214.098 300.711C214.082 298.539 214.141 296.378 214.264 293.79C214.416 290.714 214.03 288.131 212.784 282.093L212.603 281.2C211.363 275.176 210.988 271.913 211.45 268.495C212.053 264.055 214.229 260.489 218.47 257.614C231.363 248.878 235.909 243.127 235.909 236.201C235.909 234.953 235.733 233.892 235.336 232.28C234.768 229.98 234.692 229.553 234.768 228.646C234.885 227.417 235.511 226.39 236.851 225.42C238.413 224.292 240.975 223.213 244.877 222.056C250.563 220.376 253.956 217.649 259.092 211.702L260.133 210.502C262.754 207.464 264.287 205.88 266.235 204.368C268.756 202.414 271.488 201.118 274.741 200.447C282.521 198.853 286.657 197.821 289.564 196.779C290.624 196.398 291.656 195.966 292.653 195.483C293.296 195.171 293.677 194.984 295.133 194.235C296.713 193.429 298.187 193.237 301.79 193.141C304.973 193.055 306.412 192.935 308.208 192.464C310.362 191.899 312.29 190.868 313.789 189.479C316.638 186.935 319.656 185.826 324.196 185.207C324.822 185.12 325.295 185.063 326.454 184.928C330.49 184.463 332.268 184.117 334.339 183.191C336.972 182.015 338.311 181.06 348.063 173.745L349.9 172.377C355.545 168.196 359.33 165.738 362.431 164.466C364.746 163.519 366.604 162.384 368.559 160.717C368.729 160.572 368.994 160.691 368.994 160.915C368.994 160.991 368.961 161.063 368.903 161.112C366.935 162.783 365.044 163.929 362.688 164.898C359.658 166.141 355.896 168.58 350.286 172.732L348.461 174.1C338.633 181.468 337.317 182.404 334.62 183.613C332.467 184.573 330.642 184.933 326.536 185.404C325.383 185.538 324.909 185.596 324.289 185.677C319.867 186.282 316.965 187.348 314.222 189.805C312.655 191.256 310.64 192.334 308.389 192.925C306.517 193.405 305.043 193.535 301.808 193.621C298.31 193.717 296.9 193.895 295.437 194.643C294.618 195.073 293.789 195.49 292.951 195.896C291.933 196.387 290.88 196.828 289.798 197.216C286.85 198.272 282.691 199.314 274.881 200.912C269.183 202.083 265.954 204.584 260.607 210.781L259.572 211.981C254.365 218 250.902 220.784 245.076 222.507C241.232 223.64 238.729 224.7 237.237 225.78C236.008 226.673 235.453 227.576 235.353 228.68C235.277 229.524 235.353 229.942 235.909 232.184C236.318 233.825 236.494 234.92 236.494 236.201C236.494 243.3 231.855 249.161 218.839 257.988C214.726 260.772 212.615 264.228 212.03 268.548C211.573 271.908 211.948 275.138 213.176 281.124L213.363 282.012C214.621 288.083 215.001 290.685 214.849 293.81C214.726 296.368 214.667 298.514 214.683 300.704ZM74.1006 301C73.487 301 73.0291 300.433 73.1316 299.828C73.4129 298.168 73.6291 296.087 73.849 293.33C73.966 291.837 74.007 291.381 74.0772 290.642C74.8377 282.223 76.4405 277.615 80.8046 274.706C83.5248 272.896 85.0282 270.424 85.8764 267.026C86.1748 265.817 86.2859 265.169 86.6545 262.625C87.0406 259.985 87.333 258.756 87.9648 257.652C88.8131 256.169 90.1995 255.401 92.2879 255.401C100.642 255.401 114.798 259.778 123.643 265.097C128.709 268.145 136.08 271.49 142.211 273.309C149.833 275.57 155.016 275.426 156.689 272.479C157.684 270.732 157.813 270.506 158.24 269.709C159.954 266.508 160.983 263.853 161.311 261.309C161.445 260.268 161.451 259.279 161.323 258.334C161.135 257.014 160.492 256.15 158.936 254.806L158.164 254.148C157.661 253.725 157.191 253.278 156.754 252.809C156.205 252.19 155.716 251.537 155.291 250.855L154.63 249.828C153.683 248.34 153.063 247.62 152.22 247.159C149.143 245.479 143.562 244.519 135.519 243.881C133.758 243.743 131.995 243.63 130.23 243.54L128.955 243.459C123.357 243.108 120.11 242.71 117.805 241.923C109.592 239.115 97.5587 229.241 97.5587 224.201C97.5587 221.638 98.5766 219.627 100.759 217.419C101.917 216.248 107.264 211.798 108.241 210.92C110.885 208.534 114.184 206.341 118.583 203.883C120.221 202.971 127.229 199.275 128.815 198.368C130.136 197.585 131.377 196.713 132.524 195.762C133.419 195.042 136.595 192.339 136.689 192.258C140.889 188.754 144.118 186.709 148.236 185.356C150.202 184.712 152.992 184.016 158.444 182.773C160.741 182.247 163.038 181.722 165.336 181.199C167.814 180.629 170.285 180.037 172.747 179.423C184.681 176.428 192.637 173.625 196.609 170.572C201.722 166.636 203.5 163.929 205.811 158.082C206.993 155.097 207.619 153.743 208.777 151.977C214.358 143.476 225.572 133.08 234.224 130.161C242.502 127.363 245.561 124.526 245.561 121.483C245.561 120.096 247.158 117.451 249.557 114.893C252.341 111.917 255.787 109.44 259.355 108.086C266.668 105.317 278.952 103.243 287.096 103.243C290.208 103.243 292.846 102.523 296.701 100.896C302.083 98.6354 302.609 98.4434 304.645 98.4434C310.741 98.4434 323.4 97.2194 331.414 95.5778L333.684 95.1074L335.714 94.6802C337.235 94.3634 338.247 94.1618 339.183 93.9938C341.465 93.581 343.138 93.4035 344.787 93.4323C346.39 93.4611 347.987 93.6818 349.859 94.1426C352.527 94.8002 357.879 93.7107 363.238 91.4163C364.98 90.6778 366.654 89.8349 368.245 88.8945C368.574 88.7 368.994 88.9346 368.994 89.3168C368.994 89.4878 368.905 89.6461 368.758 89.7333C362.3 93.5629 353.872 96.1359 349.52 95.0642C347.98 94.6599 346.38 94.4337 344.764 94.3922C343.225 94.3682 341.628 94.5362 339.435 94.9298C337.606 95.2676 335.787 95.6357 333.977 96.0338L331.695 96.509C323.587 98.1698 310.834 99.4034 304.645 99.4034C302.896 99.4034 302.358 99.5954 297.233 101.751C293.226 103.435 290.442 104.203 287.096 104.203C279.11 104.203 267.001 106.248 259.847 108.955C256.465 110.237 253.166 112.613 250.487 115.473C248.235 117.883 246.731 120.369 246.731 121.483C246.731 124.973 243.338 128.116 234.669 131.044C226.321 133.867 215.27 144.105 209.807 152.428C208.695 154.132 208.081 155.442 206.923 158.38C204.553 164.365 202.693 167.207 197.405 171.273C193.263 174.46 185.196 177.306 173.087 180.34C170.618 180.955 168.142 181.549 165.657 182.12C163.359 182.653 161.058 183.178 158.755 183.695C153.349 184.933 150.582 185.62 148.669 186.248C144.732 187.54 141.62 189.512 137.525 192.93C137.437 193.002 134.249 195.714 133.343 196.443C132.149 197.433 130.858 198.341 129.482 199.155C127.879 200.077 120.853 203.778 119.244 204.675C114.915 207.094 111.674 209.245 109.106 211.563C108.1 212.475 102.788 216.896 101.671 218.024C99.6412 220.069 98.7287 221.878 98.7287 224.201C98.7287 228.761 110.428 238.361 118.256 241.039C120.403 241.774 123.579 242.163 129.049 242.503C129.895 242.557 130.741 242.608 131.588 242.657C133.483 242.767 134.553 242.835 135.642 242.921C143.878 243.579 149.576 244.553 152.87 246.363C153.934 246.939 154.636 247.759 155.677 249.382L156.327 250.404C156.724 251.042 157.182 251.654 157.696 252.233C158.058 252.631 158.456 253.001 159.018 253.486C159.152 253.601 159.661 254.042 159.79 254.143C161.504 255.626 162.27 256.654 162.487 258.223C162.627 259.241 162.621 260.301 162.481 261.41C162.136 264.074 161.077 266.81 159.316 270.098C158.883 270.9 158.755 271.13 157.76 272.882C155.718 276.468 149.962 276.626 141.819 274.212C135.577 272.359 128.113 268.97 122.953 265.869C114.301 260.661 100.378 256.361 92.2938 256.361C89.3688 256.361 88.5498 257.81 87.8244 262.74C87.646 264.242 87.3806 265.737 87.0289 267.218C86.1338 270.818 84.5134 273.477 81.5475 275.455C77.5286 278.133 75.9901 282.549 75.2471 290.719C75.1828 291.448 75.1419 291.904 75.0249 293.392C74.756 296.753 74.4931 299.142 74.1076 300.994C74.1069 300.998 74.104 301 74.1006 301ZM78.8097 301C78.5067 301 78.2843 300.715 78.3553 300.421C78.4786 299.909 78.6045 299.368 78.7395 298.797L79.3538 296.099C80.8163 289.715 81.8107 286.538 83.2615 284.555C84.256 283.192 85.4143 281.916 87.9707 279.261C92.7735 274.288 94.3354 272.277 94.3354 270.281L94.3237 269.469C94.312 268.615 94.312 268.173 94.3354 267.66C94.4582 265.236 95.1953 263.724 97.0497 263.148C99.3429 262.428 103.128 263.359 108.82 266.234C114.412 269.057 119.075 271.37 123.977 273.751C124.743 274.125 132.325 277.788 134.314 278.767C135.569 279.385 136.821 280.009 138.069 280.639C146.154 284.719 160.849 283.063 165.154 276.88C167.26 273.866 167.81 272.791 169.706 268.567C169.924 268.072 170.154 267.581 170.396 267.093C171.033 265.808 171.828 264.579 172.771 263.426C178.229 256.716 181.499 250.898 181.499 245.801C181.499 244.044 181.938 242.623 183.464 238.673C183.769 237.886 183.95 237.396 184.137 236.883C186.267 231.012 185.916 227.705 181.628 225.363C179.881 224.392 177.881 223.771 175.789 223.549C171.577 223.102 167.313 224.11 161.802 226.371C160.896 226.745 157.918 228.022 157.356 228.257C156.532 228.6 155.725 228.968 154.935 229.361L152.361 230.638C145.563 233.96 140.427 235.044 133.167 233.556C131.225 233.153 129.517 232.884 125.504 232.289C117.753 231.142 114.564 230.489 111.856 229.188C108.211 227.427 107.492 224.859 110.171 221.197C112.526 217.986 115.364 215.032 118.618 212.403C120.186 211.13 121.81 209.904 123.485 208.726C123.444 208.75 127.089 206.182 128.06 205.477C129.392 204.52 130.662 203.506 131.863 202.438C136.367 198.378 139.339 196.026 143.609 193.525C149.424 190.117 156.128 187.592 164.189 186.047C185.851 181.9 194.024 179.951 198.604 177.44C203.635 174.69 211.064 165.551 220.155 151.132C223.209 146.284 227.333 142.3 232.516 138.792C235.517 136.756 238.108 135.312 242.783 132.921C247.123 130.704 248.41 129.974 249.44 129.004C250.141 128.293 250.721 127.506 251.165 126.667C251.522 126.043 252.844 123.561 252.92 123.417C253.716 121.977 254.418 120.825 255.231 119.707C259.051 114.442 264.609 111.067 273.6 109.723C281.047 108.619 285.212 108.427 290.962 108.619C292.864 108.682 293.378 108.696 294.238 108.686C297.251 108.653 299.919 108.187 303.955 106.862C316.088 102.878 326.623 101.083 338.581 101.083C340.365 101.083 342.108 101.155 344.711 101.314L345.934 101.391C353.217 101.851 356.51 101.851 360.757 101.088C363.518 100.59 366.175 99.7645 368.644 98.6374C368.81 98.5616 369 98.6822 369 98.8647C369 98.9619 368.944 99.0503 368.855 99.0904C366.356 100.225 363.67 101.056 360.88 101.559C356.563 102.331 353.229 102.331 345.887 101.871L344.67 101.794C342.079 101.635 340.347 101.563 338.581 101.563C326.705 101.563 316.234 103.349 304.177 107.304C300.076 108.648 297.333 109.128 294.25 109.166C293.372 109.176 292.852 109.162 290.939 109.099C285.229 108.907 281.111 109.094 273.699 110.203C264.889 111.514 259.472 114.801 255.734 119.952C254.887 121.135 254.125 122.358 253.453 123.614C253.383 123.749 252.055 126.24 251.692 126.873C251.226 127.753 250.616 128.577 249.878 129.321C248.79 130.344 247.498 131.078 243.093 133.329C238.442 135.71 235.868 137.145 232.89 139.161C227.766 142.631 223.688 146.567 220.67 151.353C211.538 165.849 204.08 175.026 198.932 177.844C194.263 180.397 186.079 182.351 164.318 186.517C156.333 188.043 149.705 190.544 143.948 193.919C139.725 196.395 136.771 198.723 132.295 202.765C131.082 203.844 129.799 204.87 128.452 205.837C127.475 206.547 123.825 209.115 123.866 209.086C121.953 210.45 120.473 211.563 119.034 212.744C115.817 215.346 113.013 218.27 110.686 221.446C108.17 224.883 108.802 227.153 112.166 228.771C114.781 230.033 117.946 230.686 125.761 231.838C128.298 232.18 130.819 232.597 133.319 233.086C140.403 234.54 145.393 233.489 152.074 230.225L154.648 228.953C155.619 228.473 156.379 228.123 157.105 227.825C157.661 227.595 160.638 226.318 161.551 225.944C167.161 223.64 171.519 222.613 175.877 223.073C178.057 223.304 180.14 223.95 181.961 224.96C186.536 227.46 186.904 230.969 184.711 237.022C184.523 237.535 184.336 238.03 184.032 238.817C182.529 242.715 182.096 244.116 182.096 245.801C182.096 251.023 178.785 256.908 173.274 263.695C172.353 264.82 171.574 266.02 170.952 267.276C170.735 267.708 170.525 268.149 170.261 268.735C168.36 272.983 167.798 274.077 165.675 277.12C161.188 283.562 146.119 285.256 137.771 281.047C136.528 280.418 135.28 279.795 134.027 279.18C132.038 278.2 124.457 274.538 123.69 274.164C118.788 271.778 114.12 269.469 108.527 266.647C102.97 263.839 99.3429 262.951 97.272 263.594C95.7042 264.084 95.0491 265.428 94.9321 267.679C94.9061 268.274 94.9022 268.869 94.9204 269.465L94.9321 270.281C94.9321 272.44 93.3585 274.471 88.193 279.818C85.8998 282.194 84.7591 283.461 83.7763 284.805C82.3782 286.711 81.3895 289.874 79.9388 296.19L79.3245 298.888L78.8242 300.989C78.8226 300.995 78.8166 301 78.8097 301ZM84.9521 301H84.8479C84.5911 301 84.3905 300.777 84.3905 300.52C84.3905 294.573 89.3513 284.407 95.599 279.703C96.3991 279.1 97.1188 278.429 97.7459 277.701C98.3825 276.955 98.9459 276.169 99.4306 275.349C99.6412 275.004 100.454 273.592 100.659 273.256C102.543 270.237 104.66 270.117 110.586 273.444C111.37 273.876 114.137 275.44 114.33 275.546C115.863 276.41 117.062 277.082 118.25 277.735C121.192 279.362 123.731 280.711 126.153 281.911C134.536 286.072 141.064 288.28 146.107 288.28C155.97 288.28 165.242 285.424 169.273 281.176C170.203 280.197 171.145 278.695 172.233 276.554C172.701 275.632 173.192 274.605 173.795 273.29L175.397 269.772C178.124 263.801 179.937 260.623 182.16 258.602C186.781 254.383 190.859 241.323 190.859 233.321C190.859 232.409 190.958 231.828 191.455 229.352C191.672 228.296 191.795 227.624 191.888 226.918C192.257 224.273 192.011 222.377 190.906 220.971C188.215 217.563 179.381 216.541 168.407 218.677C164.601 219.381 160.889 220.394 157.327 221.701C154.303 222.838 147.318 226.376 147.675 226.212C143.744 227.96 140.087 228.204 133.167 226.836C115.881 223.409 115.366 222.699 124.24 213.968C134.442 203.922 151.805 191.802 157.222 191.802C163.025 191.802 188.718 186.052 195.702 183.186C201.236 180.916 209.929 173.02 217.242 165.018C217.657 164.562 225.139 154.65 228.474 150.811C233.943 144.508 239.132 139.987 244.239 137.596C248.504 135.595 251.938 132.662 255.237 128.606C256.366 127.214 261.391 120.134 262.684 118.809C263.585 117.883 264.439 117.269 265.328 116.942C273.559 113.942 279.497 112.603 288.26 112.603H305.224C307.594 112.603 309.53 112.411 318.638 111.403L321.154 111.13C326.957 110.506 330.847 110.203 333.889 110.203C334.86 110.203 335.615 110.208 337.416 110.222C348.303 110.314 354.118 109.992 363.659 108.288C365.353 107.988 367.012 107.503 368.644 106.841C368.808 106.775 368.988 106.895 368.988 107.072C368.988 107.172 368.928 107.262 368.835 107.299C367.229 107.951 365.532 108.441 363.782 108.758C354.188 110.467 348.338 110.794 337.411 110.702C335.609 110.688 334.86 110.683 333.889 110.683C330.876 110.683 327.009 110.986 321.23 111.605L318.714 111.883C309.565 112.896 307.635 113.083 305.224 113.083H288.26C279.596 113.083 273.729 114.403 265.562 117.384C264.778 117.672 263.988 118.238 263.14 119.112C261.877 120.398 256.869 127.459 255.722 128.87C252.376 132.984 248.878 135.974 244.532 138.009C239.518 140.361 234.376 144.839 228.953 151.084C225.631 154.91 218.149 164.831 217.71 165.306C210.339 173.37 201.611 181.3 195.96 183.618C188.905 186.512 163.119 192.282 157.222 192.282C152.062 192.282 134.764 204.354 124.685 214.275C116.144 222.685 116.384 223.016 133.307 226.371C140.093 227.715 143.603 227.475 147.4 225.795C147.008 225.963 154.016 222.421 157.087 221.264C160.252 220.073 163.873 219.061 168.266 218.206C179.457 216.032 188.536 217.078 191.397 220.712C192.596 222.233 192.848 224.225 192.473 226.971C192.354 227.795 192.208 228.616 192.035 229.433C191.543 231.872 191.444 232.452 191.444 233.321C191.444 241.433 187.331 254.599 182.593 258.919C180.44 260.882 178.638 264.031 175.942 269.94C175.737 270.386 174.655 272.791 174.345 273.458C173.736 274.783 173.245 275.81 172.777 276.741C171.665 278.916 170.7 280.452 169.735 281.469C165.581 285.851 156.134 288.76 146.107 288.76C140.924 288.76 134.319 286.528 125.849 282.319C123.421 281.114 120.876 279.765 117.922 278.133C116.61 277.409 115.301 276.679 113.997 275.944L110.253 273.837C104.59 270.655 102.876 270.756 101.186 273.477C100.981 273.804 100.168 275.215 99.9571 275.565C99.4588 276.406 98.8798 277.214 98.2256 277.98C97.5704 278.733 96.8391 279.42 95.9967 280.058C89.8719 284.666 84.9755 294.703 84.9755 300.52L84.9582 300.994C84.9581 300.997 84.9554 301 84.9521 301ZM67.6027 300.996C67.6042 300.998 67.6033 301 67.6013 301H67.2079C67.0988 301 67.03 300.882 67.0811 300.786C67.6895 299.639 68.0108 298.425 68.0108 297.16C68.0108 287.56 70.8363 276.981 75.1185 273.472C78.1429 270.986 79.6638 269.45 80.9099 267.357C82.4542 264.761 83.2206 261.597 83.2206 257.321C83.2206 254.047 83.8875 251.758 85.192 250.087C86.2099 248.791 87.2979 248.066 90.4042 246.478C91.2049 246.079 91.9676 245.632 92.6857 245.139C95.3825 243.238 96.5349 242.163 97.2018 240.622C98.0384 238.692 97.7459 236.283 96.1137 232.932C95.4393 231.601 94.6596 230.307 93.7796 229.059L93.2356 228.243C92.6845 227.459 92.1693 226.658 91.6912 225.843C88.6727 220.702 89.4858 216.771 96.1839 211.549C101.048 207.745 106.294 204.284 111.868 201.205C114.184 199.914 121.695 196.021 123.123 195.205C124.599 194.353 130.711 189.975 132.098 188.985C132.55 188.662 132.94 188.385 133.208 188.197C136.115 186.152 138.526 184.597 140.842 183.325C143.603 181.813 146.089 180.791 148.371 180.292C155.847 178.655 157.497 178.285 161.106 177.426C168.448 175.679 173.953 174.114 177.568 172.626C178.974 172.076 180.436 171.628 181.938 171.287C187.004 170.01 188.969 169.319 191.865 167.399C195.831 164.778 199.511 160.559 203.173 154.022C212.515 137.332 214.334 135.115 221.98 130.411C223.817 129.278 225.707 128.443 228.667 127.339L230.03 126.84C237.009 124.272 239.898 122.553 242.373 118.497C243.473 116.688 243.824 115.478 244.344 112.608C244.801 110.117 245.21 108.979 246.409 107.688C247.913 106.056 250.522 104.678 254.81 103.363C256.781 102.758 259.115 102.163 261.859 101.573C271.412 99.509 276.648 99.0002 285.025 98.7842C289.061 98.6786 290.582 98.5154 292.431 97.8242C293.127 97.565 293.811 97.2338 294.525 96.8114C296.689 95.5154 299.287 94.6322 302.27 94.0898C305.61 93.4802 308.524 93.3507 313.209 93.3939L314.584 93.4035C316.234 93.4035 318.562 92.9235 326.109 91.1523C332.444 89.6739 335.439 89.0835 337.399 89.0835C337.879 89.0835 338.51 89.1459 339.476 89.2803L342.406 89.7123C348.151 90.5187 352.609 90.6195 357.119 89.6115C361.565 88.6149 365.396 86.5689 368.525 83.2787C368.69 83.105 368.988 83.2199 368.988 83.4596C368.988 83.5264 368.963 83.5909 368.916 83.6392C365.729 86.9741 361.811 89.0528 357.271 90.0675C352.661 91.0995 348.128 90.9987 342.307 90.1779L339.382 89.7459C338.446 89.6211 337.838 89.5587 337.399 89.5587C335.527 89.5587 332.532 90.1443 325.851 91.7091C318.626 93.4035 316.316 93.8787 314.584 93.8787L313.204 93.869C308.559 93.8211 305.686 93.9507 302.399 94.5506C299.491 95.0834 296.958 95.9426 294.864 97.1906C294.179 97.6061 293.444 97.9632 292.67 98.2562C290.728 98.9762 289.161 99.1538 285.042 99.2594C276.706 99.4706 271.511 99.9794 262.011 102.029C259.646 102.525 257.313 103.118 255.021 103.805C250.826 105.101 248.299 106.426 246.872 107.971C245.76 109.181 245.362 110.256 244.924 112.675C244.397 115.593 244.029 116.841 242.894 118.704C241.594 120.892 239.652 122.78 237.243 124.2C235.417 125.285 233.762 125.99 230.264 127.272L228.912 127.771C225.982 128.86 224.127 129.686 222.331 130.79C214.785 135.436 213.012 137.592 203.699 154.214C200.008 160.818 196.27 165.1 192.234 167.773C189.262 169.741 187.244 170.447 182.113 171.743C180.64 172.076 179.205 172.514 177.825 173.053C174.175 174.551 168.641 176.125 161.27 177.882C157.034 178.883 152.783 179.838 148.517 180.748C146.312 181.232 143.878 182.236 141.17 183.719C138.529 185.205 136 186.819 133.594 188.552C132.336 189.437 128.383 192.294 128.068 192.522C128.053 192.533 128.041 192.542 128.026 192.553C126.569 193.63 125.046 194.645 123.462 195.594C122.023 196.419 114.5 200.312 112.195 201.594C106.647 204.659 101.424 208.103 96.5817 211.889C90.0708 216.968 89.3103 220.673 92.2119 225.632C92.6863 226.439 93.1975 227.232 93.7445 228.008L94.2944 228.824C95.1834 230.087 95.971 231.397 96.6519 232.745C98.3367 236.201 98.6409 238.726 97.7576 240.775C97.0439 242.422 95.8388 243.545 93.066 245.499C92.3991 245.964 91.7088 246.363 89.9655 247.26C87.6723 248.436 86.6369 249.127 85.6892 250.342C84.4432 251.926 83.8056 254.129 83.8056 257.316C83.8056 261.66 83.0217 264.895 81.4363 267.559C80.1552 269.714 78.5991 271.289 75.5279 273.804C71.3921 277.197 68.5958 287.675 68.5958 297.155C68.5958 298.499 68.2568 299.785 67.6021 300.994C67.6017 300.995 67.6019 300.996 67.6027 300.996ZM232.89 301C232.544 301 232.244 300.761 232.166 300.424L231.656 298.216C229.854 290.411 229.287 285.64 230.053 280.332C230.463 277.548 230.504 275.685 230.375 272.988C230.27 270.852 230.275 270.261 230.486 269.325C230.942 267.261 232.498 265.231 236.564 261.482C241.87 256.586 243.736 254.086 248.147 247.01C248.937 245.743 249.51 244.865 250.124 243.987C250.651 243.228 251.189 242.518 251.745 241.827C253.581 239.571 255.857 237.785 261.596 233.758C268.159 229.15 270.663 227.105 272.202 224.576C272.611 223.904 272.962 223.232 273.331 222.464C273.63 221.818 273.92 221.17 274.202 220.52C276.326 215.749 278.888 213.833 287.599 211.971C290.518 211.347 299.62 209.509 300.106 209.408C309.577 207.44 314.923 205.875 319.691 203.36C323.119 201.55 323.108 201.555 335.872 195.426L337.393 194.696C343.377 191.816 347.396 189.8 350.69 188C352.45 187.044 354.167 186.035 355.838 184.976C357.085 184.169 358.328 183.356 359.564 182.538C362.38 180.687 365.426 179.084 368.652 177.758C368.815 177.69 368.994 177.811 368.994 177.988C368.994 178.089 368.933 178.181 368.839 178.219C365.677 179.52 362.692 181.091 359.933 182.908C360.038 182.84 357.148 184.751 356.2 185.356C354.52 186.423 352.793 187.439 351.023 188.403C347.718 190.208 343.693 192.224 337.697 195.109L336.176 195.843C323.423 201.963 323.435 201.958 320.013 203.763C315.175 206.317 309.781 207.896 300.252 209.874C299.766 209.974 290.664 211.813 287.757 212.432C283.059 213.44 280.064 214.592 278.133 216.032C276.577 217.193 275.794 218.365 274.758 220.688L273.881 222.641C273.54 223.371 273.158 224.087 272.734 224.787C271.143 227.403 268.616 229.467 261.982 234.123C256.29 238.116 254.026 239.892 252.242 242.091C251.678 242.788 251.144 243.5 250.639 244.227C250.025 245.095 249.463 245.969 248.679 247.227C244.245 254.335 242.35 256.865 237.003 261.799C233.007 265.495 231.504 267.453 231.065 269.412C230.866 270.3 230.866 270.871 230.966 272.964C231.094 275.69 231.048 277.572 230.644 280.389C229.883 285.631 230.445 290.368 232.241 298.125L232.895 300.994C232.896 300.997 232.893 301 232.89 301ZM188.086 301C187.496 301 187.092 300.406 187.308 299.857L187.671 298.936C188.279 297.352 188.8 295.682 189.238 293.944C190.789 287.834 191.151 282.602 191.151 274.12C191.151 271.38 190.063 269.441 188.735 269.441C187.015 269.441 184.664 272.133 182.341 277.639C176.614 291.247 169.103 297.64 157.228 297.64C144.112 297.64 140.111 296.992 128.902 292.797C127.007 292.083 125.167 291.275 123.392 290.378C121.666 289.514 115.916 286.264 114.711 285.712C112.254 284.579 110.616 284.411 109.024 285.237C108.656 285.429 108.287 285.674 107.913 285.981C107.111 286.633 106.269 287.251 105.392 287.834C104.801 288.231 104.205 288.621 103.602 289.005L103.017 289.389C98.1495 292.567 96.3887 294.846 96.3887 299.56C96.3887 299.862 96.3843 300.158 96.374 300.452C96.3633 300.76 96.1072 301 95.7987 301C95.4621 301 95.1958 300.716 95.2064 300.38C95.215 300.109 95.2187 299.837 95.2187 299.56C95.2187 294.51 97.1667 291.986 102.291 288.635C102.68 288.378 103.07 288.122 103.461 287.867C103.947 287.56 104.298 287.325 104.649 287.095C105.498 286.53 106.312 285.931 107.088 285.299C107.521 284.949 107.954 284.656 108.399 284.426C110.428 283.37 112.493 283.586 115.284 284.872C116.542 285.453 122.321 288.712 124 289.557C125.738 290.435 127.539 291.225 129.394 291.923C140.433 296.056 144.27 296.68 157.228 296.68C168.489 296.68 175.649 290.584 181.247 277.322C183.728 271.442 186.313 268.481 188.741 268.481C190.964 268.481 192.327 270.909 192.327 274.12C192.327 282.664 191.959 287.944 190.397 294.136C189.946 295.912 189.414 297.606 188.788 299.224C188.555 299.846 188.321 300.435 188.094 300.995C188.093 300.998 188.089 301 188.086 301ZM101.289 301C101.068 301 100.935 300.755 101.055 300.569L101.069 300.549C102.461 298.477 103.735 296.353 104.889 294.184C106.486 291.165 108.27 289.557 110.294 289.135C112.482 288.679 114.477 289.49 117.641 291.597C120.818 293.709 121.192 293.93 122.163 294.045C123.099 294.151 124.667 294.592 127.346 295.461C128.107 295.701 133.653 297.549 135.449 298.125C137.244 298.701 138.871 299.205 140.415 299.651C141.505 299.969 142.548 300.258 143.546 300.519C143.812 300.588 143.762 301 143.487 301C143.467 301 143.447 300.997 143.428 300.992C142.407 300.726 141.34 300.431 140.216 300.102C138.547 299.614 136.887 299.104 135.238 298.571C133.436 297.995 127.885 296.152 127.13 295.907C124.497 295.053 122.947 294.621 122.081 294.515C120.947 294.386 120.601 294.179 117.273 291.971C114.248 289.955 112.382 289.197 110.434 289.6C108.621 289.975 106.959 291.482 105.427 294.376C104.249 296.592 102.945 298.762 101.52 300.877C101.468 300.954 101.382 301 101.289 301ZM168.525 301C168.279 301 168.223 300.599 168.456 300.52C170.262 299.908 171.936 299.054 173.409 297.99C174.315 297.338 175.351 296.33 176.532 294.971C177.147 294.271 177.79 293.483 178.527 292.552C179.02 291.931 179.507 291.307 179.99 290.68L180.265 290.32L180.809 289.615C181.411 288.82 182.045 288.042 182.71 287.282C183.324 286.595 183.775 286.211 184.137 286.101C184.734 285.923 185.009 286.331 185.009 287.08L185.015 288.093C185.044 291.41 184.968 293.527 184.605 295.931C184.382 297.597 183.939 299.238 183.286 300.825C183.242 300.931 183.138 301 183.023 301C182.818 301 182.679 300.789 182.757 300.598C183.385 299.066 183.809 297.482 184.02 295.874C184.383 293.493 184.459 291.395 184.43 288.098L184.424 287.08C184.424 286.615 184.377 286.543 184.336 286.552C184.126 286.619 183.722 286.96 183.184 287.56C182.525 288.314 181.897 289.086 181.3 289.874L180.762 290.575L180.481 290.935C179.995 291.562 179.507 292.19 179.019 292.816C178.281 293.752 177.626 294.544 177.006 295.255C175.801 296.637 174.742 297.674 173.789 298.35C172.251 299.466 170.494 300.359 168.591 300.989C168.57 300.996 168.548 301 168.525 301ZM59.4143 300.931C59.3677 300.975 59.3054 301 59.2408 301C59.0032 301 58.8898 300.696 59.0591 300.529C60.6975 298.915 61.5759 296.708 61.5759 293.8C61.5759 284.872 61.5525 285.472 62.1726 283.831C62.5236 282.904 63.0501 282.036 64.0855 280.648C64.3312 280.312 66.9637 276.904 68.0518 275.436C69.8301 273.05 74.5101 267.516 75.1945 266.527C77.2303 263.609 77.9557 260.738 77.9557 254.921C77.9557 251.153 79.4181 248.105 82.6941 243.67L84.3555 241.447C84.8707 240.757 85.3565 240.053 85.8121 239.335C86.7598 237.823 87.2628 236.561 87.3447 235.361C87.4617 233.547 86.5843 231.862 84.4783 230.129C81.4773 227.672 79.4474 227.523 77.9264 229.241C76.6862 230.643 75.8906 232.956 74.9664 237.147C74.9 237.427 74.0539 241.25 73.9843 241.529C73.7354 242.529 73.5113 243.275 73.2582 243.948C72.4684 246.07 71.0937 247.601 68.3677 249.833L66.4606 251.369C62.7284 254.436 60.7979 256.894 59.8151 260.729L59.1365 263.378C58.6276 265.346 58.2239 266.757 57.7735 268.149C55.6266 274.744 52.1283 280.615 44.5586 289.615C40.2544 294.737 38.2643 298.358 38.1717 300.7C38.1652 300.864 38.0339 301 37.8691 301C37.7112 301 37.5811 300.875 37.5864 300.717C37.6703 298.238 39.7145 294.535 44.0789 289.346C51.6077 280.384 55.0767 274.562 57.206 268.025C57.6565 266.642 58.0543 265.241 58.5632 263.277L59.2418 260.633C60.2538 256.687 62.2428 254.153 66.0511 251.033C66.4196 250.726 67.7125 249.689 67.9523 249.492C70.6257 247.313 71.942 245.835 72.7024 243.809C73.2158 242.313 73.6201 240.794 73.9134 239.259L74.3872 237.065C75.3349 232.793 76.1422 230.441 77.4526 228.958C79.2075 226.966 81.6645 227.144 84.8878 229.793C87.1107 231.617 88.0584 233.432 87.9297 235.39C87.842 236.667 87.3155 237.987 86.3327 239.556C85.8717 240.284 85.3801 240.998 84.8585 241.697L83.1972 243.919C79.968 248.287 78.5406 251.263 78.5406 254.921C78.5406 260.815 77.7919 263.767 75.7034 266.767C75.0014 267.775 70.3157 273.319 68.5549 275.685C67.4609 277.154 64.8285 280.572 64.5886 280.898C63.5766 282.252 63.0676 283.092 62.7342 283.97C62.1375 285.544 62.1609 284.978 62.1609 293.8C62.1609 296.888 61.1929 299.228 59.4143 300.931ZM199.4 13.0048C199.684 13.0048 199.869 13.3043 199.738 13.5572C199.604 13.8164 199.464 14.0825 199.318 14.3584C197.036 18.7071 196.13 21.6303 196.13 26.4446C196.13 30.1117 194.901 32.0125 192.245 32.7085C190.221 33.2365 188.899 33.1789 181.967 32.5021C175.409 31.8685 171.017 31.7504 165.956 32.3759C165.648 32.4139 165.349 32.4838 165.052 32.5728C160.994 33.7895 150.201 35.8044 146.698 35.8044C140.175 35.8044 125.194 34.422 115.038 32.4397C113.372 32.0861 111.637 32.0093 109.934 32.2137C108.231 32.4181 106.595 32.8997 105.123 33.6301C102.753 34.7484 100.975 36.0444 96.9912 39.3756C93.3175 42.4427 91.4163 43.8059 88.9184 44.8955C84.7708 46.7146 82.3548 48.5674 81.0795 50.785C80.0148 52.6329 79.7165 54.5481 79.7165 58.1241C79.7165 60.236 78.1662 61.3352 74.1883 62.7992C74.2468 62.7752 72.4509 63.428 71.942 63.62C66.8057 65.5687 64.5067 67.5991 64.5067 71.5638C64.5067 77.5733 61.6637 80.7893 54.363 84.9844L51.6954 86.4916C50.584 87.1156 49.765 87.5956 48.9635 88.0755C48.4253 88.4019 47.9164 88.7187 47.4309 89.0355C43.2423 91.7331 40.996 96.0146 38.3284 105.01C37.9599 106.243 36.3979 111.73 35.9475 113.237C35.0414 116.353 34.027 119.447 32.9056 122.515C32.1041 124.675 30.2731 129.748 30.004 130.449C29.3898 132.081 29.0446 132.82 28.5649 133.483C28.0852 134.155 24.5577 137.841 21.1706 142.252L18.495 145.78C18.3355 145.991 18 145.878 18 145.614C18 145.554 18.0197 145.495 18.0561 145.447L20.6793 141.993C22.9916 138.995 25.4526 136.076 28.056 133.243C27.8805 133.483 28.8457 131.899 29.4483 130.305C29.7115 129.614 31.5425 124.541 32.344 122.371C33.4145 119.477 34.3563 116.568 35.3801 113.122C35.8247 111.619 37.3924 106.133 37.7551 104.894C40.4578 95.7986 42.7392 91.4451 47.0682 88.6563C47.5596 88.3347 48.0744 88.018 48.6184 87.6916C49.4257 87.202 50.2564 86.7268 51.3678 86.098L54.0237 84.5908C61.1898 80.4773 63.9217 77.3861 63.9217 71.5638C63.9217 67.3687 66.3787 65.1991 71.6963 63.188C72.211 62.9912 74.0128 62.3384 73.9485 62.3576C77.7275 60.9656 79.1315 59.972 79.1315 58.1241C79.1315 54.4761 79.4415 52.5081 80.5472 50.5834C81.8868 48.2602 84.3905 46.3354 88.6434 44.4731C91.0711 43.4123 92.9431 42.0731 96.921 38.7468C100.595 35.6748 102.397 34.3644 104.83 33.2125C106.367 32.4507 108.075 31.9484 109.852 31.7349C111.629 31.5214 113.44 31.6011 115.179 31.9693C125.281 33.9468 140.216 35.3244 146.698 35.3244C150.132 35.3244 160.896 33.3107 164.929 32.1024C165.226 32.0134 165.525 31.9436 165.833 31.9055C170.969 31.27 175.414 31.3837 182.037 32.0269C188.841 32.6893 190.168 32.7469 192.07 32.2525C194.445 31.6285 195.545 29.9245 195.545 26.4446C195.545 21.5982 196.457 18.6226 199.403 13.0101C199.404 13.0077 199.402 13.0048 199.4 13.0048ZM214.098 13.3001C214.096 13.1374 214.227 13.0048 214.39 13.0048C214.55 13.0048 214.681 13.1339 214.683 13.2943C214.718 15.9045 214.84 18.6509 215.06 22.3166C215.335 26.9726 215.434 29.3101 215.434 32.6845C215.434 37.3932 212.696 41.0651 207.771 43.8011C203.951 45.9275 199.031 47.3818 193.538 48.2794C191.35 48.5386 188.027 48.5482 180.27 48.3898C176.328 48.3082 174.801 48.2842 173.022 48.2842C171.402 48.2842 170.115 48.4906 168.559 48.937C168.044 49.081 165.897 49.7722 165.295 49.9498C161.463 51.0778 157.345 51.6442 150.793 51.6442C146.054 51.6442 142.849 50.9818 137.654 49.2922L135.794 48.6922C128.452 46.3546 123.351 46.2202 114.044 49.2298C107.521 51.337 103.438 53.6457 101.01 56.3385C99.1674 58.3832 98.4771 60.0824 97.5353 63.9224C96.8216 66.8455 96.4062 68.1175 95.4878 69.7447C94.5226 71.439 93.1654 72.5334 91.3519 73.2102C89.9889 73.7238 88.8072 73.9302 85.8998 74.2614C80.6115 74.871 78.4295 75.7445 76.7681 78.8597C74.5978 82.93 72.252 85.5172 68.4496 88.3443C67.0456 89.3907 60.7628 93.6339 59.1424 94.7858C54.3454 98.1938 51.0403 103.123 48.203 110.131C47.5204 111.832 46.8826 113.544 46.2901 115.267C46.2843 115.291 44.9681 119.093 44.6054 120.115C39.6388 133.963 34.1457 145.531 29.3196 149.491C27.6816 150.835 26.3595 152.198 23.2357 155.711C21.4391 157.74 19.9146 159.335 18.4639 160.632C18.2833 160.794 18 160.664 18 160.422C18 160.341 18.0343 160.265 18.0943 160.211C19.6715 158.792 21.3949 156.973 23.5457 154.55C25.9032 151.9 27.2428 150.518 28.9101 149.155C33.6309 145.276 39.1123 133.728 44.0438 119.971C44.4065 118.963 45.7168 115.157 45.7285 115.133C46.4364 113.098 47.0214 111.518 47.6473 109.978C50.5138 102.898 53.8658 97.901 58.7621 94.4258C60.3884 93.2643 66.6595 89.0259 68.0576 87.9939C71.8016 85.21 74.0947 82.6708 76.2299 78.6677C77.2127 76.8293 78.5991 75.639 80.4419 74.895C81.8458 74.3334 83.1562 74.0934 86.0168 73.7622C88.6727 73.4598 89.8193 73.2582 91.1062 72.7734C92.7969 72.1446 94.0487 71.1318 94.9555 69.5431C95.8505 67.9591 96.26 66.7111 96.962 63.8312C97.9214 59.924 98.6292 58.1721 100.536 56.0553C103.04 53.2761 107.211 50.9194 113.833 48.7786C123.281 45.7259 128.534 45.8651 136.004 48.2458L137.87 48.8506C143.001 50.5162 146.136 51.1642 150.793 51.1642C157.28 51.1642 161.334 50.6074 165.102 49.4986C165.687 49.3258 167.839 48.6346 168.366 48.4858C169.855 48.0298 171.433 47.7988 173.022 47.8042C174.807 47.8042 176.339 47.8282 181.253 47.929C187.998 48.0682 191.315 48.0586 193.439 47.809C198.85 46.921 203.699 45.4907 207.443 43.4075C212.217 40.7483 214.849 37.2252 214.849 32.6845C214.849 29.3245 214.75 26.9918 214.44 21.7887C214.243 18.4345 214.127 15.8318 214.098 13.3001ZM72.8162 13.4755C72.8782 13.2041 73.1153 13.0048 73.3937 13.0048C73.7606 13.0048 74.0351 13.3432 73.9467 13.6994C73.5591 15.262 73.0607 16.4374 72.3339 17.5503C70.9709 19.6527 70.6667 20.3103 69.2568 23.8046C68.9444 24.6292 68.5653 25.4358 68.122 26.219C66.8116 28.4557 64.6588 30.4429 60.4761 33.0637C55.7904 36.006 52.1283 41.0075 48.7588 48.2074C47.3548 51.1978 43.6401 60.5096 43.1195 61.652C41.5459 65.0887 39.2819 67.7479 33.9761 73.0182L32.4083 74.5734C28.8867 78.0965 26.9387 80.3669 25.5522 82.8052C24.307 84.9997 21.799 87.2025 18.7472 89.1357C18.4211 89.3422 18 89.1052 18 88.7192C18 88.5486 18.0879 88.3902 18.2316 88.2982C21.1257 86.4459 23.3536 84.4079 24.4934 82.3972C25.9325 79.8677 27.9273 77.5493 31.5016 73.9686L33.0693 72.4038C38.2992 67.2199 40.5104 64.6183 42.0197 61.316C42.5345 60.1976 46.255 50.881 47.6649 47.8618C51.1105 40.5131 54.8602 35.382 59.7625 32.3053C63.8106 29.7613 65.8464 27.8894 67.0631 25.8014C67.4434 25.1534 67.7417 24.5054 68.1454 23.5022C69.5786 19.9503 69.9003 19.2639 71.3043 17.0991C72.0194 15.9568 72.5284 14.7362 72.8162 13.4755ZM78.1641 13.2268C78.1962 13.0972 78.3128 13.0048 78.4463 13.0048C78.6343 13.0048 78.7726 13.1811 78.7275 13.3636C77.7998 17.1157 77.0842 19.1242 76.1597 20.3295C75.2371 21.5901 74.4352 22.9076 73.7613 24.2702C73.0183 25.7102 72.3339 27.2462 71.7138 28.7821C71.5291 29.2289 71.3686 29.6491 70.7456 30.668C70.4596 31.1358 70.0841 31.5423 69.6563 31.8851C67.2948 33.7775 65.0114 35.7346 62.8103 37.7532C60.7745 39.654 59.3296 41.2427 58.6276 42.3899C58.0718 43.3019 57.4225 45.2651 56.5158 48.6154C56.1414 50.0074 54.3805 56.8473 53.8775 58.7288C51.7539 66.6247 49.999 71.5398 48.0861 74.0886C43.605 80.0645 41.8618 81.6293 26.3946 93.8163C23.9798 95.7633 21.2795 97.456 18.3562 98.8556C18.1907 98.9348 18 98.8136 18 98.6301C18 98.5336 18.0555 98.4457 18.1424 98.4037C20.9916 97.0276 23.6253 95.3711 25.9851 93.4706C41.4289 81.3125 43.137 79.7669 47.583 73.839C49.4549 71.3526 51.1982 66.4615 53.3042 58.6232C53.8073 56.7465 55.5681 49.9066 55.9425 48.5146C56.8609 45.1115 57.5219 43.1387 58.1069 42.1787C58.8323 40.9787 60.3065 39.366 62.3715 37.4316C62.898 36.9372 63.4596 36.4236 64.0446 35.9052C65.4486 34.6572 66.9461 33.3997 68.4496 32.1805C68.7479 31.9412 69.033 31.7111 69.3987 31.4081C70.0726 30.8499 70.5715 30.1131 70.8869 29.2969C71.5683 27.533 72.3459 25.7949 73.2172 24.0878C73.9062 22.7017 74.7257 21.3616 75.6683 20.0799C76.5403 18.9314 77.2435 16.9382 78.1641 13.2268ZM66.9695 13.0048C67.2605 13.0048 67.4441 13.3142 67.2895 13.5607C66.0055 15.6074 63.8262 17.4198 60.9324 18.9087C56.7205 21.0783 51.2801 22.3646 46.6645 22.3646C41.4581 22.3646 39.7616 25.7246 39.7967 32.6941C39.7967 33.5101 39.8201 34.2156 39.8669 35.5692C39.9254 37.1532 39.9371 37.7052 39.9371 38.4444C39.9371 41.1947 39.4925 43.8683 38.7613 46.3642C38.4168 47.4974 37.9969 48.6143 37.5036 49.7098C36.1489 52.2511 34.7839 54.7887 33.4086 57.3225C29.5765 64.3594 25.696 71.3786 21.7673 78.3797C20.8649 80.0273 19.7577 81.5935 18.4637 83.0535C18.3002 83.238 18 83.1208 18 82.8743C18 82.8081 18.0242 82.7443 18.0678 82.6945C19.3069 81.2791 20.3717 79.7662 21.2467 78.1781C26.2288 69.2776 31.1331 60.3479 35.9592 51.3898C36.2692 50.8138 36.5383 50.3194 37.3866 48.5578C38.6748 45.2903 39.3378 41.8786 39.3521 38.4444C39.3521 37.7148 39.3346 37.1676 39.2819 35.5884C39.2351 34.23 39.2117 33.5197 39.2117 32.7037C39.1942 29.4445 39.5218 27.1262 40.4227 25.3406C41.5576 23.0942 43.5758 21.8895 46.6645 21.8895C51.1689 21.8895 56.4982 20.6271 60.6224 18.5055C63.5859 16.9756 65.7668 15.1102 66.9608 13.0099C66.9626 13.0067 66.9659 13.0048 66.9695 13.0048ZM232.385 13.3582C232.344 13.1779 232.481 13.0048 232.666 13.0048C232.801 13.0048 232.918 13.1006 232.947 13.232C233.99 17.8552 234.173 19.1294 234.253 21.7887C234.939 26.2204 235.012 30.7017 234.47 35.1468C233.908 39.3612 232.656 42.8315 230.591 45.2987C223.958 53.2185 207.309 59.324 191.742 59.324C188.764 59.324 185.617 59.4584 182.201 59.7224C177.432 60.1121 172.677 60.6179 167.945 61.2392C155.332 62.804 151.764 63.164 146.698 63.164C142.65 63.164 139.561 62.66 134.009 61.292L132.383 60.8936C131.57 60.6968 130.897 60.5384 130.248 60.404C125.568 59.42 121.929 59.4248 117.554 60.7496C115.21 61.4349 113.286 62.8437 112.189 64.6759C111.253 66.1399 110.727 67.5847 109.838 70.8342C108.96 74.0214 108.469 75.4038 107.504 76.9013C106.931 77.8594 106.124 78.7103 105.132 79.4007C104.141 80.0912 102.987 80.6064 101.741 80.9141C99.8578 81.3877 98.0032 81.9355 96.1839 82.5556C92.3523 83.8996 90.2756 85.2292 88.1111 87.5812C87.333 88.4211 87.5085 88.2051 84.9346 91.3731C83.7763 92.7987 82.2085 94.1571 79.9739 95.7602C78.798 96.605 73.7086 99.9985 72.4392 100.896C68.1278 103.944 65.08 106.723 62.7108 110.083C60.2421 113.587 58.1479 118.867 56.1121 126.048C55.6032 127.838 55.1059 129.715 54.5677 131.875L53.8775 134.659L53.2398 137.275C52.1868 141.575 51.6194 143.649 51.0344 145.079C47.0565 154.89 40.9375 165.316 35.1636 169.655C32.1743 171.911 30.4252 173.049 28.6702 173.908C28.1437 174.167 27.5938 174.407 26.9621 174.661C26.7047 174.767 21.3461 176.773 18.7137 177.858L18.346 178.011C18.1814 178.08 18 177.959 18 177.781C18 177.679 18.0612 177.588 18.155 177.55L18.4563 177.426C21.1004 176.341 26.4531 174.335 26.7047 174.234C27.27 174.006 27.8242 173.759 28.366 173.495C30.0859 172.655 31.8058 171.532 34.7658 169.305C40.4461 165.033 46.5241 154.66 50.4845 144.926C51.0519 143.524 51.6194 141.46 52.6665 137.184L53.31 134.563C53.9893 131.678 54.7343 128.804 55.5447 125.942C57.5921 118.713 59.6981 113.395 62.2077 109.843C64.612 106.43 67.7066 103.613 72.0531 100.531C73.3342 99.629 78.4178 96.2354 79.5878 95.3954C81.7932 93.8211 83.3259 92.4915 84.4432 91.1091C87.0347 87.922 86.8534 88.1427 87.6431 87.2884C89.8661 84.874 92.0305 83.4916 95.9558 82.114C97.4826 81.5765 99.3137 81.0389 101.566 80.4533C102.738 80.1651 103.825 79.6812 104.758 79.032C105.691 78.3827 106.451 77.5822 106.989 76.6805C107.919 75.231 108.404 73.8726 109.346 70.4454C110.171 67.4359 110.703 65.9671 111.674 64.4551C112.836 62.5171 114.871 61.0263 117.349 60.2984C121.853 58.94 125.597 58.9352 130.394 59.9384C131.049 60.0776 131.728 60.2312 132.547 60.4328L134.729 60.9656C139.684 62.1848 142.72 62.684 146.698 62.684C151.723 62.684 155.28 62.324 167.863 60.764C172.603 60.141 177.365 59.6336 182.142 59.2424C185.582 58.9832 188.747 58.844 191.742 58.844C207.127 58.844 223.595 52.8057 230.112 45.0299C232.112 42.6395 233.329 39.2412 233.891 35.094C234.382 31.3789 234.318 27.4046 233.902 23.6222C233.825 22.9321 233.734 22.2429 233.63 21.5552C233.59 21.2951 233.57 21.0325 233.567 20.7695C233.544 18.906 233.336 17.6001 232.385 13.3582ZM28.9813 13.2093C29.0187 13.0886 29.1308 13.0048 29.2571 13.0048C29.4509 13.0048 29.5893 13.193 29.5319 13.3782C28.4937 16.7281 27.9774 17.9924 26.459 20.7807C25.3182 22.8782 24.897 25.1918 25.0433 27.9278C25.1603 30.0061 25.4586 31.6237 26.3771 35.67C27.0147 38.4924 27.2955 39.8796 27.5119 41.5259C28.0735 45.7979 27.6523 49.2442 25.874 52.4649C23.5734 56.6197 21.1175 60.7153 18.5099 64.746C18.3595 64.9785 18 64.8717 18 64.5948C18 64.5412 18.0155 64.4888 18.0445 64.4438C20.6248 60.4452 23.0564 56.3832 25.3358 52.2633C27.0732 49.1338 27.4827 45.7691 26.927 41.5739C26.7164 39.9419 26.4356 38.5692 25.7979 35.7564C24.8795 31.6909 24.5694 30.0541 24.4583 27.947C24.3062 25.1438 24.7391 22.7582 25.9208 20.5887C27.4348 17.8123 27.9368 16.5722 28.9813 13.2093ZM192.688 13.0048C192.893 13.0048 193.031 13.2122 192.951 13.4002C192.214 15.1236 191.309 16.7956 190.245 18.3999C188.747 20.6559 187.899 22.4558 187.401 24.1502L187.167 25.0142L187.004 25.7102C186.946 26.0626 186.798 26.4012 186.571 26.7038C186.138 27.1982 185.442 27.3182 183.57 27.3038C184.108 27.3038 177.808 27.1646 174.777 27.1646C168.811 27.1646 163.984 27.5582 157.544 28.3933C147.675 29.6701 147.172 29.7229 143.703 29.6029C142.126 29.5506 140.559 29.3754 139.023 29.0797C128.668 27.083 112.008 26.267 107.012 27.635C105.421 28.0669 103.572 28.9789 101.443 30.3181C100.128 31.1548 98.8514 32.0323 97.6172 32.9485C96.7982 33.5485 92.2528 37.0284 91.311 37.6716C90.4627 38.2476 86.5258 41.2331 86.1338 41.5211C85.2666 42.164 84.3791 42.7882 83.4721 43.3931C80.553 45.3275 78.2657 46.369 76.499 46.369C74.4399 46.393 73.9719 46.369 73.4922 46.177C72.8311 45.9083 72.6147 45.3515 72.8311 44.4635C73.264 42.7211 75.446 39.2604 80.3424 32.5597C83.671 28.0093 85.853 23.9198 87.2336 19.9839C88.0616 17.6225 88.3545 16.4868 88.9284 13.2466C88.953 13.1075 89.0741 13.0048 89.2154 13.0048C89.3962 13.0048 89.5332 13.1684 89.5017 13.3464C88.9279 16.5867 88.6324 17.7424 87.801 20.1183C86.4029 24.0926 84.1975 28.2253 80.8396 32.8093C75.9842 39.4524 73.8198 42.8939 73.4103 44.5595C73.2348 45.2555 73.3635 45.5867 73.7554 45.7451C74.1064 45.8891 74.5452 45.9131 75.7912 45.8891C78.0844 45.8891 80.2898 44.8811 83.1036 43.0187C83.9225 42.4763 84.7825 41.8715 85.7419 41.1659C86.128 40.8827 90.0767 37.8876 90.9366 37.302C91.8667 36.6636 96.4004 33.1981 97.2252 32.5885C98.6292 31.5565 99.8869 30.6877 101.086 29.9341C103.262 28.5661 105.164 27.6302 106.825 27.179C111.949 25.7774 128.709 26.5934 139.157 28.6141C140.661 28.9021 142.164 29.0701 143.726 29.1229C147.142 29.2429 147.646 29.1901 157.456 27.9182C163.92 27.0782 168.781 26.6846 174.772 26.6846C177.813 26.6846 184.126 26.8286 183.576 26.8238C185.255 26.8382 185.822 26.7422 186.091 26.4254C186.226 26.2718 186.325 26.0414 186.43 25.6094L186.594 24.923L186.828 24.035C187.343 22.307 188.209 20.4639 189.73 18.1695C190.788 16.5768 191.682 14.9213 192.422 13.1811C192.468 13.0745 192.572 13.0048 192.688 13.0048ZM187.248 13.0048C187.652 13.0048 187.928 13.4132 187.774 13.7866C184.499 21.7348 182.32 23.5646 176.532 23.5646C173.9 23.5646 170.554 23.7182 159.749 24.2846L158.854 24.3326C149.728 24.8078 145.124 25.0046 142.018 25.0046C138.888 25.0046 134.273 24.5438 125.135 23.4302L124.234 23.3198C113.459 22.0047 110.118 21.6447 107.504 21.6447C104.9 21.6447 103.233 22.1294 101.092 23.2478C101.034 23.2766 100.039 23.8094 99.7465 23.9534C98.325 24.6734 97.2194 25.0046 95.8037 25.0046C94.1657 25.0046 93.3994 24.3038 93.3994 22.979C93.3994 22.4798 93.493 21.8799 93.6919 21.0111C93.7855 20.6175 94.2184 18.8991 94.3178 18.4575C94.737 16.6905 95.0154 15.1315 95.1404 13.5562C95.1649 13.2471 95.4203 13.0048 95.7305 13.0048C96.0658 13.0048 96.3331 13.2864 96.3067 13.6207C96.179 15.2387 95.8961 16.8339 95.4703 18.6447C95.3591 19.0959 94.9321 20.8047 94.8443 21.1935C94.6881 21.7808 94.5961 22.3783 94.5694 22.979C94.5694 23.795 94.8385 24.0446 95.8037 24.0446C96.9678 24.0446 97.8804 23.771 99.1381 23.1326C99.4131 22.9982 100.396 22.475 100.46 22.4414C102.777 21.2319 104.649 20.6847 107.504 20.6847C110.206 20.6847 113.529 21.0399 124.41 22.3694L125.305 22.4798C134.372 23.5838 138.976 24.0446 142.018 24.0446C145.089 24.0446 149.687 23.8478 158.778 23.3726L159.679 23.3246C170.525 22.7582 173.859 22.6046 176.532 22.6046C181.688 22.6046 183.582 21.0221 186.717 13.3653C186.805 13.1502 187.015 13.0048 187.248 13.0048ZM100.7 13.1318C100.751 13.0529 100.839 13.0048 100.933 13.0048C101.152 13.0048 101.284 13.2494 101.165 13.4341C100.185 14.9543 99.8978 15.4955 99.8226 15.976C99.7348 16.5135 100.068 16.7631 101.18 16.9167C102.233 17.0607 103.432 17.0847 107.504 17.0847C111.025 17.0847 115.108 17.3535 119.993 17.8623C122.304 18.1023 124.691 18.3903 127.674 18.7695C141.714 20.5455 140.836 20.4447 143.369 20.4447C157.421 20.4447 173.689 19.3695 178.732 17.1135C180.369 16.3814 181.613 15.0377 182.514 13.1705C182.563 13.0698 182.664 13.0048 182.776 13.0048C182.984 13.0048 183.123 13.219 183.031 13.4059C182.084 15.3436 180.771 16.7492 179.007 17.5359C173.841 19.8495 157.555 20.9247 143.369 20.9247C140.789 20.9247 141.708 21.0303 127.586 19.2447C124.603 18.8607 122.222 18.5823 119.923 18.3423C115.062 17.8335 110.996 17.5647 107.504 17.5647C103.385 17.5647 102.18 17.5407 101.086 17.3871C99.6939 17.1951 99.1089 16.7535 99.2434 15.9136C99.3347 15.3423 99.632 14.7848 100.7 13.1318ZM145.481 13.0048C145.48 13.0048 145.48 13.006 145.481 13.0062C148.807 13.7925 151.543 14.2048 153.718 14.2048C159.309 14.2048 163.459 13.8663 166.788 13.0135C166.81 13.0077 166.833 13.0048 166.856 13.0048C167.17 13.0048 167.229 13.4051 166.926 13.4822C163.534 14.3432 159.329 14.6848 153.718 14.6848C151.506 14.6848 148.748 14.2747 145.422 13.4915C145.126 13.422 145.178 13.0048 145.481 13.0048ZM59.3413 13.0048C59.3455 13.0048 59.3475 13.0099 59.3444 13.0128C57.666 14.5778 55.2823 15.5929 52.3214 16.1391C49.9931 16.5663 47.934 16.6575 44.7633 16.6191C44.4221 16.6118 44.0809 16.607 43.7396 16.6047C40.5982 16.6047 38.5566 16.0095 37.8312 14.2192C37.7159 13.9201 37.6427 13.6115 37.6126 13.2995C37.5971 13.1376 37.7298 13.0048 37.8923 13.0048C38.0505 13.0048 38.1786 13.1308 38.1955 13.2881C38.2261 13.5707 38.2898 13.8315 38.3869 14.0704C39.007 15.592 40.8263 16.1247 43.7396 16.1247L44.7692 16.1343C47.8989 16.1775 49.9171 16.0863 52.1927 15.6688C54.4847 15.2467 56.413 14.5371 57.9044 13.4926C58.3283 13.1957 58.8237 13.0048 59.3413 13.0048ZM18 113.016C18 112.885 18.106 112.779 18.2367 112.778C22.3666 112.767 24.7274 114.449 24.7274 118.123C24.7274 123.346 22.0404 130.984 18.5186 137.155C18.3756 137.405 18 137.302 18 137.014C18 136.965 18.0127 136.916 18.0369 136.874C21.4879 130.78 24.1424 123.255 24.1424 118.123C24.1424 114.748 22.067 113.242 18.2458 113.258C18.1115 113.258 18 113.15 18 113.016ZM18 116.429C18 116.287 18.1223 116.175 18.2627 116.197C18.8564 116.287 19.3258 116.487 19.6789 116.793C20.4979 117.504 20.6149 118.579 20.3575 120.432L20.2639 121.056C20.1406 121.673 20.0682 122.297 20.0475 122.923C20.0475 124.206 19.4436 126.533 18.5561 129.049C18.446 129.362 18 129.281 18 128.95C18 128.916 18.0058 128.882 18.0172 128.85C18.8794 126.407 19.4625 124.153 19.4625 122.923C19.4625 122.453 19.5093 122.083 19.6789 120.993L19.7725 120.374C20.0182 118.665 19.9129 117.691 19.2577 117.125C19.0043 116.904 18.6587 116.752 18.2132 116.675C18.0923 116.654 18 116.552 18 116.429ZM18.4382 209.835C18.2706 209.996 18 209.873 18 209.641C18 209.569 18.0291 209.499 18.0801 209.448C18.7398 208.782 19.2965 208.051 19.7374 207.272C20.5096 205.976 21.3052 204.258 22.405 201.565C26.9972 190.261 26.9854 188.797 22.5512 186.973C21.3059 186.464 19.9035 186.304 18.2796 186.499C18.1319 186.517 18 186.403 18 186.254C18 186.135 18.0868 186.032 18.2054 186.016C19.768 185.797 21.3766 185.982 22.8086 186.546C27.6289 188.523 27.6406 190.194 22.9549 201.714C21.8551 204.43 21.0536 206.163 20.2639 207.483C19.7918 208.334 19.177 209.126 18.4382 209.835ZM37.6791 229.961C38.6619 229.961 39.4574 229.851 42.5579 229.332L43.9502 229.107C48.7822 228.353 51.3912 228.483 52.4501 230.225C53.2574 231.545 52.1751 233.038 49.6714 234.872C48.7154 235.557 47.7239 236.209 46.6996 236.825C46.1497 237.161 43.839 238.548 43.3125 238.875C42.2244 239.547 41.5751 240.012 41.2826 240.329C40.5471 241.127 39.976 242.019 39.592 242.969C39.6329 242.873 37.2403 249.521 35.5205 253.634C33.941 257.402 32.2679 258.78 30.3608 257.758C29.1265 257.086 28.2198 255.722 26.4999 252.463C25.3416 250.246 25.0374 249.698 24.5109 248.911C21.8492 244.985 22.2295 237.439 24.4817 233.134C24.817 232.415 25.3664 231.777 26.0796 231.277C26.7929 230.778 27.6473 230.432 28.5649 230.273C30.08 229.956 31.408 229.913 35.4561 229.952L37.6791 229.961ZM37.6791 230.921C37.018 230.921 36.4564 230.921 35.4444 230.912C28.3836 230.849 26.769 231.185 25.5581 233.508C23.4346 237.574 23.066 244.812 25.5288 248.446C26.0904 249.276 26.3946 249.828 27.5763 252.084C29.1675 255.108 30.0566 256.442 31.0043 256.951C31.9637 257.47 33.0518 256.567 34.409 253.327C35.842 249.788 37.2013 246.229 38.4864 242.652C38.9099 241.609 39.5383 240.63 40.3466 239.753C40.7269 239.335 41.4289 238.841 42.6047 238.107C43.1429 237.771 45.4536 236.393 45.9976 236.057C47.1793 235.337 48.1036 234.728 48.8933 234.152C51.0168 232.601 51.8709 231.416 51.4088 230.657C50.701 229.496 48.4429 229.385 44.1666 230.048L42.7919 230.273C39.5803 230.806 38.7789 230.921 37.6791 230.921ZM240.075 301C239.952 301 239.841 300.919 239.802 300.802C237.847 295.095 237.664 294.191 237.664 291.88C237.664 290.282 237.588 288.871 237.412 286.437C237.044 281.479 237.032 279.957 237.564 278.244C238.272 275.968 240.027 274.836 243.221 274.836H258.431C260.818 274.836 261.467 275.724 261.9 278.248C261.958 278.628 261.976 278.714 262.011 278.882C262.503 281.45 263.649 282.52 267.206 282.52C269.335 282.52 270.447 282.712 270.967 283.178C271.412 283.576 271.412 283.869 271.178 285.064C270.681 287.589 271.47 289.312 275.565 291.688C279.263 293.824 282.369 294.261 285.247 293.306C287.47 292.567 289.184 291.309 292.22 288.506L292.864 287.915L293.501 287.325C294.013 286.856 294.54 286.399 295.081 285.952C296.718 284.631 298.61 283.54 300.679 282.722C301.568 282.357 301.685 282.309 303.99 281.46C307.559 280.149 309.261 279.3 310.858 277.802C312.396 276.362 313.59 275.474 314.777 274.903C316.638 274.015 317.971 273.88 322.78 273.88C326.278 273.88 328.957 271.807 333.31 266.685L334.959 264.751C335.58 264.031 336.094 263.455 336.592 262.932C341.195 258.074 347.929 257.94 354.574 263.393C357.815 266.047 360.523 272.719 362.553 281.877C363.987 288.346 364.959 295.718 365.157 300.699C365.164 300.865 365.031 301 364.866 301C364.708 301 364.579 300.877 364.573 300.72C364.371 295.766 363.41 288.412 361.98 281.964C359.974 272.906 357.289 266.292 354.165 263.729C347.759 258.473 341.435 258.602 337.048 263.229C336.562 263.743 336.053 264.314 335.439 265.029L333.795 266.959C329.32 272.215 326.553 274.36 322.78 274.36C318.077 274.36 316.807 274.485 315.076 275.32C313.952 275.858 312.794 276.712 311.302 278.119C309.629 279.684 307.869 280.562 304.23 281.901C303.119 282.29 302.023 282.706 300.942 283.149C298.927 283.943 297.085 285.004 295.49 286.288C294.73 286.914 293.998 287.562 293.296 288.232L292.653 288.827C289.564 291.683 287.803 292.975 285.469 293.747C282.392 294.77 279.081 294.309 275.232 292.077C270.944 289.595 270.072 287.685 270.599 284.987C270.798 283.97 270.798 283.739 270.54 283.499C270.166 283.168 269.171 283 267.206 283C263.327 283 261.964 281.738 261.432 278.959L261.315 278.316C260.923 276.002 260.42 275.32 258.431 275.32H243.221C240.296 275.32 238.775 276.3 238.132 278.364C237.617 280.01 237.635 281.517 237.997 286.408C238.153 288.23 238.237 290.054 238.249 291.88C238.249 294.124 238.428 295.023 240.346 300.616C240.41 300.803 240.272 301 240.075 301ZM248.1 301C247.966 301 247.849 300.908 247.819 300.778C247.097 297.748 246.934 295.812 247.076 293.877C247.1 293.541 247.135 293.186 247.182 292.735L247.316 291.506C247.515 289.677 247.609 288.16 247.609 286.12C247.609 283.749 248.463 282.396 250.071 282.079C251.464 281.8 253.324 282.338 255.453 283.519C259.338 285.688 263.637 289.792 265.135 292.749C267.925 298.24 273.395 300.28 284.756 300.28C289.786 300.28 293.133 299.152 296.847 296.498C297.696 295.893 305.657 289.298 309.132 286.898C313.35 283.984 316.017 283.255 321.195 282.904C324.424 282.688 325.863 282.472 327.887 281.772C330.566 280.836 333.362 279.141 336.603 276.352C340.95 272.628 344.354 272.071 346.823 274.288C348.765 276.031 350.017 279.367 350.813 284.004C351.24 286.485 351.363 287.719 351.737 292.346C351.881 294.119 351.838 294.877 351.226 300.736C351.211 300.884 351.086 301 350.937 301C350.764 301 350.63 300.847 350.648 300.675C351.253 294.876 351.296 294.114 351.152 292.375C350.778 287.767 350.655 286.538 350.234 284.071C349.455 279.525 348.227 276.261 346.396 274.615C344.196 272.642 341.172 273.136 337.036 276.688C333.731 279.52 330.87 281.248 328.115 282.208C326.021 282.943 324.529 283.163 321.329 283.379C316.181 283.725 313.625 284.426 309.512 287.267C306.061 289.648 298.105 296.243 297.228 296.862C293.413 299.589 289.933 300.76 284.756 300.76C273.184 300.76 267.498 298.638 264.597 292.936C263.14 290.071 258.917 286.034 255.12 283.917C253.119 282.803 251.399 282.309 250.206 282.544C248.919 282.799 248.194 283.946 248.194 286.12C248.194 288.175 248.1 289.706 247.901 291.549L247.767 292.778C247.714 293.224 247.685 293.57 247.655 293.906C247.52 295.789 247.678 297.681 248.382 300.641C248.425 300.823 248.287 301 248.1 301ZM315.035 301C314.8 301 314.678 300.72 314.838 300.548C316.509 298.758 319.737 295.238 320.791 294.136C323.997 290.786 328.425 288.194 332.14 287.445C336.241 286.624 338.867 288.141 338.867 291.88C338.867 293.782 338.844 294.341 338.451 300.722C338.442 300.876 338.314 301 338.16 301C337.991 301 337.858 300.854 337.869 300.686C338.26 294.334 338.282 293.769 338.282 291.88C338.282 288.463 336.024 287.162 332.28 287.915C328.706 288.635 324.383 291.165 321.253 294.429C320.182 295.544 316.884 299.146 315.23 300.916C315.179 300.971 315.11 301 315.035 301ZM308.65 138.302C308.649 138.302 308.648 138.303 308.649 138.304C310.661 139.604 312.743 140.75 315.339 142.022C315.959 142.329 320.264 144.374 321.393 144.95C327.986 148.31 330.168 151.358 328.618 157.108C327.77 160.238 325.968 162.436 323.125 164.039C320.885 165.301 318.404 166.084 313.718 167.188C306.716 168.844 305.716 169.103 302.709 170.202C301.128 170.778 299.601 171.449 298.14 172.209C291.641 175.602 286.967 175.904 281.784 173.783C280.487 173.254 276.905 171.337 274.386 169.964C272.745 169.071 270.687 167.944 268.989 167.165C268.886 167.118 268.783 167.071 268.68 167.025C259.297 162.786 248.632 155.428 248.486 151.737C248.422 150.076 249.65 148.583 252.16 146.812C252.762 146.38 253.435 145.943 254.313 145.396C254.734 145.132 256.29 144.167 256.618 143.956C259.232 142.324 260.818 141.177 262.07 139.9C268.575 133.267 277.601 126.134 282.17 124.406C289.225 121.747 293.776 121.637 298.181 124.464C300.082 125.683 301.486 127.603 303.2 130.872C303.37 131.184 304.546 133.488 304.885 134.107C305.833 135.859 306.582 136.891 307.365 137.438C307.786 137.725 308.212 138.013 308.65 138.3C308.651 138.301 308.65 138.302 308.65 138.302ZM306.605 138.168C305.651 137.5 304.832 136.372 303.815 134.496C303.475 133.872 302.294 131.558 302.13 131.251C300.486 128.131 299.158 126.307 297.462 125.222C293.466 122.654 289.359 122.75 282.661 125.28C278.303 126.921 269.382 133.977 262.982 140.505C261.654 141.859 260.01 143.049 257.325 144.724L255.021 146.155C254.304 146.599 253.604 147.06 252.92 147.537C250.656 149.135 249.604 150.417 249.656 151.708C249.779 154.895 260.268 162.134 269.242 166.18C270.271 166.645 271.289 167.14 272.342 167.682C272.412 167.721 280.304 172.108 282.304 172.924C287.113 174.892 291.348 174.613 297.514 171.397C299.024 170.614 300.602 169.922 302.235 169.329C305.306 168.201 306.33 167.937 313.397 166.266C317.96 165.191 320.358 164.433 322.464 163.242C325.061 161.783 326.694 159.796 327.472 156.897C328.899 151.607 326.986 148.929 320.773 145.761C319.662 145.195 315.374 143.159 314.736 142.843C312.104 141.551 309.98 140.385 307.927 139.051C307.477 138.763 307.038 138.47 306.605 138.168ZM69.3153 128.968C69.3153 128.97 69.3165 128.97 69.3175 128.97C71.832 127.54 73.9258 126.571 76.4171 125.635C76.9085 125.443 77.4292 125.261 78.0434 125.04L80.5998 124.137C84.1617 122.877 87.6272 121.441 90.9775 119.837C96.2702 117.299 101.711 114.977 107.281 112.877C109.75 111.941 120.087 108.154 119.665 108.307C130.88 104.17 136.104 104.981 148.622 112.171C153.25 114.83 156.368 118.531 158.246 123.048C160.012 127.286 160.445 130.972 160.445 136.368C160.445 140.361 160.059 142.583 158.292 145.473C155.847 149.486 151.097 153.22 143.328 156.738C129.025 163.214 120.613 169.962 112.423 179.701C107.258 185.845 84.4841 200.922 74.3053 205.693C61.8977 211.505 46.6002 216.281 36.1347 216.281C30.2555 216.281 27.5529 213.987 27.5002 209.864C27.4593 206.83 28.7053 203.274 31.1857 198.191C32.9114 194.653 32.3674 191.999 29.9221 187.492C28.056 184.05 27.6523 183.104 27.6523 181.482C27.6523 179.874 28.7463 178.17 30.8815 176.168C32.4083 174.729 32.929 174.33 37.8429 170.649C40.8205 168.412 42.5696 167.001 44.1023 165.489C49.6363 160.036 51.4848 156.143 54.5736 143.995C56.3988 136.771 58.4521 134.26 63.4186 131.875C63.8866 131.649 65.7294 130.795 66.1681 130.588C67.2433 130.084 68.2926 129.543 69.3133 128.967C69.3142 128.967 69.3153 128.967 69.3153 128.968ZM69.6429 129.364C68.6103 129.949 67.5486 130.498 66.4606 131.011L63.7111 132.292C58.8967 134.606 56.9428 137.001 55.141 144.1C52.0406 156.316 50.1628 160.276 44.5527 165.801C42.9966 167.332 41.23 168.757 38.2348 171.004C33.3443 174.671 32.8295 175.074 31.3202 176.485C29.2728 178.41 28.2373 180.018 28.2373 181.487C28.2373 183.013 28.6351 183.935 30.4603 187.304C32.9582 191.912 33.5256 194.682 31.7239 198.378C29.2786 203.403 28.0443 206.912 28.0852 209.864C28.132 213.733 30.5773 215.806 36.1347 215.806C46.4715 215.806 61.6871 211.054 74.0128 205.28C84.1215 200.538 106.831 185.504 111.944 179.432C120.18 169.631 128.657 162.83 143.048 156.316C150.723 152.846 155.385 149.179 157.772 145.262C159.48 142.449 159.86 140.294 159.86 136.368C159.86 131.025 159.427 127.377 157.696 123.201C155.853 118.776 152.805 115.161 148.283 112.565C135.922 105.461 130.909 104.683 119.911 108.749C120.321 108.595 109.99 112.378 107.527 113.309C106.532 113.693 105.596 114.053 104.684 114.413C100.118 116.21 95.6431 118.159 91.27 120.254C87.8989 121.867 84.4118 123.312 80.828 124.579L78.2715 125.481C77.6632 125.697 77.1484 125.885 76.657 126.072C74.1998 126.989 71.8517 128.091 69.6429 129.364ZM65.197 135.22C69.7014 132.22 72.3924 131.299 79.0496 129.811C82.6297 129.009 84.3847 128.395 86.2508 127.065C88.4738 125.481 90.6207 124.896 95.5288 124.137C97.1375 123.888 97.6757 123.801 98.4888 123.648C101.695 123.053 104.035 122.241 106.152 120.821C112.248 116.726 121.011 114.048 127.393 114.048C130.511 114.048 137.203 117.686 142.451 122.285C148.728 127.785 151.787 133.454 149.898 137.884C148.037 142.252 143.235 146.798 136.425 151.257C131.488 154.487 125.685 157.497 121.672 159.143C119.496 160.036 117.817 161.486 115.957 163.938C115.553 164.466 109.463 173.658 106.579 177.296C103.292 181.448 97.5704 185.629 88.895 190.717C87.1138 191.759 85.3197 192.786 83.5131 193.799C83.437 193.842 79.5293 196.031 78.4821 196.626C74.6973 198.767 72.4275 200.154 70.848 201.344C64.0387 206.466 49.1215 208.803 45.2839 205.654C44.1374 204.714 43.997 203.706 44.1432 200.605C44.3597 196.083 43.8507 193.645 41.2475 190.76C40.0784 189.495 38.6911 188.376 37.1292 187.439C34.8302 186.023 33.5783 184.506 33.2916 182.884C32.7242 179.711 35.5556 176.615 41.581 172.473C42.5052 171.839 45.4828 169.861 45.7285 169.698C46.8156 168.998 47.8382 168.233 48.788 167.409C51.1865 165.186 52.2102 162.825 53.351 157.775C53.5107 157.077 53.6667 156.377 53.819 155.678C54.012 154.78 54.1699 154.094 54.3337 153.407C54.7666 151.593 55.2112 149.961 55.7377 148.305C56.3227 146.491 56.545 145.665 57.1183 143.327C57.4693 141.878 57.6623 141.307 58.0309 140.702C58.7446 139.526 58.7738 139.502 65.197 135.22ZM65.5714 135.595C59.2711 139.79 59.2067 139.838 58.5515 140.913C58.2122 141.47 58.0367 142.017 57.6916 143.419C57.1183 145.766 56.896 146.601 56.3052 148.43C55.7787 150.076 55.3399 151.694 54.907 153.498C54.6414 154.608 54.3898 155.72 54.1524 156.834L53.9243 157.866C52.766 162.993 51.7188 165.421 49.2209 167.725C48.2518 168.569 47.2076 169.352 46.0971 170.068C45.8514 170.231 42.8796 172.213 41.9612 172.842C36.0879 176.874 33.3501 179.874 33.8708 182.816C34.134 184.304 35.2982 185.711 37.4802 187.055C39.2351 188.135 40.6333 189.272 41.7155 190.472C44.424 193.467 44.9446 196.002 44.7282 200.624C44.582 203.571 44.7224 204.512 45.6993 205.318C49.2677 208.246 63.8457 205.957 70.4502 200.989C72.059 199.779 74.3463 198.383 78.1487 196.227L83.1796 193.4C85.3031 192.21 86.9528 191.269 88.5557 190.328C97.1726 185.269 102.853 181.122 106.088 177.032C108.954 173.413 115.044 164.226 115.459 163.689C117.372 161.164 119.121 159.652 121.415 158.711C125.387 157.079 131.155 154.089 136.057 150.878C142.796 146.471 147.529 141.983 149.348 137.726C151.144 133.512 148.166 127.996 142.024 122.611C136.876 118.099 130.301 114.528 127.393 114.528C121.151 114.528 112.517 117.168 106.521 121.195C104.321 122.669 101.899 123.504 98.6234 124.118C97.7985 124.272 97.2486 124.358 95.6341 124.608C90.8313 125.352 88.7546 125.918 86.6369 127.43C84.683 128.822 82.8637 129.456 79.2075 130.272C72.6205 131.745 69.9939 132.643 65.5714 135.595ZM142.018 133.891C142.018 137.52 141.667 139.132 140.497 140.755C139.853 141.638 136.016 145.579 135.466 146.179C131.98 149.99 130.008 151.113 125.369 152.783C124.585 153.062 124.082 153.263 123.597 153.503C123.275 153.662 122.895 153.82 122.427 153.993C122.011 154.151 119.818 154.905 119.197 155.14C115.658 156.474 113.938 157.924 113.938 160.29C113.938 165.556 102.853 177.628 93.7504 181.828C88.9652 184.036 81.2901 186.32 74.5744 187.52C66.7765 188.912 61.418 188.711 60.1719 186.407C59.3998 184.981 57.598 184.362 53.1638 183.618L52.8128 183.56C49.9814 183.085 48.7529 182.816 47.5303 182.293C45.8221 181.573 44.9096 180.517 44.9096 179.01C44.9096 177.695 45.5413 176.24 46.8108 174.369C47.308 173.634 47.8755 172.866 48.7003 171.801C48.6067 171.921 50.3558 169.689 50.8472 169.036C54.7608 163.9 56.6094 160.156 56.6094 155.97C56.6094 147.134 63.1729 139.953 72.6966 135.398C75.7502 133.934 78.0961 133.809 81.5884 134.38C84.5368 134.86 85.1276 134.812 85.9349 133.651C88.5674 129.883 90.0533 129.091 95.2187 129.091C97.5177 129.091 99.2961 128.62 101.344 127.574C102.256 127.109 106.415 124.613 107.773 123.888C113.155 121.017 114.406 120.528 122.514 118.152C126.58 116.961 131.395 118.766 135.577 122.529C139.409 125.981 142.018 130.502 142.018 133.891ZM140.848 133.891C140.848 130.771 138.362 126.461 134.711 123.177C130.81 119.664 126.428 118.022 122.912 119.054C114.88 121.406 113.71 121.862 108.404 124.694C107.094 125.395 102.923 127.9 101.964 128.39C99.7407 129.523 97.7517 130.051 95.2187 130.051C90.492 130.051 89.3805 130.641 86.9528 134.131C86.3093 135.048 85.4845 135.513 84.4081 135.614C83.6476 135.681 83.2966 135.638 81.3544 135.321C78.1194 134.793 76.0486 134.899 73.2816 136.224C64.0855 140.625 57.7793 147.527 57.7793 155.97C57.7793 160.386 55.8606 164.27 51.8417 169.545L49.6889 172.314C48.8758 173.365 48.3142 174.124 47.8345 174.834C46.6528 176.576 46.0795 177.896 46.0795 179.01C46.0795 181.021 47.7585 181.732 53.0409 182.62L53.3978 182.677C58.2356 183.493 60.2421 184.18 61.2366 186.013C63.0911 189.44 82.2963 186.013 93.1771 180.992C101.94 176.946 112.768 165.157 112.768 160.29C112.768 157.458 114.798 155.74 118.712 154.266C119.355 154.026 121.549 153.268 121.941 153.124C122.374 152.961 122.713 152.817 122.994 152.678C123.532 152.414 124.076 152.198 124.895 151.9C129.37 150.292 131.184 149.26 134.53 145.603C135.127 144.95 138.9 141.081 139.485 140.27C140.532 138.825 140.848 137.361 140.848 133.886V133.891ZM119.098 123.137C119.098 123.138 119.099 123.139 119.1 123.138C119.201 123.083 120.504 122.413 120.824 122.256C121.385 121.982 121.818 121.805 122.245 121.694C123.749 121.296 125.205 121.646 128.704 123.192C137.397 127.032 140.07 134.169 134.074 141.772C131.71 144.767 128.592 146.092 123.123 147.105C122.626 147.201 122.421 147.235 121.292 147.431C117.758 148.051 116.156 148.43 114.506 149.183C112.382 150.153 110.943 151.574 110.118 153.714C105.515 165.681 98.5824 174.517 88.895 177.863C79.2719 181.189 76.5341 181.957 72.5269 182.13C69.6371 182.25 66.794 181.818 63.5181 180.743C62.3842 180.39 61.2817 179.973 60.2188 179.495C57.8671 178.376 57.2119 177.22 57.5863 175.026C57.7618 174.004 59.7917 167.572 60.4176 165.114C60.7862 163.65 61.1138 162.167 61.4414 160.463C61.7215 159.041 61.9847 157.617 62.2311 156.191C63.0618 151.674 63.6936 149.342 64.8577 147.239C66.2968 144.633 68.4437 142.905 71.7138 141.897C75.5689 140.711 77.8796 140.409 82.2612 140.203C85.0399 140.073 86.1689 139.895 87.5261 139.219C87.8829 139.041 88.2398 138.83 88.5908 138.58C89.2988 138.079 89.958 137.534 90.5622 136.948C90.9073 136.617 91.9545 135.556 92.1007 135.417C94.0663 133.497 95.7862 132.763 99.3137 132.763C101.619 132.763 102.765 132.321 104.099 131.15C103.999 131.236 105.708 129.643 106.351 129.124C107.535 128.18 108.872 127.372 110.323 126.725C111.201 126.326 112.166 125.947 113.242 125.582C115.276 124.907 117.235 124.088 119.096 123.135C119.097 123.135 119.098 123.135 119.098 123.137ZM110.604 127.142C109.2 127.769 107.907 128.551 106.761 129.465C105.996 130.122 105.251 130.794 104.526 131.481C103.087 132.744 101.788 133.243 99.3137 133.243C95.9675 133.243 94.4056 133.91 92.5453 135.724C92.4108 135.859 91.3578 136.924 91.0068 137.26C90.3847 137.865 89.706 138.428 88.9769 138.945C88.5966 139.209 88.2164 139.439 87.8303 139.631C86.3678 140.356 85.1686 140.543 82.2904 140.683C77.9674 140.884 75.7093 141.182 71.9244 142.348C68.8006 143.308 66.7648 144.94 65.3901 147.436C64.261 149.486 63.6351 151.79 62.8103 156.263L62.43 158.346L62.0205 160.54C61.6871 162.249 61.3653 163.742 60.9909 165.21C60.3591 167.697 58.3351 174.105 58.1654 175.093C57.8203 177.095 58.3702 178.06 60.5112 179.077C61.301 179.447 62.3247 179.836 63.7404 180.301C66.9344 181.348 69.6956 181.765 72.4977 181.645C76.4113 181.482 79.1198 180.719 88.6727 177.421C98.1554 174.143 105.006 165.417 109.563 153.566C110.434 151.31 111.973 149.793 114.225 148.766C115.939 147.983 117.583 147.59 121.169 146.961C122.292 146.769 122.503 146.726 122.994 146.635C128.329 145.646 131.324 144.379 133.582 141.513C139.385 134.15 136.829 127.329 128.423 123.614C125.059 122.126 123.725 121.809 122.427 122.15C122.046 122.246 121.649 122.409 121.122 122.669C120.8 122.822 119.502 123.494 119.408 123.542C117.518 124.509 115.529 125.339 113.465 126.024C112.412 126.384 111.464 126.753 110.604 127.142ZM85.8062 142.847C95.2538 141.47 101.227 142.382 104.801 145.804C107.773 148.651 105.462 156.086 101.332 162.868C98.5298 167.466 95.131 170.649 87.7835 174.959C79.5059 179.807 67.0163 180.815 63.9685 176.807C62.8805 175.381 62.7401 172.9 63.3484 169.257C63.8047 166.53 64.4365 164.116 66.1154 158.226L66.1856 157.982C67.1158 154.718 67.5721 153.033 68.0225 151.195C68.8708 147.715 70.2104 145.689 72.2695 144.599C73.9134 143.735 75.5045 143.505 79.4825 143.342C82.6005 143.212 83.905 143.121 85.8062 142.847ZM85.9115 143.318C83.981 143.601 82.659 143.692 79.5117 143.822C75.6391 143.98 74.1123 144.196 72.5854 145.003C70.6842 146.011 69.4148 147.926 68.5958 151.29C68.1454 153.134 67.6832 154.818 66.7531 158.092L66.6829 158.332C65.0098 164.207 64.3839 166.617 63.9334 169.324C63.3309 172.857 63.4713 175.256 64.4599 176.557C67.2796 180.253 79.4006 179.279 87.4442 174.565C94.7156 170.303 98.0501 167.178 100.805 162.657C104.818 156.071 107.094 148.737 104.356 146.121C100.94 142.852 95.1719 141.969 85.9115 143.318ZM95.2187 145.723C99.3838 145.723 101.455 147.201 101.8 149.899C102.046 151.828 101.548 153.806 100.179 157.55C98.6819 161.639 89.439 169.732 84.2677 172.564C80.1669 174.805 72.5562 175.285 68.7245 173.039C66.3904 171.671 66.6595 167.241 68.7362 160.338C69.134 159.018 69.5961 157.626 70.1226 156.134C70.692 154.505 71.2868 152.883 71.9069 151.266L72.1233 150.691C72.9891 148.387 75.1068 146.971 78.4002 146.241C80.9742 145.665 83.9811 145.521 88.6259 145.603L90.9015 145.651C93.1654 145.703 94.0721 145.723 95.2187 145.723ZM95.2187 146.203C94.0663 146.203 93.1537 146.183 90.8839 146.131L88.6142 146.083C84.022 146.001 81.0561 146.145 78.5523 146.707C75.4402 147.393 73.4805 148.703 72.6849 150.835C72.3751 151.669 72.0631 152.502 71.7489 153.335C71.3511 154.391 71.006 155.337 70.6842 156.263C70.1577 157.751 69.7014 159.138 69.3036 160.454C67.2971 167.116 67.0397 171.46 69.0697 172.645C72.679 174.767 80.0265 174.301 83.9401 172.165C89.0061 169.391 98.1729 161.37 99.6178 157.415C100.963 153.734 101.455 151.794 101.215 149.947C100.905 147.499 99.0855 146.203 95.2187 146.203ZM84.8117 149.563C86.5128 149.594 88.2001 149.82 89.8251 150.235C92.9958 151.089 94.9262 152.649 94.9262 155.082C94.9262 159.686 89.363 163.338 81.8575 165.388C76.1129 166.962 73.89 164.529 75.0365 157.449C75.5279 154.434 77.2712 152.327 79.8569 150.988C81.3589 150.217 83.0515 149.73 84.8117 149.563ZM84.4607 150.081C82.9357 150.274 81.4747 150.719 80.1669 151.391C77.7216 152.658 76.0837 154.646 75.6215 157.516C74.5159 164.289 76.4171 166.372 81.6703 164.937C88.9593 162.94 94.3412 159.402 94.3412 155.082C94.3412 152.894 92.598 151.483 89.6438 150.691C88.0929 150.28 86.4762 150.062 84.8468 150.043C84.7708 150.043 84.6421 150.057 84.4607 150.081ZM131.772 138.828C131.77 138.826 131.768 138.827 131.768 138.829C130.174 143.529 123.033 143.557 116.138 140.409C110.189 137.702 108.065 131.779 113.213 129.432C114.107 129.028 114.981 128.596 115.834 128.136L117.021 127.512C117.765 127.115 118.53 126.747 119.314 126.408C122.081 125.241 124.474 125.064 127.504 126.062C132.862 127.819 133.927 132.459 131.776 138.826C131.775 138.828 131.773 138.829 131.772 138.828ZM119.584 126.837C119.584 126.836 119.582 126.835 119.581 126.836C118.814 127.168 118.065 127.528 117.337 127.915L116.15 128.539C115.658 128.793 115.272 128.995 114.886 129.187C114.406 129.427 113.95 129.648 113.494 129.854C108.849 131.966 110.809 137.438 116.419 139.991C123.035 143.011 129.757 142.982 131.207 138.696C133.296 132.537 132.29 128.15 127.288 126.504C124.422 125.568 122.206 125.726 119.586 126.839C119.585 126.839 119.584 126.838 119.584 126.837ZM130.026 132.667C130.026 135.403 128.598 136.987 126.141 137.448C124.211 137.812 121.719 137.424 119.66 136.579L118.554 136.128C118.162 135.964 117.864 135.83 117.6 135.705C115.22 134.563 115.184 133.32 117.799 130.459C121.777 126.11 130.026 127.022 130.026 132.667ZM129.441 132.667C129.441 130.123 127.762 128.563 125.159 128.27C122.684 127.996 119.899 128.961 118.267 130.747C115.84 133.406 115.869 134.318 117.893 135.292C118.15 135.412 118.437 135.537 118.823 135.7L119.917 136.147C121.871 136.948 124.223 137.318 126.013 136.982C128.195 136.569 129.441 135.187 129.441 132.662V132.667ZM244.391 267.545C244.391 261.401 245.819 259.509 255.202 253.255C256.601 252.326 258.09 251.491 259.654 250.759C261.175 250.039 262.772 249.406 264.626 248.753C265.351 248.498 266.077 248.249 267.025 247.937L269.318 247.183C274.817 245.345 277.355 243.967 279.04 241.399C279.742 240.334 280.333 239.287 280.93 238.121C281.24 237.51 281.541 236.896 281.831 236.278L282.006 235.923L282.334 235.232C284.206 231.382 285.873 229.433 289.763 227.312C290.799 226.745 291.77 226.102 292.665 225.392C293.473 224.745 294.231 224.057 294.934 223.333C295.092 223.169 296.426 221.797 296.806 221.422C298.842 219.43 300.615 218.59 303.54 218.59C305.341 218.59 306.827 218.288 309.138 217.582C312.309 216.613 312.958 216.459 314.379 216.526C315.859 216.589 317.217 217.131 318.58 218.249C319.34 218.873 321.826 221.048 322.394 221.504C325.354 223.904 327.916 224.825 332.789 224.825C335.147 224.838 337.503 224.91 339.856 225.041C349.175 225.459 352.69 225.315 354.644 223.98C358.687 221.211 361.454 222.67 361.454 227.705C361.454 232.856 356.423 237.305 350.339 237.305C347.531 237.305 345.472 237.991 344.875 239.067C344.22 240.257 345.273 242.019 348.373 244.14C356.329 249.578 354.949 254.105 343.904 254.105C340.778 254.061 337.741 254.955 335.363 256.62C333.444 257.921 331.97 259.433 329.601 262.293L328.712 263.373C326.898 265.567 325.781 266.781 324.43 267.885C320.797 270.866 318.989 271.553 316.795 271.193L316.21 271.082C315.703 270.97 315.18 270.91 314.654 270.905C313.718 270.905 313.245 271.226 309.869 273.89C307.032 276.132 305.148 277.144 302.955 277.144C302.177 277.144 300.931 277.696 299.181 278.8C298.439 279.271 297.614 279.828 296.549 280.576L293.671 282.635C292.798 283.259 291.912 283.87 291.015 284.469C285.557 288.098 281.872 289.365 279.192 287.599C277.613 286.567 276.77 285.434 276.484 284.114C276.267 283.135 276.332 282.372 276.653 280.61C277.162 277.802 277.034 276.568 275.583 275.042C274.226 273.612 273.851 273.496 273.378 273.895C273.231 274.02 272.588 274.677 272.436 274.826C271.143 276.026 269.598 276.54 267.171 276.18C264.48 275.776 263.912 274.207 264.41 271.337L264.55 270.588C264.901 268.831 264.948 268.221 264.696 267.804C264.439 267.391 263.585 267.353 261.637 267.996L261.204 268.135C253.143 270.794 252.277 271.058 249.837 271.337C246.31 271.74 244.391 270.569 244.391 267.545ZM245.561 267.545C245.561 269.945 246.813 270.712 249.68 270.386C251.967 270.122 252.856 269.858 260.765 267.242L261.204 267.098C263.643 266.301 265.123 266.359 265.743 267.377C266.159 268.063 266.106 268.701 265.708 270.737L265.568 271.471C265.147 273.89 265.533 274.96 267.375 275.234C269.382 275.532 270.523 275.152 271.558 274.188C271.675 274.077 272.342 273.391 272.541 273.228C273.652 272.287 274.776 272.628 276.507 274.452C278.204 276.247 278.362 277.701 277.806 280.749C277.221 283.989 277.502 285.261 279.924 286.85C281.965 288.194 285.247 287.066 290.278 283.725C291.068 283.197 291.887 282.631 292.904 281.911L295.788 279.847C296.865 279.088 297.701 278.522 298.468 278.037C300.422 276.808 301.826 276.184 302.955 276.184C304.733 276.184 306.435 275.272 309.056 273.199L310.495 272.052C311.045 271.624 311.472 271.303 311.882 271.029C312.94 270.314 313.812 269.945 314.654 269.945C315.257 269.945 315.713 270.007 316.468 270.146C316.877 270.223 316.883 270.228 317.029 270.247C318.761 270.535 320.218 269.983 323.599 267.209C324.886 266.153 325.974 264.977 327.746 262.836L328.636 261.756C331.063 258.823 332.59 257.258 334.614 255.881C337.202 254.072 340.505 253.1 343.904 253.145C353.773 253.145 354.796 249.78 347.624 244.875C344.173 242.513 342.874 240.358 343.81 238.668C344.641 237.171 347.127 236.345 350.339 236.345C355.75 236.345 360.284 232.342 360.284 227.705C360.284 223.414 358.599 222.526 355.393 224.715C353.088 226.289 349.555 226.438 339.791 226.001L339.195 225.972C336.217 225.843 334.521 225.785 332.789 225.785C327.594 225.785 324.74 224.758 321.569 222.185C320.984 221.715 318.492 219.531 317.749 218.926C316.585 217.971 315.491 217.534 314.315 217.486C313.128 217.429 312.525 217.573 309.547 218.48C307.12 219.224 305.511 219.545 303.54 219.545C301.007 219.545 299.538 220.246 297.701 222.041C297.333 222.397 296.011 223.769 295.841 223.937C295.108 224.691 294.319 225.405 293.478 226.078C292.533 226.829 291.507 227.509 290.412 228.108C286.75 230.11 285.206 231.905 283.422 235.587L283.088 236.273L282.925 236.628C282.623 237.25 282.319 237.871 282.012 238.491C281.433 239.637 280.785 240.758 280.07 241.851C278.221 244.673 275.495 246.156 269.756 248.071L267.463 248.83C266.527 249.137 265.802 249.382 265.094 249.631C263.43 250.206 261.809 250.86 260.239 251.59C258.728 252.296 257.29 253.102 255.939 253.999C246.801 260.095 245.561 261.741 245.561 267.549V267.545ZM323.494 229.26C325.284 229.995 327.319 230.23 329.741 230.076C331.221 229.98 332.614 229.779 334.889 229.361C338.025 228.79 338.592 228.699 339.762 228.622C341.388 228.512 342.582 228.704 343.442 229.294C344.366 229.923 344.588 230.6 344.179 231.32C343.793 231.982 343.565 232.155 341.225 233.753C339.16 235.16 338.282 236.071 338.282 237.156C338.282 240.66 339.037 241.966 342.863 244.654C345.121 246.238 346.332 247.937 345.951 249.271C345.513 250.831 343.05 251.681 338.575 251.681C334.374 251.681 331.145 253.894 326.857 258.727C326.565 259.063 324.541 261.401 323.967 262.025C323.149 262.973 322.225 263.857 321.206 264.665C320.586 265.135 319.984 265.481 319.393 265.697C317.726 266.301 316.439 266.45 313.642 266.532C309.161 266.661 307.284 267.228 304.879 269.94C303.955 270.981 303.06 271.86 302.141 272.628C300.629 273.871 298.928 274.95 297.081 275.839C296.994 275.877 290.828 278.81 288.423 280.077C286.224 281.239 284.65 281.056 283.615 279.708C282.866 278.733 282.503 277.528 281.936 274.74C281.444 272.301 281.193 271.341 280.731 270.453C280.163 269.349 279.438 268.898 278.379 269.071C274.752 269.666 273.143 269.738 271.956 269.167C270.57 268.495 270.125 266.949 270.423 264.017C270.517 263.076 269.815 262.639 268.224 262.557C266.913 262.495 265.357 262.653 262.409 263.095L262.005 263.153C257.343 263.849 255.734 263.978 254.564 263.503C252.862 262.817 253.628 260.973 257.039 257.642C260.244 254.508 263.24 252.454 266.258 251.148C268.446 250.202 269.733 249.876 273.372 249.18C277.636 248.354 279.456 247.495 281.585 244.711C283.316 242.431 287.868 235.774 288.687 234.708C290.787 231.987 292.665 230.34 295.151 229.265C296.672 228.603 297.912 227.912 300.515 226.352L301.322 225.867C305.915 223.121 308.518 222.037 311.665 222.037C314.134 222.037 315.462 222.689 317.006 224.326C317.205 224.533 317.983 225.392 318.176 225.608C318.673 226.131 319.112 226.558 319.609 226.966C320.737 227.906 322.05 228.681 323.494 229.26ZM323.236 229.69C323.236 229.691 323.235 229.692 323.234 229.691C321.597 229.02 320.311 228.238 319.188 227.307C318.679 226.875 318.223 226.438 317.72 225.9C317.515 225.68 316.737 224.82 316.544 224.619C315.099 223.092 313.935 222.517 311.665 222.517C308.688 222.517 306.166 223.572 301.668 226.251L300.86 226.736C298.234 228.315 296.982 229.011 295.42 229.688C293.045 230.72 291.231 232.304 289.184 234.968C288.371 236.019 283.825 242.671 282.076 244.961C279.859 247.874 277.905 248.791 273.5 249.641C269.914 250.337 268.662 250.649 266.527 251.57C263.579 252.847 260.648 254.863 257.483 257.954C254.307 261.055 253.663 262.605 254.822 263.071C255.816 263.474 257.442 263.345 261.9 262.682L262.309 262.62C265.305 262.173 266.884 262.01 268.259 262.082C270.137 262.178 271.137 262.793 271.008 264.055C270.727 266.82 271.125 268.202 272.254 268.749C273.266 269.239 274.793 269.172 278.262 268.601C279.637 268.375 280.602 268.975 281.269 270.266C281.755 271.202 282.012 272.186 282.48 274.49L282.515 274.663C283.065 277.375 283.422 278.556 284.106 279.453C284.96 280.557 286.165 280.701 288.108 279.674C290.529 278.397 296.701 275.464 296.771 275.426C298.578 274.557 300.241 273.502 301.72 272.287C302.696 271.466 303.595 270.587 304.411 269.657C306.938 266.801 308.98 266.186 313.619 266.057C316.345 265.975 317.573 265.831 319.153 265.255C319.679 265.063 320.235 264.746 320.814 264.314C321.807 263.527 322.708 262.666 323.505 261.741C324.067 261.117 326.079 258.785 326.389 258.444C330.777 253.495 334.123 251.201 338.575 251.201C342.81 251.201 345.021 250.433 345.384 249.166C345.7 248.052 344.588 246.502 342.477 245.019C338.528 242.239 337.697 240.799 337.697 237.156C337.697 235.875 338.657 234.881 340.85 233.384C343.073 231.862 343.325 231.675 343.647 231.113C343.939 230.604 343.793 230.158 343.067 229.659C341.763 228.771 340.306 228.867 335.018 229.832C332.719 230.249 331.303 230.456 329.788 230.552C327.274 230.715 325.127 230.465 323.238 229.689C323.237 229.688 323.236 229.689 323.236 229.69ZM306.856 227.823C306.856 227.821 306.857 227.82 306.859 227.82C310.163 226.467 312.099 226.765 314.403 228.478C314.73 228.718 315.924 229.664 316.17 229.856C318.626 231.723 320.89 232.596 324.535 232.596C331.186 232.596 332.725 233.273 333.953 236.479C334.105 236.878 334.743 238.687 334.924 239.177C335.392 240.439 335.884 241.591 336.504 242.825C337.75 245.307 338.048 246.819 337.51 247.74C337.06 248.513 336.281 248.786 334.369 249.079C333.011 249.286 332.731 249.334 332.116 249.487C331.034 249.766 330.157 250.159 329.425 250.764C328.84 251.244 328.244 251.786 327.489 252.521C327.138 252.862 325.787 254.201 325.465 254.508C321.253 258.607 318.194 260.436 314.005 260.436C311.806 260.436 309.939 261.05 307.81 262.356C306.734 263.013 301.012 267.305 298.906 268.625C297.248 269.669 295.498 270.612 293.671 271.447C290.992 272.666 289.371 272.992 288.418 272.517C287.645 272.133 287.452 271.524 287.283 269.877C287.258 269.587 287.226 269.298 287.189 269.009C286.873 266.738 285.879 265.716 283.001 265.716C278.841 265.716 277.823 265.125 277.309 263.119C276.747 260.906 276.08 259.903 273.477 258.478C271.155 257.206 270.956 255.876 272.588 254.532C273.758 253.572 275.296 252.852 279.227 251.234C283.094 249.65 284.609 248.93 285.721 248.028C286.887 247.085 287.926 246.043 288.821 244.918C289.395 244.198 289.892 243.459 290.506 242.455L291.746 240.391C292.279 239.513 292.752 238.774 293.273 238.001C296.631 233.048 299.339 230.907 306.854 227.826C306.856 227.826 306.856 227.824 306.856 227.823ZM293.788 238.236C293.267 238.999 292.799 239.734 292.267 240.607L291.033 242.671C290.518 243.534 289.943 244.372 289.313 245.182C288.394 246.333 287.327 247.4 286.13 248.364C284.96 249.324 283.428 250.049 279.491 251.662C275.63 253.246 274.109 253.966 272.997 254.873C271.634 255.996 271.78 256.97 273.805 258.074C276.554 259.582 277.291 260.695 277.882 263.018C278.338 264.794 279.105 265.236 283.001 265.236C286.218 265.236 287.429 266.469 287.768 268.956C287.803 269.196 287.821 269.349 287.868 269.839C288.014 271.308 288.189 271.84 288.722 272.104C289.424 272.46 290.88 272.167 293.39 271.025C295.191 270.201 296.915 269.271 298.55 268.241C300.626 266.945 306.353 262.649 307.465 261.967C309.682 260.609 311.665 259.956 314.005 259.956C317.965 259.956 320.908 258.194 325.02 254.196L327.039 252.214C327.665 251.596 328.323 251 329.01 250.428C329.829 249.769 330.837 249.288 331.941 249.031C332.584 248.868 332.877 248.815 334.263 248.604C335.989 248.34 336.644 248.114 336.983 247.534C337.428 246.771 337.147 245.374 335.966 243.007C335.359 241.799 334.824 240.567 334.363 239.316C334.181 238.822 333.544 237.012 333.392 236.623C332.251 233.648 330.958 233.076 324.535 233.076C320.732 233.076 318.328 232.15 315.772 230.206C315.514 230.014 314.333 229.068 314.011 228.833C311.876 227.249 310.197 226.985 307.114 228.252C299.702 231.291 297.081 233.364 293.788 238.236ZM326.465 243.963C324.722 247.059 316.649 251.287 310.823 251.287C307.705 251.287 306.4 249.857 306.663 247.514C306.851 245.844 307.892 243.718 308.962 242.422L309.852 241.308C310.199 240.865 310.566 240.433 310.951 240.012C313.092 237.708 315.544 236.436 318.919 236.436C324.219 236.436 328.133 241.006 326.465 243.963ZM325.936 243.761C325.938 243.761 325.939 243.76 325.94 243.758C327.411 241.133 323.802 236.916 318.919 236.916C315.76 236.916 313.461 238.107 311.419 240.305C311.073 240.684 310.743 241.064 310.351 241.554C310.342 241.566 310.333 241.578 310.324 241.59C310.225 241.715 309.62 242.488 309.448 242.691C308.43 243.924 307.424 245.979 307.243 247.558C307.009 249.636 308.079 250.807 310.823 250.807C316.42 250.807 324.285 246.691 325.932 243.763C325.933 243.762 325.934 243.761 325.936 243.761ZM285.183 253.716C286.399 253.802 287.78 254.105 288.622 254.58C289.863 255.286 289.909 256.308 288.47 257.484C285.463 259.956 280.953 259.567 280.953 256.836C280.953 254.599 282.79 253.553 285.183 253.716ZM285.13 254.196C283.047 254.052 281.538 254.916 281.538 256.836C281.538 259.034 285.358 259.361 288.061 257.148C289.248 256.169 289.219 255.502 288.295 254.978C287.552 254.556 286.259 254.273 285.136 254.196H285.13ZM302.437 145.744C302.439 145.743 302.441 145.742 302.443 145.743C305.16 146.872 312.543 149.697 313.783 150.268C315.353 150.95 316.752 151.868 317.907 152.975C318.71 153.763 319.443 154.598 320.101 155.471C321.505 157.286 320.124 159.148 316.474 161.054C313.566 162.57 309.349 164.077 303.633 165.767C300.802 166.602 292.15 168.973 291.29 169.223C287.435 170.341 282.603 169.271 276.583 166.41C274.284 165.321 271.903 164.01 269.013 162.311C267.709 161.538 263.456 158.956 262.754 158.543C261.144 157.544 259.458 156.63 257.706 155.807C254.886 154.559 255.102 152.62 257.805 149.985C259.718 148.123 260.244 147.743 268.393 142.147C270.165 140.945 271.899 139.706 273.594 138.432C274.546 137.712 275.467 136.966 276.355 136.195C279.327 133.588 282.088 133.08 285.112 134.313C286.423 134.841 287.762 135.681 289.459 136.963C290.325 137.62 293.519 140.188 294.127 140.659C297.168 143.014 299.659 144.593 302.43 145.745C302.433 145.746 302.435 145.746 302.437 145.744ZM302.171 146.174C299.333 144.998 296.801 143.395 293.723 141.009C293.109 140.529 289.921 137.966 289.061 137.318C287.406 136.065 286.101 135.254 284.849 134.74C282.07 133.608 279.584 134.068 276.776 136.521C275.88 137.301 274.952 138.055 273.992 138.782C272.541 139.886 270.973 140.999 268.774 142.511C260.666 148.079 260.133 148.463 258.256 150.292C255.752 152.73 255.576 154.324 257.986 155.385C259.291 155.961 260.853 156.82 263.099 158.154C263.801 158.572 268.054 161.15 269.359 161.922C271.78 163.382 274.289 164.742 276.876 165.997C282.761 168.791 287.447 169.828 291.091 168.772C291.957 168.522 300.609 166.146 303.434 165.316C309.109 163.636 313.297 162.143 316.158 160.65C319.574 158.87 320.779 157.242 319.609 155.726C318.965 154.872 318.248 154.057 317.462 153.287C316.352 152.223 315.006 151.34 313.496 150.686C312.279 150.129 304.908 147.302 302.171 146.174ZM279.456 150.04C279.456 150.039 279.457 150.038 279.458 150.037C281.276 149.86 282.791 149.976 284.369 150.374C285.627 150.691 285.972 150.82 289.424 152.183C292.202 153.282 294.332 154.036 297.14 154.852C302.042 156.278 303.762 157.842 302.305 159.537C301.088 160.948 297.602 162.378 291.869 163.943C286.926 165.297 282.813 165.071 279.333 163.511C276.613 162.287 274.46 160.391 272.225 157.607C270.529 155.49 270.628 153.671 272.319 152.298C273.769 151.123 276.336 150.345 279.453 150.043C279.454 150.043 279.456 150.041 279.456 150.04ZM279.526 150.518C276.525 150.806 274.068 151.554 272.728 152.639C271.248 153.839 271.16 155.409 272.716 157.343C274.898 160.07 276.987 161.908 279.619 163.089C282.954 164.581 286.891 164.802 291.682 163.492C297.292 161.956 300.714 160.554 301.826 159.258C302.96 157.938 301.533 156.642 296.941 155.303C294.11 154.478 291.969 153.719 289.172 152.615C285.756 151.266 285.417 151.142 284.2 150.835C282.687 150.448 281.089 150.34 279.52 150.518H279.526ZM136.461 253.183C136.461 255.478 135.612 256.812 133.869 257.47C132.529 257.974 131.207 258.06 127.557 258.046L126.516 258.041C121.14 258.041 116.571 254.369 116.571 250.601C116.571 246.958 122.772 245.556 128.119 247.99C129.745 248.734 130.581 248.921 133.132 249.31C135.729 249.708 136.461 250.399 136.461 253.183ZM135.876 253.183C135.876 250.639 135.349 250.14 133.021 249.785C130.418 249.386 129.534 249.185 127.838 248.412C122.824 246.127 117.156 247.404 117.156 250.601C117.156 254.105 121.461 257.561 126.516 257.561H127.563C131.108 257.58 132.395 257.494 133.623 257.033C135.144 256.457 135.876 255.305 135.876 253.183ZM155.373 196.616C157.544 195.987 160.463 195.32 164.792 194.432C166.301 194.12 174.461 192.493 176.819 192.008C188.279 189.642 195.275 187.736 199.183 185.6C207.917 180.824 220.752 169.338 224.823 162.657C226.14 160.497 227.544 159.594 229.316 159.657C230.053 159.686 230.843 159.873 231.843 160.233C232.546 160.483 233.237 160.755 233.914 161.049L234.651 161.351C237.447 162.474 239.553 163.002 242.051 163.002C246.263 163.002 247.907 164.476 246.936 166.799C246.117 168.748 243.473 171.076 240.443 172.569C235.587 174.959 233.569 180.872 233.569 188.682C233.569 190.405 232.767 191.696 231.241 192.695C230.082 193.453 228.784 193.943 226.286 194.691L225.689 194.869C222.852 195.709 221.606 196.199 220.611 197.01C217.634 199.458 213.276 200.442 208.707 200.442C207.9 200.442 207.262 200.883 206.373 201.93C206.203 202.126 205.601 202.866 205.513 202.976C203.945 204.858 202.629 205.722 200.517 205.722C195.931 205.722 194.234 206.168 187.788 209.053C184.757 210.406 182.64 210.771 179.212 210.819C179.06 210.819 178.937 210.819 178.673 210.829C175.854 210.858 174.508 210.973 172.525 211.472C170.748 211.948 169.011 212.519 167.325 213.181C166.055 213.661 161.165 215.585 161.34 215.518C156.783 217.294 153.548 218.389 150.284 219.152C143.024 220.856 139.415 220.227 134.243 217.198C132.734 216.31 132.652 215.072 133.758 213.541C134.606 212.365 136.039 211.098 138.485 209.235L139.526 208.448C141.819 206.72 142.147 206.475 142.977 205.794C144.335 204.68 144.802 204.114 146.183 202.131C147.312 200.518 148.154 199.678 149.851 198.743C151.196 198.003 152.975 197.312 155.373 196.616ZM155.572 197.067C153.215 197.749 151.477 198.426 150.179 199.141C148.57 200.029 147.78 200.816 146.692 202.371C145.288 204.387 144.797 204.982 143.393 206.13C142.556 206.821 142.223 207.07 139.918 208.803L138.882 209.586C136.484 211.419 135.068 212.662 134.261 213.785C133.296 215.125 133.36 216.089 134.583 216.809C139.614 219.757 143.042 220.352 150.126 218.691C153.343 217.937 156.561 216.848 161.089 215.086C160.913 215.153 165.804 213.224 167.079 212.744C168.788 212.074 170.549 211.497 172.35 211.016C174.403 210.493 175.795 210.378 178.668 210.344H179.2C182.546 210.296 184.57 209.946 187.507 208.63C194.035 205.712 195.814 205.242 200.517 205.242C202.383 205.242 203.559 204.474 205.027 202.707L205.893 201.651C206.887 200.485 207.648 199.962 208.707 199.962C213.135 199.962 217.353 199.002 220.202 196.674C221.272 195.791 222.565 195.282 225.49 194.418L226.087 194.24C231.118 192.738 232.984 191.519 232.984 188.682C232.984 180.714 235.049 174.666 240.144 172.156C243.069 170.716 245.614 168.474 246.38 166.645C247.211 164.663 245.895 163.482 242.051 163.482C239.448 163.482 237.26 162.935 234.394 161.783C229.995 160.022 230.428 160.18 229.293 160.137C227.783 160.089 226.572 160.866 225.35 162.873C221.231 169.626 208.327 181.18 199.511 186.004C195.527 188.183 188.49 190.093 176.959 192.474C174.602 192.963 166.441 194.586 164.932 194.898C160.621 195.781 157.719 196.448 155.572 197.067ZM165.418 199.002C166.634 199.002 167.758 198.906 169.659 198.671C172.712 198.301 173.543 198.239 174.608 198.431C176.082 198.699 176.825 199.559 176.825 201.162C176.825 203.106 175.497 204.661 172.952 206.014C171.057 207.022 169.132 207.709 164.675 209.086L164.517 209.134L163.183 209.547C161.404 210.104 160.1 210.757 157.725 212.153L157.257 212.427C152.466 215.249 149.447 216.281 143.773 216.281C140.86 216.281 139.748 215.307 140.409 213.584C140.918 212.235 142.503 210.435 144.972 208.242C145.709 207.584 146.517 206.898 147.4 206.178C149.254 204.67 153.981 201.085 154.098 200.994C154.367 200.768 154.642 200.566 154.917 200.389C156.894 199.088 158.292 198.911 163.212 198.983C164.177 198.997 164.751 199.002 165.418 199.002ZM165.418 199.482C164.745 199.482 164.172 199.477 163.2 199.462C158.415 199.395 157.117 199.559 155.28 200.763C155.022 200.931 154.765 201.118 154.507 201.33C154.39 201.43 149.652 205.021 147.809 206.523C146.988 207.19 146.184 207.872 145.399 208.568C142.989 210.714 141.445 212.465 140.965 213.728C140.438 215.11 141.228 215.801 143.773 215.801C149.307 215.801 152.22 214.808 156.912 212.038L157.38 211.765C159.796 210.344 161.135 209.672 162.972 209.096L164.318 208.683L164.464 208.635C168.881 207.272 170.782 206.595 172.636 205.611C175.023 204.339 176.24 202.923 176.24 201.162C176.24 199.775 175.672 199.117 174.485 198.906C173.52 198.728 172.701 198.786 169.746 199.146C167.816 199.386 166.669 199.482 165.418 199.482ZM231.211 177.719C230.112 180.33 230.053 180.964 230.638 183.844C231.328 187.232 229.831 191.802 227.427 191.802C227.132 191.802 226.837 191.813 226.543 191.835L226.169 191.855C224.496 191.941 223.343 191.936 222.109 191.773C218.277 191.264 216.019 189.306 216.019 185.322C216.019 178.65 217.271 175.871 220.775 172.684C221.341 172.127 221.835 171.524 222.249 170.884C222.594 170.389 223.876 168.421 223.841 168.479C226.438 164.572 228.351 162.945 231.007 163.487C231.691 163.631 232.294 163.857 233.101 164.25L233.914 164.653C234.49 164.952 235.097 165.209 235.728 165.421C236.137 165.551 236.781 165.575 238.506 165.546L238.927 165.541C240.776 165.517 241.724 165.58 242.338 165.858C243.28 166.285 243.04 167.087 241.671 168.21C240.928 168.819 240.175 169.421 239.413 170.015C233.212 174.863 231.954 175.967 231.211 177.719ZM230.661 177.565C231.445 175.693 232.686 174.604 239.009 169.665C239.916 168.959 240.606 168.407 241.262 167.874C242.396 166.938 242.531 166.492 242.051 166.276C241.572 166.06 240.665 165.997 238.939 166.021L238.518 166.026C236.681 166.055 236.026 166.036 235.511 165.863C234.891 165.666 234.359 165.431 233.61 165.061L232.803 164.663C232.204 164.35 231.551 164.112 230.866 163.957C228.596 163.492 226.818 164.999 224.355 168.709C224.396 168.647 223.103 170.62 222.758 171.119C222.323 171.789 221.803 172.419 221.208 173.001C217.809 176.106 216.604 178.76 216.604 185.322C216.604 189.061 218.64 190.827 222.203 191.298C223.378 191.456 224.496 191.461 226.128 191.375C226.368 191.364 226.608 191.353 226.847 191.341C227.093 191.327 227.274 191.322 227.427 191.322C229.298 191.322 230.702 187.05 230.059 183.92C229.462 180.964 229.527 180.253 230.661 177.565ZM225.244 183.527C225.584 183.776 226.707 184.439 226.736 184.453C227.883 185.207 227.93 186.042 226.742 187.506C224.554 190.213 221.577 188.989 221.577 185.322C221.577 183.493 221.875 182.6 222.788 182.432C223.478 182.308 223.958 182.576 225.244 183.527ZM224.461 184.24C224.461 184.238 224.46 184.237 224.459 184.236C223.583 183.589 223.156 183.349 223.039 183.373C222.94 183.388 222.747 183.964 222.747 185.322C222.747 188.139 224.309 188.783 225.771 186.978C226.648 185.893 226.631 185.615 226.005 185.202C226.023 185.216 224.868 184.532 224.462 184.243C224.461 184.242 224.461 184.241 224.461 184.24ZM354.855 121.747C356.142 121.219 357.002 120.95 358.295 120.614L358.458 120.571C360.236 120.141 361.958 119.57 363.601 118.867C366.04 117.869 367.315 117.965 367.672 119.27C367.929 120.23 367.789 121.195 366.941 125.366C365.613 131.904 361.582 137.913 354.557 142.79C352.041 144.532 350.222 144.897 348.853 143.961C347.753 143.207 347.039 141.767 346.156 138.931C345.981 138.379 345.32 136.132 345.15 135.59C344.697 134.097 344.169 132.621 343.565 131.164C342.161 127.891 341.792 125.99 342.336 124.953C342.787 124.075 343.553 123.878 345.612 123.777C346.484 123.734 346.835 123.71 347.35 123.643L348.49 123.485C348.911 123.427 349.204 123.389 349.473 123.345C350.117 123.249 350.596 123.163 351.058 123.057C352.053 122.822 353.059 122.481 354.855 121.747ZM355.112 122.179C353.293 122.918 352.258 123.278 351.222 123.518C350.731 123.629 350.234 123.72 349.578 123.821C348.838 123.932 348.095 124.033 347.35 124.123C346.899 124.185 346.536 124.214 345.641 124.257C343.81 124.344 343.202 124.502 342.868 125.145C342.412 126.029 342.751 127.843 344.115 131.001C344.725 132.472 345.26 133.963 345.717 135.47L346.724 138.811C347.578 141.547 348.256 142.929 349.227 143.591C350.321 144.34 351.854 144.038 354.182 142.42C361.097 137.62 365.063 131.716 366.368 125.285C367.187 121.229 367.333 120.24 367.099 119.376C366.859 118.478 366.011 118.416 363.858 119.299C362.189 120.012 360.439 120.591 358.634 121.027L358.47 121.075C357.314 121.362 356.19 121.731 355.112 122.179ZM352.483 125.337C352.482 125.337 352.482 125.337 352.483 125.337C353.283 125.183 353.943 124.977 354.761 124.656C354.966 124.569 356.265 124.027 356.703 123.854C357.581 123.513 358.441 123.225 359.453 122.947C361.032 122.515 362.167 122.577 362.893 123.139C363.466 123.59 363.677 124.224 363.717 125.145C363.729 125.337 363.729 125.481 363.729 125.803C363.729 128.505 361.021 133.905 357.095 136.723C354.557 138.547 352.819 138.964 351.292 137.932C350.087 137.116 349.245 135.7 347.391 131.736C346.302 129.417 346.191 127.848 346.993 126.84C347.648 126.024 348.689 125.707 350.403 125.544L351.14 125.486C351.834 125.429 352.162 125.395 352.483 125.338C352.483 125.338 352.483 125.337 352.483 125.337ZM351.251 126.441L350.538 126.499C349.134 126.629 348.373 126.864 347.97 127.368C347.426 128.054 347.513 129.336 348.479 131.39C350.245 135.153 351.058 136.531 352.035 137.193C352.989 137.836 354.165 137.553 356.323 136.003C359.985 133.372 362.559 128.241 362.559 125.803C362.559 125.496 362.559 125.357 362.548 125.184C362.518 124.493 362.372 124.065 362.085 123.84C361.734 123.566 361.032 123.528 359.822 123.859C358.928 124.101 358.055 124.39 357.207 124.723C356.785 124.886 355.493 125.429 355.264 125.52C354.465 125.849 353.62 126.101 352.749 126.269C352.363 126.345 352 126.384 351.251 126.441ZM218.032 83.7316C217.101 85.7956 215.961 87.2116 213.855 89.2035L212.334 90.6291C211.801 91.1327 211.288 91.6497 210.795 92.1795C209.745 93.3052 208.828 94.5107 208.057 95.7794C206.39 98.5154 203.881 100.666 200.54 102.447C198.054 103.771 195.714 104.664 191.374 106.09C184.933 108.202 181.762 106.694 175.45 98.2178C173.777 95.9666 170.302 94.0754 164.932 92.1411C163.177 91.5027 157.397 89.6259 156.491 89.2995C153.589 88.2531 152.372 87.514 152.735 86.4916C153.127 85.378 155.835 84.5476 161.791 83.5732C171.519 81.9797 177.544 81.7397 185.149 82.1236C189.771 82.3588 190.806 82.3636 192.602 81.9989C193.766 81.7685 194.895 81.3749 196.112 80.7509L197.744 79.9301C203.512 76.9829 205.314 76.1093 207.864 75.1782C211.392 73.8774 214.048 73.5846 216.019 74.5062C220.231 76.4837 220.512 78.2021 218.032 83.7316ZM216.932 83.3956C219.242 78.2597 219.038 77.0309 215.434 75.3414C213.878 74.6118 211.562 74.8662 208.344 76.0518C205.864 76.9637 204.074 77.8277 198.358 80.7413L196.726 81.5717C195.541 82.1907 194.244 82.6508 192.883 82.9348C190.917 83.3236 189.829 83.3188 185.079 83.0788C177.568 82.7044 171.642 82.9396 162.025 84.5188C159.158 84.9844 157.081 85.4212 155.713 85.8388C154.525 86.2036 153.934 86.5348 153.858 86.7556C153.765 87.0292 154.724 87.6148 156.959 88.4163C157.836 88.7379 163.622 90.6147 165.406 91.2627C170.975 93.2739 174.614 95.2466 176.445 97.7138C182.499 105.84 185.143 107.102 190.941 105.202C195.211 103.795 197.498 102.922 199.909 101.64C203.079 99.9457 205.448 97.9202 207.016 95.3522C207.859 93.9602 208.783 92.7603 209.859 91.5987C210.369 91.0525 210.9 90.5194 211.45 90.0003L212.971 88.5747C214.995 86.6596 216.06 85.3348 216.932 83.3956ZM213.047 83.2084C208.403 89.3523 202.208 93.6483 193.567 95.3186C188.993 96.197 186.272 94.9394 185.892 92.4723C185.57 90.3363 187.232 88.1236 189.402 88.1236C191.169 88.1236 192.678 87.3172 198.399 83.7268C199.259 83.1892 199.903 82.786 200.54 82.4116C203.114 80.8757 205.086 79.9301 206.87 79.4933C210.128 78.6917 212.328 78.4613 213.51 78.9077C214.972 79.4549 214.808 80.8901 213.047 83.2084ZM212.556 82.9588C214.147 80.8469 214.276 79.7237 213.264 79.3445C212.264 78.9653 210.152 79.1861 207.034 79.9541C205.337 80.3717 203.407 81.2933 200.885 82.7956C200.254 83.1748 199.61 83.5732 198.75 84.1108C192.854 87.8164 191.368 88.6035 189.402 88.6035C187.635 88.6035 186.185 90.5331 186.477 92.4147C186.805 94.5746 189.18 95.669 193.433 94.8482C201.903 93.2163 207.976 89.0019 212.556 82.9588ZM287.78 29.0989C295.9 31.4797 299.919 31.4797 306.277 29.1037C308.044 28.4461 309.477 27.6926 312.712 25.8302C315.971 23.9486 317.421 23.1854 319.229 22.5086C321.651 21.6063 323.78 21.3663 325.793 21.8943C328.086 22.499 329.42 27.7982 329.759 35.55C330.051 42.3659 329.455 49.4362 328.32 51.9658C327.255 54.3321 324.892 55.8873 321.587 56.7753C319.131 57.3921 316.573 57.6869 314.005 57.6489C310.618 57.6489 308.74 58.8008 306.868 61.316C306.652 61.5992 305.961 62.564 305.868 62.6936C304.844 64.0855 304.084 64.7719 302.984 65.0695C302.434 65.2231 301.773 65.4679 300.72 65.9047L299.298 66.4951C298.696 66.7495 298.204 66.9463 297.719 67.1383C293.957 68.6263 290.857 69.4039 287.681 69.4039C284.34 69.4039 281.807 70.407 279.479 72.2454C278.8 72.7782 277.022 74.4198 276.77 74.6166C275.285 75.7878 273.301 76.6517 270.423 77.5445C269.604 77.7941 266.925 78.5669 266.767 78.6101L265.562 78.9845C265.041 79.1573 264.521 79.2869 263.983 79.3733C260.736 79.9205 257.466 79.1141 253.464 77.2517C252.721 76.9013 250.463 75.783 250.095 75.6102C248.896 75.0534 247.685 74.8758 244.777 74.6982L243.765 74.6262C240.969 74.4342 239.273 74.079 237.787 73.2006C234.862 71.4678 233.826 69.4759 234.481 67.2823C235.26 64.6807 238.284 61.9928 243.169 58.988C244.415 58.2261 245.683 57.4883 246.971 56.7753C246.778 56.8857 249.504 55.3737 250.071 55.0473C251.669 54.1305 252.879 53.1753 257.53 49.2682L258.168 48.7402C260.209 47.0314 261.613 45.9131 262.918 44.9819C264.614 43.7819 265.679 42.1259 267.305 38.718L267.674 37.9452C269.253 34.6236 270.178 33.1453 271.693 32.0269C272.523 31.4125 275.6 28.8877 276.332 28.4269C278.66 26.987 281.017 27.1166 287.78 29.0989ZM287.581 29.5501C280.994 27.6206 278.806 27.4958 276.689 28.8157C275.992 29.2477 272.945 31.7485 272.079 32.3821C270.663 33.4285 269.762 34.8732 268.218 38.118L267.849 38.8908C266.194 42.3755 265.088 44.0747 263.304 45.3467C261.441 46.6992 259.653 48.1198 257.945 49.6042C253.254 53.5401 252.049 54.5001 250.411 55.4409C249.832 55.7721 247.106 57.2841 247.304 57.1689C245.842 57.9897 244.66 58.6712 243.52 59.372C238.74 62.3144 235.78 64.9399 235.049 67.3975C234.452 69.3895 235.388 71.1894 238.126 72.807C239.507 73.623 241.115 73.959 243.812 74.151L244.824 74.2134C247.819 74.4054 249.083 74.5878 250.382 75.1974C250.762 75.3702 253.014 76.4933 253.751 76.8293C257.647 78.6437 260.794 79.4213 263.866 78.9029C264.369 78.8213 264.86 78.7013 265.34 78.5429C265.747 78.4093 266.156 78.2813 266.568 78.1589C266.732 78.1109 269.411 77.3429 270.219 77.0933C273.026 76.2293 274.945 75.3846 276.361 74.271C276.595 74.0886 278.373 72.447 279.069 71.8998C281.503 69.9798 284.171 68.9239 287.681 68.9239C290.752 68.9239 293.776 68.1607 297.467 66.7063C297.947 66.5143 298.433 66.3223 299.035 66.0679C299.105 66.0391 300.164 65.5927 300.457 65.4775C301.533 65.0311 302.212 64.7767 302.797 64.6135C303.733 64.3639 304.411 63.74 305.365 62.444L306.359 61.0616C308.342 58.4216 310.378 57.1689 314.005 57.1689C316.608 57.1689 319.112 56.9337 321.399 56.3193C324.558 55.4745 326.781 54.0153 327.776 51.8026C328.87 49.3498 329.472 42.3227 329.174 35.5644C328.846 28.1101 327.53 22.8542 325.617 22.355C323.757 21.8655 321.774 22.091 319.475 22.9454C317.708 23.603 316.275 24.3566 313.04 26.2238C309.781 28.1053 308.331 28.8637 306.523 29.5453C300.012 31.9693 295.841 31.9693 287.581 29.5501ZM295.87 39.4044C299.018 39.4044 300.287 39.3036 301.556 38.9436C302.294 38.7372 307.377 36.6396 310.261 35.6028C311.373 35.2092 312.344 34.4316 314.122 32.7037C315.62 31.2445 315.988 30.9037 316.696 30.3805C318.861 28.7725 320.832 28.8061 322.675 30.9709C326.319 35.2428 325.956 38.622 322.716 43.9403C322.183 44.7998 321.695 45.6773 321.253 46.5706C321.066 46.9546 320.668 47.8666 320.615 47.9626C320.516 48.1786 320.417 48.3514 320.3 48.5242C319.931 49.0714 319.387 49.585 317.93 50.7802C316.526 51.9322 314.912 52.3497 311.098 52.8585C310.039 53.0025 309.811 53.0313 309.343 53.1033C305.821 53.6313 303.727 54.3945 302.182 56.0169C300.094 58.22 297.561 59.6072 293.419 61.172C293.098 61.2872 292.776 61.412 292.366 61.556L291.325 61.94C289.771 62.4746 288.265 63.1002 286.821 63.812C285.317 64.5799 284.018 64.9399 281.31 65.4727C276.291 66.4615 274.126 67.2775 271.149 69.9655C268.154 72.6726 265.199 73.6326 261.42 73.1814C258.285 72.8022 255.202 71.7366 247.638 68.6311C243.952 67.1191 243.876 64.8967 246.76 62.1224C248.738 60.2312 248.82 60.1736 258.109 54.2313C262.859 51.193 265.697 49.1578 267.838 47.089C269.318 45.6587 270.295 44.3387 270.739 43.1051C273.957 34.3212 278.052 32.5549 284.065 35.6364C285.206 36.222 287.932 37.8204 288.266 37.9884C290.231 39.0204 292.08 39.4044 295.87 39.4044ZM295.87 40.3643C291.869 40.3643 289.804 39.9372 287.634 38.7996C287.265 38.6076 284.551 37.0188 283.445 36.4476C278.151 33.7357 274.869 35.1516 271.862 43.3835C271.359 44.7611 270.3 46.1914 268.733 47.7082C266.521 49.8442 263.643 51.9082 258.823 54.9897C249.662 60.8504 249.545 60.932 247.65 62.7464C245.21 65.0983 245.257 66.5863 248.164 67.7767C255.6 70.8246 258.63 71.8758 261.584 72.231C264.965 72.6342 267.539 71.799 270.283 69.3223C273.454 66.4615 275.811 65.5687 281.035 64.5415C283.627 64.028 284.837 63.6968 286.2 62.996C287.69 62.2619 289.242 61.617 290.845 61.0664L291.887 60.6824L292.928 60.2984C296.918 58.796 299.31 57.4809 301.258 55.4313C303.013 53.5737 305.353 52.7241 309.132 52.1577C309.618 52.0858 309.84 52.0569 310.91 51.913C314.479 51.433 315.941 51.0586 317.1 50.1034C318.48 48.9706 318.978 48.5002 319.276 48.0586C319.364 47.929 319.445 47.7898 319.533 47.6074C319.568 47.5354 319.972 46.6186 320.171 46.2155C320.545 45.4475 321.019 44.5835 321.674 43.5083C324.74 38.4732 325.067 35.4444 321.715 31.5181C320.311 29.8669 319.159 29.8477 317.48 31.0909C316.831 31.5709 316.468 31.9069 315.011 33.3229C313.116 35.1708 312.063 36.006 310.729 36.486C307.909 37.494 302.762 39.6204 301.937 39.8508C300.509 40.2539 299.135 40.3643 295.87 40.3643ZM288.438 44.4899C288.44 44.4915 288.442 44.4929 288.444 44.4942C291.643 46.3642 294.491 46.2774 299.105 44.9147C302.258 43.9835 302.569 43.9067 303.61 43.9067C305.072 43.9019 306.073 44.5595 306.675 46.0474C307.646 48.4378 305.318 50.137 299.48 52.1338C297.9 52.6761 289.974 55.1001 287.78 55.8441C283.182 57.3993 279.631 58.9256 276.741 60.716C269.125 65.4391 266.001 66.4423 262.871 65.3623C262.134 65.0946 261.426 64.7767 260.753 64.4119L259.589 63.7976C259.157 63.5683 258.72 63.3443 258.279 63.1256C256.331 62.1656 256.629 61.0712 258.776 59.6024C259.566 59.06 265.012 55.9497 266.691 54.8457C270.844 52.1145 273.658 49.3402 275.121 46.0427C276.917 41.9867 277.981 40.2347 279.099 39.6156C280.111 39.0588 281.064 39.3612 282.714 40.5275C283.082 40.7963 284.703 42.0059 285.118 42.3035C286.246 43.1187 287.287 43.8142 288.432 44.4856C288.434 44.4868 288.436 44.4883 288.438 44.4899ZM288.093 44.8787C288.091 44.8771 288.089 44.8756 288.087 44.8744C286.93 44.1934 285.872 43.4931 284.732 42.6683C284.305 42.3611 282.696 41.1515 282.334 40.8923C280.871 39.8556 280.14 39.6204 279.426 40.0139C278.455 40.5467 277.414 42.2699 275.671 46.2058C274.167 49.5994 271.283 52.4409 267.06 55.2201C265.357 56.3385 259.917 59.444 259.151 59.972C257.267 61.2584 257.068 61.9736 258.583 62.7176L259.905 63.3896L261.069 64.004C261.929 64.4503 262.52 64.7239 263.099 64.9207C265.966 65.9143 268.926 64.9543 276.39 60.332C279.327 58.5128 282.913 56.9721 287.564 55.3977C289.763 54.6537 297.684 52.2297 299.263 51.6922C304.821 49.7866 306.95 48.2362 306.125 46.2011C305.599 44.9003 304.809 44.3771 303.61 44.3819C302.674 44.3819 302.352 44.4635 299.304 45.3659C294.526 46.7766 291.502 46.873 288.099 44.883C288.097 44.8817 288.095 44.8803 288.093 44.8787Z\" fill=\"#A3A3A3\" fill-opacity=\"0.17\"/>\n                    <path d=\"M110.19 169.835C106.451 169.835 103.09 169.119 100.107 167.688C97.1442 166.236 94.7777 164.247 93.0078 161.722C91.2379 159.196 90.2933 156.312 90.174 153.071H99.1229C99.3416 155.696 100.505 157.854 102.613 159.544C104.721 161.234 107.246 162.08 110.19 162.08C112.536 162.08 114.614 161.543 116.424 160.469C118.254 159.375 119.685 157.874 120.719 155.964C121.773 154.055 122.3 151.878 122.3 149.432C122.3 146.946 121.763 144.729 120.69 142.78C119.616 140.831 118.134 139.3 116.245 138.186C114.376 137.072 112.228 136.506 109.802 136.486C107.952 136.486 106.093 136.804 104.224 137.44C102.354 138.077 100.843 138.912 99.6896 139.946L91.2479 138.693L94.6783 107.909H128.266V115.814H102.344L100.406 132.906H100.763C101.957 131.753 103.538 130.788 105.506 130.013C107.495 129.237 109.623 128.849 111.89 128.849C115.609 128.849 118.92 129.734 121.823 131.504C124.746 133.274 127.043 135.69 128.714 138.753C130.404 141.795 131.239 145.295 131.219 149.253C131.239 153.21 130.344 156.74 128.535 159.842C126.745 162.945 124.259 165.391 121.077 167.18C117.915 168.95 114.286 169.835 110.19 169.835ZM163.383 170.014C158.67 169.994 154.643 168.751 151.302 166.286C147.961 163.82 145.406 160.23 143.636 155.517C141.866 150.804 140.981 145.126 140.981 138.484C140.981 131.862 141.866 126.205 143.636 121.511C145.426 116.818 147.991 113.239 151.332 110.773C154.693 108.307 158.71 107.074 163.383 107.074C168.056 107.074 172.064 108.317 175.404 110.803C178.745 113.268 181.301 116.848 183.071 121.541C184.86 126.214 185.755 131.862 185.755 138.484C185.755 145.146 184.87 150.834 183.101 155.547C181.331 160.24 178.775 163.83 175.434 166.315C172.093 168.781 168.076 170.014 163.383 170.014ZM163.383 162.05C167.52 162.05 170.751 160.031 173.078 155.994C175.424 151.957 176.598 146.121 176.598 138.484C176.598 133.413 176.061 129.128 174.987 125.628C173.933 122.108 172.412 119.443 170.423 117.634C168.454 115.804 166.108 114.889 163.383 114.889C159.267 114.889 156.035 116.918 153.689 120.974C151.342 125.031 150.159 130.868 150.139 138.484C150.139 143.575 150.666 147.881 151.72 151.401C152.794 154.901 154.315 157.555 156.284 159.365C158.252 161.155 160.619 162.05 163.383 162.05ZM217.606 170.014C212.893 169.994 208.866 168.751 205.525 166.286C202.184 163.82 199.629 160.23 197.859 155.517C196.089 150.804 195.204 145.126 195.204 138.484C195.204 131.862 196.089 126.205 197.859 121.511C199.648 116.818 202.214 113.239 205.555 110.773C208.915 108.307 212.933 107.074 217.606 107.074C222.279 107.074 226.286 108.317 229.627 110.803C232.968 113.268 235.523 116.848 237.293 121.541C239.083 126.214 239.978 131.862 239.978 138.484C239.978 145.146 239.093 150.834 237.323 155.547C235.553 160.24 232.998 163.83 229.657 166.315C226.316 168.781 222.299 170.014 217.606 170.014ZM217.606 162.05C221.742 162.05 224.974 160.031 227.3 155.994C229.647 151.957 230.82 146.121 230.82 138.484C230.82 133.413 230.283 129.128 229.21 125.628C228.156 122.108 226.634 119.443 224.646 117.634C222.677 115.804 220.33 114.889 217.606 114.889C213.489 114.889 210.258 116.918 207.911 120.974C205.565 125.031 204.381 130.868 204.362 138.484C204.362 143.575 204.888 147.881 205.942 151.401C207.016 154.901 208.538 157.555 210.506 159.365C212.475 161.155 214.842 162.05 217.606 162.05ZM271.828 170.014C267.115 169.994 263.088 168.751 259.748 166.286C256.407 163.82 253.851 160.23 252.081 155.517C250.311 150.804 249.426 145.126 249.426 138.484C249.426 131.862 250.311 126.205 252.081 121.511C253.871 116.818 256.436 113.239 259.777 110.773C263.138 108.307 267.155 107.074 271.828 107.074C276.502 107.074 280.509 108.317 283.85 110.803C287.191 113.268 289.746 116.848 291.516 121.541C293.306 126.214 294.201 131.862 294.201 138.484C294.201 145.146 293.316 150.834 291.546 155.547C289.776 160.24 287.221 163.83 283.88 166.315C280.539 168.781 276.522 170.014 271.828 170.014ZM271.828 162.05C275.965 162.05 279.196 160.031 281.523 155.994C283.87 151.957 285.043 146.121 285.043 138.484C285.043 133.413 284.506 129.128 283.432 125.628C282.378 122.108 280.857 119.443 278.868 117.634C276.9 115.804 274.553 114.889 271.828 114.889C267.712 114.889 264.48 116.918 262.134 120.974C259.787 125.031 258.604 130.868 258.584 138.484C258.584 143.575 259.111 147.881 260.165 151.401C261.239 154.901 262.76 157.555 264.729 159.365C266.698 161.155 269.064 162.05 271.828 162.05ZM322.859 158.739V118.409H330.884V158.739H322.859ZM306.722 142.571V134.577H347.051V142.571H306.722Z\" fill=\"url(#paint1_linear_211_519)\"/>\n                    <path d=\"M116.523 209H112.795L121.17 185.727H125.227L133.602 209H129.875L123.295 189.955H123.114L116.523 209ZM117.148 199.886H129.239V202.841H117.148V199.886ZM143.744 191.545V194.273H134.21V191.545H143.744ZM136.767 187.364H140.165V203.875C140.165 204.534 140.263 205.03 140.46 205.364C140.657 205.689 140.911 205.913 141.222 206.034C141.54 206.148 141.884 206.205 142.256 206.205C142.528 206.205 142.767 206.186 142.972 206.148C143.176 206.11 143.335 206.08 143.449 206.057L144.062 208.864C143.866 208.939 143.585 209.015 143.222 209.091C142.858 209.174 142.403 209.22 141.858 209.227C140.964 209.242 140.131 209.083 139.358 208.75C138.585 208.417 137.96 207.902 137.483 207.205C137.006 206.508 136.767 205.633 136.767 204.58V187.364ZM155.651 191.545V194.273H146.116V191.545H155.651ZM148.673 187.364H152.071V203.875C152.071 204.534 152.17 205.03 152.366 205.364C152.563 205.689 152.817 205.913 153.128 206.034C153.446 206.148 153.791 206.205 154.162 206.205C154.435 206.205 154.673 206.186 154.878 206.148C155.082 206.11 155.241 206.08 155.355 206.057L155.969 208.864C155.772 208.939 155.491 209.015 155.128 209.091C154.764 209.174 154.31 209.22 153.764 209.227C152.87 209.242 152.037 209.083 151.264 208.75C150.491 208.417 149.866 207.902 149.389 207.205C148.912 206.508 148.673 205.633 148.673 204.58V187.364ZM166.744 209.352C165.025 209.352 163.544 208.985 162.301 208.25C161.066 207.508 160.112 206.466 159.438 205.125C158.771 203.777 158.438 202.197 158.438 200.386C158.438 198.598 158.771 197.023 159.438 195.659C160.112 194.295 161.051 193.231 162.256 192.466C163.468 191.701 164.884 191.318 166.506 191.318C167.491 191.318 168.445 191.481 169.369 191.807C170.294 192.133 171.123 192.644 171.858 193.341C172.593 194.038 173.172 194.943 173.597 196.057C174.021 197.163 174.233 198.508 174.233 200.091V201.295H160.358V198.75H170.903C170.903 197.856 170.722 197.064 170.358 196.375C169.994 195.678 169.483 195.129 168.824 194.727C168.172 194.326 167.407 194.125 166.528 194.125C165.574 194.125 164.741 194.36 164.028 194.83C163.324 195.292 162.778 195.898 162.392 196.648C162.013 197.39 161.824 198.197 161.824 199.068V201.057C161.824 202.223 162.028 203.216 162.438 204.034C162.854 204.852 163.434 205.477 164.176 205.909C164.919 206.333 165.786 206.545 166.778 206.545C167.422 206.545 168.009 206.455 168.54 206.273C169.07 206.083 169.528 205.803 169.915 205.432C170.301 205.061 170.597 204.602 170.801 204.057L174.017 204.636C173.759 205.583 173.297 206.413 172.631 207.125C171.972 207.83 171.142 208.379 170.142 208.773C169.15 209.159 168.017 209.352 166.744 209.352ZM181.401 198.636V209H178.003V191.545H181.264V194.386H181.48C181.882 193.462 182.51 192.72 183.366 192.159C184.23 191.598 185.317 191.318 186.628 191.318C187.817 191.318 188.859 191.568 189.753 192.068C190.647 192.561 191.34 193.295 191.832 194.273C192.325 195.25 192.571 196.458 192.571 197.898V209H189.173V198.307C189.173 197.042 188.844 196.053 188.185 195.341C187.526 194.621 186.62 194.261 185.469 194.261C184.681 194.261 183.98 194.432 183.366 194.773C182.76 195.114 182.279 195.614 181.923 196.273C181.575 196.924 181.401 197.712 181.401 198.636ZM203.662 209.341C202.253 209.341 200.995 208.981 199.889 208.261C198.791 207.534 197.927 206.5 197.298 205.159C196.677 203.811 196.366 202.193 196.366 200.307C196.366 198.42 196.681 196.807 197.31 195.466C197.946 194.125 198.817 193.098 199.923 192.386C201.029 191.674 202.283 191.318 203.685 191.318C204.768 191.318 205.639 191.5 206.298 191.864C206.965 192.22 207.48 192.636 207.844 193.114C208.215 193.591 208.503 194.011 208.707 194.375H208.912V185.727H212.31V209H208.991V206.284H208.707C208.503 206.655 208.207 207.08 207.821 207.557C207.442 208.034 206.92 208.451 206.253 208.807C205.586 209.163 204.723 209.341 203.662 209.341ZM204.412 206.443C205.389 206.443 206.215 206.186 206.889 205.67C207.571 205.148 208.086 204.424 208.435 203.5C208.791 202.576 208.969 201.5 208.969 200.273C208.969 199.061 208.795 198 208.446 197.091C208.098 196.182 207.586 195.473 206.912 194.966C206.238 194.458 205.404 194.205 204.412 194.205C203.389 194.205 202.537 194.47 201.855 195C201.173 195.53 200.658 196.254 200.31 197.17C199.969 198.087 199.798 199.121 199.798 200.273C199.798 201.439 199.973 202.489 200.321 203.42C200.67 204.352 201.185 205.091 201.866 205.636C202.556 206.174 203.404 206.443 204.412 206.443ZM224.682 209.352C222.962 209.352 221.481 208.985 220.239 208.25C219.004 207.508 218.049 206.466 217.375 205.125C216.708 203.777 216.375 202.197 216.375 200.386C216.375 198.598 216.708 197.023 217.375 195.659C218.049 194.295 218.989 193.231 220.193 192.466C221.405 191.701 222.822 191.318 224.443 191.318C225.428 191.318 226.383 191.481 227.307 191.807C228.231 192.133 229.061 192.644 229.795 193.341C230.53 194.038 231.11 194.943 231.534 196.057C231.958 197.163 232.17 198.508 232.17 200.091V201.295H218.295V198.75H228.841C228.841 197.856 228.659 197.064 228.295 196.375C227.932 195.678 227.42 195.129 226.761 194.727C226.11 194.326 225.345 194.125 224.466 194.125C223.511 194.125 222.678 194.36 221.966 194.83C221.261 195.292 220.716 195.898 220.33 196.648C219.951 197.39 219.761 198.197 219.761 199.068V201.057C219.761 202.223 219.966 203.216 220.375 204.034C220.792 204.852 221.371 205.477 222.114 205.909C222.856 206.333 223.723 206.545 224.716 206.545C225.36 206.545 225.947 206.455 226.477 206.273C227.008 206.083 227.466 205.803 227.852 205.432C228.239 205.061 228.534 204.602 228.739 204.057L231.955 204.636C231.697 205.583 231.235 206.413 230.568 207.125C229.909 207.83 229.08 208.379 228.08 208.773C227.087 209.159 225.955 209.352 224.682 209.352ZM243.463 209.352C241.743 209.352 240.262 208.985 239.02 208.25C237.785 207.508 236.83 206.466 236.156 205.125C235.49 203.777 235.156 202.197 235.156 200.386C235.156 198.598 235.49 197.023 236.156 195.659C236.83 194.295 237.77 193.231 238.974 192.466C240.187 191.701 241.603 191.318 243.224 191.318C244.209 191.318 245.164 191.481 246.088 191.807C247.012 192.133 247.842 192.644 248.577 193.341C249.312 194.038 249.891 194.943 250.315 196.057C250.74 197.163 250.952 198.508 250.952 200.091V201.295H237.077V198.75H247.622C247.622 197.856 247.44 197.064 247.077 196.375C246.713 195.678 246.202 195.129 245.543 194.727C244.891 194.326 244.126 194.125 243.247 194.125C242.293 194.125 241.459 194.36 240.747 194.83C240.043 195.292 239.497 195.898 239.111 196.648C238.732 197.39 238.543 198.197 238.543 199.068V201.057C238.543 202.223 238.747 203.216 239.156 204.034C239.573 204.852 240.152 205.477 240.895 205.909C241.637 206.333 242.505 206.545 243.497 206.545C244.141 206.545 244.728 206.455 245.259 206.273C245.789 206.083 246.247 205.803 246.634 205.432C247.02 205.061 247.315 204.602 247.52 204.057L250.736 204.636C250.478 205.583 250.016 206.413 249.349 207.125C248.69 207.83 247.861 208.379 246.861 208.773C245.868 209.159 244.736 209.352 243.463 209.352ZM267.801 195.807L264.722 196.352C264.593 195.958 264.388 195.583 264.108 195.227C263.835 194.871 263.464 194.58 262.994 194.352C262.525 194.125 261.938 194.011 261.233 194.011C260.271 194.011 259.468 194.227 258.824 194.659C258.18 195.083 257.858 195.633 257.858 196.307C257.858 196.89 258.074 197.36 258.506 197.716C258.938 198.072 259.634 198.364 260.597 198.591L263.369 199.227C264.975 199.598 266.172 200.17 266.96 200.943C267.748 201.716 268.142 202.72 268.142 203.955C268.142 205 267.839 205.932 267.233 206.75C266.634 207.561 265.797 208.197 264.722 208.659C263.653 209.121 262.415 209.352 261.006 209.352C259.051 209.352 257.456 208.936 256.222 208.102C254.987 207.261 254.229 206.068 253.949 204.523L257.233 204.023C257.438 204.879 257.858 205.527 258.494 205.966C259.131 206.398 259.96 206.614 260.983 206.614C262.097 206.614 262.987 206.383 263.653 205.92C264.32 205.451 264.653 204.879 264.653 204.205C264.653 203.659 264.449 203.201 264.04 202.83C263.638 202.458 263.021 202.178 262.188 201.989L259.233 201.341C257.604 200.97 256.4 200.379 255.619 199.568C254.847 198.758 254.46 197.731 254.46 196.489C254.46 195.458 254.748 194.557 255.324 193.784C255.9 193.011 256.695 192.409 257.71 191.977C258.725 191.538 259.888 191.318 261.199 191.318C263.085 191.318 264.57 191.727 265.653 192.545C266.737 193.356 267.453 194.443 267.801 195.807Z\" fill=\"white\"/>\n                    </g>\n                    <defs>\n                    <filter id=\"filter0_bi_211_519\" x=\"-42\" y=\"-42\" width=\"471\" height=\"397\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n                    <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n                    <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"21\"/>\n                    <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_211_519\"/>\n                    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_211_519\" result=\"shape\"/>\n                    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n                    <feOffset dx=\"-5\" dy=\"-5\"/>\n                    <feGaussianBlur stdDeviation=\"125\"/>\n                    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\"/>\n                    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.02 0\"/>\n                    <feBlend mode=\"normal\" in2=\"shape\" result=\"effect2_innerShadow_211_519\"/>\n                    </filter>\n                    <radialGradient id=\"paint0_radial_211_519\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"rotate(38.9654) scale(497.733 338.2)\">\n                    <stop stop-color=\"white\" stop-opacity=\"0.4\"/>\n                    <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\"/>\n                    </radialGradient>\n                    <linearGradient id=\"paint1_linear_211_519\" x1=\"219.5\" y1=\"104\" x2=\"145.792\" y2=\"218.759\" gradientUnits=\"userSpaceOnUse\">\n                    <stop stop-color=\"#690C4C\"/>\n                    <stop offset=\"0.589386\" stop-color=\"#5B1166\"/>\n                    </linearGradient>\n                    </defs>\n                </svg>\n                <svg width=\"387\" height=\"313\" viewBox=\"0 0 387 313\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <g filter=\"url(#filter0_bi_211_511)\">\n                    <rect width=\"387\" height=\"313\" fill=\"url(#paint0_radial_211_511)\" fill-opacity=\"0.24\"/>\n                    <path d=\"M368.994 169.05C368.994 168.79 368.722 168.62 368.488 168.733C364.857 170.487 361.312 172.177 360.406 172.636C354.206 175.785 349.543 178.664 345.969 181.799C342.705 184.655 338.692 186.628 332.853 188.591C332.005 188.879 331.122 189.167 330.028 189.503L327.249 190.376C321.528 192.176 318.591 193.386 316.146 195.224C313.672 197.087 310.501 198.392 306.336 199.467C305.195 199.755 304.002 200.029 302.551 200.331L298.959 201.066C295.865 201.714 294.104 202.203 292.793 202.88C290.992 203.802 288.915 204.445 285.341 205.294C284.402 205.517 283.462 205.735 282.521 205.947C281.328 206.226 280.415 206.446 279.496 206.677C277.271 207.227 275.084 207.876 272.945 208.621C271.365 209.173 269.727 210.507 267.808 212.653C266.547 214.09 265.347 215.563 264.211 217.069C260.847 221.422 259.776 222.704 258.22 224.033C257.375 224.753 256.476 225.429 255.529 226.059C254.166 226.971 249.451 229.678 248.621 230.254C247.757 230.8 247.029 231.476 246.474 232.246C245.748 233.35 245.362 234.44 244.848 236.503C243.578 241.596 242.788 243.612 240.051 247.111C237.67 250.15 236.073 251.854 234.3 253.346C234.025 253.577 233.744 253.807 233.423 254.057L231.229 255.766C230.252 256.534 229.369 257.263 228.386 258.118C225.71 260.42 223.729 263.205 222.6 266.249C221.138 270.151 221.009 273.674 221.571 279.314C221.846 282.108 221.869 282.367 221.869 283.24C221.869 288.285 221.939 291.655 222.238 295.615C222.372 297.471 222.548 299.196 222.773 300.777C222.791 300.905 222.901 301 223.031 301C223.189 301 223.311 300.86 223.29 300.703C222.661 296.149 222.454 290.366 222.454 283.24C222.454 282.348 222.431 282.088 222.15 279.276C221.6 273.693 221.729 270.218 223.162 266.388C224.262 263.414 226.195 260.694 228.807 258.444C229.784 257.599 230.667 256.874 231.633 256.116C232.001 255.828 233.464 254.695 233.826 254.402C234.127 254.166 234.423 253.926 234.715 253.682C236.523 252.166 238.144 250.438 240.542 247.37C243.332 243.809 244.14 241.75 245.421 236.599C245.924 234.579 246.298 233.528 246.989 232.472C247.386 231.872 248.036 231.281 248.995 230.619C249.802 230.067 254.512 227.355 255.898 226.433C256.898 225.761 257.805 225.084 258.647 224.369C260.239 223.001 261.315 221.71 264.708 217.328C265.835 215.83 267.025 214.365 268.276 212.936C270.148 210.858 271.728 209.571 273.173 209.062C275.22 208.342 277.303 207.733 279.666 207.133C281.141 206.76 282.623 206.408 284.112 206.077L285.504 205.755C289.125 204.896 291.243 204.238 293.098 203.283C294.349 202.645 296.069 202.165 299.105 201.531L302.697 200.797C304.16 200.494 305.359 200.221 306.511 199.923C310.747 198.834 313.993 197.495 316.544 195.579C318.913 193.794 321.809 192.603 327.46 190.827L330.239 189.954C331.332 189.608 332.222 189.325 333.076 189.037C338.984 187.045 343.062 185.044 346.39 182.125C349.929 179.029 354.551 176.173 360.717 173.044C361.392 172.702 363.577 171.655 366.169 170.408C367.897 169.576 368.994 167.827 368.994 165.909V149.505C368.994 146.293 364.321 144.989 361.565 146.639C360.096 147.513 358.418 148.569 356.276 149.961C355.058 150.754 353.843 151.551 352.632 152.351L351.889 152.841C350.94 153.466 349.991 154.09 349.04 154.713C344.623 157.593 341.494 159.537 338.738 161.044C336.925 162.033 336.48 162.378 334.023 164.466C330.607 167.38 327.167 168.604 316.971 169.722C310.361 170.442 305.248 172.079 298.983 175.036C298.017 175.487 294.73 177.085 294.905 177.004C293.326 177.762 292.162 178.295 291.021 178.76C287.727 180.104 284.896 180.762 281.831 180.762C271.81 180.762 257.589 186.287 251.628 191.72C244.578 198.152 233.247 205.016 225.157 206.677C220.828 207.565 218.225 210.061 216.943 213.728C216.206 215.84 216.019 217.702 216.019 220.361C216.019 220.755 216.025 220.832 216.16 222.104C216.423 224.59 216.364 226.289 215.709 228.468C214.814 231.444 212.849 234.516 209.514 237.795C201.4 245.787 196.13 260.153 196.13 272.2C196.13 273.348 196.141 274.245 196.165 276.4C196.235 281.584 196.223 283.984 196.036 286.936C195.713 292.227 194.839 296.757 193.183 300.825C193.14 300.931 193.036 301 192.922 301C192.72 301 192.583 300.794 192.658 300.607C194.274 296.599 195.134 292.131 195.451 286.912C195.632 283.97 195.65 281.584 195.58 276.4C195.556 274.25 195.545 273.348 195.545 272.2C195.545 260.047 200.85 245.575 209.07 237.487C212.345 234.262 214.264 231.252 215.142 228.353C215.779 226.241 215.832 224.585 215.575 222.147C215.44 220.851 215.434 220.774 215.434 220.361C215.434 217.664 215.621 215.768 216.382 213.593C217.716 209.778 220.459 207.142 225.016 206.206C232.972 204.574 244.216 197.763 251.195 191.403C257.261 185.869 271.64 180.282 281.831 180.282C284.797 180.282 287.546 179.644 290.758 178.328C291.887 177.868 293.039 177.344 294.607 176.591C294.431 176.677 297.725 175.074 298.69 174.618C305.02 171.637 310.191 169.977 316.889 169.242C326.968 168.138 330.285 166.962 333.602 164.135C336.088 162.018 336.551 161.658 338.411 160.641C341.149 159.148 344.267 157.214 348.677 154.334C349.627 153.713 350.575 153.091 351.521 152.466L352.269 151.977C353.483 151.179 354.698 150.382 355.914 149.587C358.061 148.195 359.745 147.129 361.22 146.251C364.073 144.541 368.994 145.856 368.994 149.182V169.05ZM368.994 113.025C368.994 113.156 368.889 113.262 368.759 113.266C368.468 113.276 368.166 113.297 367.853 113.323C364.267 113.626 359.763 114.979 355.083 116.899C352.954 117.773 350.134 118.181 346.794 118.2C344.044 118.219 341.108 117.974 338.177 117.561C337.182 117.417 336.27 117.269 335.445 117.115C334.76 116.992 334.066 116.9 333.368 116.841C330.126 116.619 326.875 116.478 323.622 116.419C317.527 116.342 313.56 116.774 313.11 117.729C312.888 118.195 313.461 118.953 314.883 120.067C315.473 120.533 316.181 121.041 317.246 121.771C318.179 122.416 319.113 123.059 320.048 123.701C320.861 124.277 321.862 124.622 323.265 124.901C323.675 124.977 323.769 124.997 324.81 125.16C326.875 125.496 327.752 125.76 328.408 126.422C329.232 127.267 329.227 128.601 328.32 130.684C326.892 133.963 324.974 135.508 322.359 135.643C320.235 135.753 317.913 135.024 313.865 133.214C311.215 132.028 309.875 129.71 308.998 125.889C308.898 125.472 308.81 125.035 308.705 124.517L308.454 123.192C307.839 120.033 307.342 118.776 306.271 118.339C305.798 118.147 305.341 117.984 304.891 117.859C303.563 117.489 302.2 117.369 300.153 117.417C298.813 117.451 291.553 117.897 292.097 117.864C280.076 118.521 275.249 120.288 270.4 125.059C269.544 125.912 268.715 126.782 267.914 127.67L266.568 129.153L265.1 130.747C262.701 133.32 260.97 134.817 259.022 136.084C258.642 136.334 258.244 136.584 257.776 136.862L255.371 138.273C254.342 138.886 253.335 139.525 252.353 140.188C249.691 141.983 246.655 144.316 242.847 147.571C238.021 151.689 235.956 154.07 236.002 155.226C236.043 156.018 236.962 156.239 239.975 156.369C240.916 156.412 241.232 156.426 241.718 156.465C243.444 156.58 244.695 156.815 245.702 157.271C250.077 159.263 252.505 160.756 253.862 162.83C255.793 165.781 254.33 169.012 248.662 172.554C243.818 175.578 242.168 177.532 242.045 179.735C242.01 180.296 242.045 180.661 242.198 181.861C242.601 184.967 242.344 186.973 240.56 190.223C239.893 191.489 239.078 192.7 238.126 193.837C236.476 195.743 234.926 196.592 231.925 197.528C231.674 197.605 229.971 198.119 229.427 198.291C228.374 198.618 227.45 198.944 226.496 199.319C224.051 200.278 221.582 201.526 218.833 203.274C213.896 206.398 211.094 210.262 209.485 215.302C208.841 217.318 208.578 218.571 207.847 222.603C207.11 226.731 206.577 228.67 205.46 230.547C204.232 232.601 198.481 243.31 197.873 244.409C196.682 246.574 195.439 248.72 194.146 250.846C191.766 254.738 189.695 257.599 187.869 259.394C184.722 262.495 182.616 266.292 179.814 273.036C179.442 273.931 179.073 274.827 178.709 275.724C177.656 278.292 176.977 279.852 176.216 281.412C172.63 288.765 161.34 294.04 149.038 294.04C142.486 294.04 136.999 292.725 130.891 289.936C127.615 288.434 128.23 288.775 117.87 282.957C109.487 278.253 107.515 277.807 105.895 279.645C105.678 279.885 104.836 280.96 104.824 280.975C103.947 281.976 102.981 282.922 101.934 283.807C101.507 284.186 98.7053 286.624 97.857 287.383C96.4647 288.631 95.3416 289.691 94.3588 290.709C93.2198 291.849 92.2242 293.081 91.387 294.386C90.6324 295.619 90.2755 296.906 89.831 299.474C89.7561 299.903 89.6805 300.332 89.6043 300.762C89.5798 300.9 89.4599 301 89.3199 301C89.1407 301 89.0047 300.839 89.0352 300.662L89.2518 299.406C89.7023 296.79 90.0708 295.47 90.8605 294.175C91.717 292.839 92.7362 291.578 93.9025 290.411C94.897 289.384 96.026 288.309 97.43 287.061C98.2782 286.298 101.08 283.855 101.502 283.48C102.494 282.641 103.412 281.745 104.25 280.8C104.305 280.737 104.358 280.674 104.41 280.608C104.627 280.336 105.235 279.574 105.421 279.362C107.322 277.202 109.563 277.711 118.197 282.564C128.534 288.362 127.92 288.026 131.178 289.514C137.203 292.264 142.585 293.56 149.038 293.56C161.118 293.56 172.186 288.391 175.678 281.229C176.571 279.361 177.398 277.472 178.159 275.565C178.526 274.669 178.892 273.773 179.258 272.877C182.084 266.081 184.213 262.25 187.425 259.087C189.209 257.33 191.262 254.494 193.626 250.634C194.778 248.748 195.989 246.646 197.34 244.212C197.943 243.118 203.705 232.4 204.934 230.336C206.016 228.516 206.542 226.611 207.274 222.536C207.999 218.485 208.268 217.222 208.917 215.182C210.555 210.046 213.428 206.091 218.47 202.894C220.879 201.334 223.486 199.99 226.245 198.887C227.216 198.503 228.158 198.176 229.217 197.84C229.766 197.667 231.475 197.154 231.72 197.077C234.616 196.175 236.073 195.373 237.652 193.559C238.442 192.647 239.22 191.495 240.027 190.021C241.765 186.863 242.01 184.938 241.618 181.909C241.49 181.181 241.437 180.446 241.46 179.711C241.589 177.34 243.338 175.276 248.305 172.175C253.763 168.762 255.126 165.772 253.347 163.055C252.06 161.092 249.691 159.638 245.421 157.694C244.502 157.271 243.315 157.055 241.665 156.94C241.197 156.906 240.881 156.892 239.939 156.849C236.564 156.705 235.476 156.441 235.423 155.246C235.365 153.897 237.471 151.468 242.426 147.235C246.246 143.971 249.299 141.623 251.979 139.819C253.026 139.113 253.979 138.513 255.021 137.884L257.431 136.473C257.893 136.195 258.285 135.955 258.659 135.71C260.566 134.462 262.263 132.998 264.632 130.459C265.123 129.93 265.61 129.399 266.094 128.865L267.446 127.382C268.499 126.235 269.224 125.462 269.955 124.752C274.91 119.87 279.888 118.051 291.758 117.408C291.5 117.417 298.778 116.976 300.135 116.937C302.253 116.889 303.674 117.014 305.084 117.408C305.552 117.537 306.032 117.705 306.529 117.907C307.857 118.454 308.383 119.765 309.027 123.115L309.284 124.44C309.384 124.953 309.477 125.385 309.577 125.798C310.419 129.489 311.694 131.697 314.14 132.792C318.094 134.558 320.34 135.264 322.324 135.163C324.664 135.043 326.413 133.641 327.764 130.521C328.612 128.582 328.618 127.406 327.951 126.72C327.425 126.182 326.617 125.942 324.693 125.63C324.17 125.553 323.649 125.465 323.131 125.366C321.645 125.078 320.563 124.694 319.662 124.065C318.74 123.414 317.807 122.773 316.866 122.141C316.048 121.586 315.252 121.01 314.479 120.413C312.882 119.165 312.221 118.286 312.56 117.557C313.157 116.289 317.135 115.857 323.634 115.939C326.901 115.983 330.166 116.123 333.421 116.361C335.035 116.549 335.293 116.597 335.574 116.649C336.393 116.793 337.299 116.947 338.276 117.086C341.087 117.503 343.937 117.715 346.794 117.72C350.046 117.701 352.784 117.307 354.826 116.472C359.564 114.528 364.121 113.16 367.795 112.843C368.118 112.817 368.441 112.799 368.75 112.788C368.884 112.783 368.994 112.891 368.994 113.025ZM368.996 64.8103C368.995 64.8103 368.994 64.8112 368.994 64.8124V65.3649C368.994 65.4729 368.962 65.5788 368.903 65.669C363.891 73.3119 358.869 79.7325 355.159 82.7716C353.293 84.3076 350.702 85.1236 347.238 85.4404C344.635 85.6708 342.395 85.6324 336.018 85.3444C330.221 85.0804 327.056 85.1332 324.014 85.7188C321.132 86.2724 318.196 86.6114 315.239 86.7316L313.923 86.7988C306.617 87.1588 302.592 87.6532 294.782 89.5539C292.15 90.1923 289.359 90.7491 286.417 91.2243C280.119 92.2069 273.748 92.8435 267.346 93.1299C262.924 93.3459 259.619 93.4035 255.506 93.4035C252.347 93.4035 248.545 94.1762 244.976 95.8898C240.121 98.2274 236.166 102.067 233.551 107.65C232.814 109.273 231.922 110.846 230.884 112.354C228.778 115.329 226.836 116.669 223.057 118.2L220.699 119.141C217.473 120.426 214.487 122.083 211.831 124.061C207.034 127.579 203.805 132.043 198.645 141.148L197.428 143.303C193.158 150.839 190.701 154.487 187.279 157.641C182.774 161.798 175.433 164.562 163.698 167.279C161.141 167.869 152.559 169.717 152.442 169.741C148.394 170.639 145.61 171.345 143.299 172.103C137.127 174.129 132.354 177.152 122.017 184.832L121.023 185.572C116.003 189.296 113.178 191.283 110.019 193.194C107.708 194.586 105.339 195.915 102.432 197.471C101.227 198.114 96.4062 200.638 95.2187 201.282C88.4796 204.882 84.3788 207.541 80.8162 210.92C79.4103 212.242 78.1496 213.664 77.0489 215.168C74.6329 218.485 73.381 221.48 71.667 227.22L70.7661 230.225C70.4151 231.401 70.0934 232.404 69.7599 233.384C68.0225 238.519 65.7235 241.716 61.1138 246.3L58.7153 248.681C57.8749 249.514 57.0576 250.362 56.2642 251.225C55.4127 252.141 54.7343 253.157 54.2518 254.239C53.5733 255.79 53.3627 257.071 53.1579 259.97C52.8186 264.794 52.3272 267.189 50.4494 270.852C49.531 272.637 47.1384 277.581 46.6996 278.436C46.0848 279.651 45.3876 280.836 44.6112 281.988C42.9264 284.455 40.6859 286.845 36.9361 290.123C33.4496 293.176 31.7473 295.355 30.7294 297.803C30.419 298.564 30.1496 299.336 29.9221 300.117L29.7152 300.796C29.6783 300.917 29.5664 301 29.4395 301C29.246 301 29.1074 300.813 29.1639 300.628L29.3547 300.002C29.6589 298.998 29.8929 298.326 30.1736 297.65C31.2266 295.13 32.9699 292.898 36.5149 289.797C40.2296 286.543 42.4409 284.181 44.1023 281.748C44.8675 280.614 45.555 279.445 46.1614 278.248C46.6002 277.404 48.9928 272.46 49.9054 270.665C51.7598 267.065 52.2395 264.713 52.5729 259.946C52.7777 256.999 52.9941 255.684 53.702 254.076C54.2041 252.949 54.9101 251.891 55.7962 250.937C56.5392 250.121 57.3172 249.319 58.2649 248.374L60.6692 245.998C65.2321 241.457 67.4902 238.318 69.2042 233.259C69.5318 232.28 69.8477 231.281 70.2045 230.11L71.0996 227.105C72.8311 221.326 74.1006 218.293 76.5517 214.918C77.6281 213.44 78.8916 212.014 80.3775 210.603C83.9869 207.186 88.1228 204.507 94.9028 200.878C96.1021 200.24 100.917 197.711 102.116 197.067C105.017 195.522 107.381 194.197 109.674 192.81C112.815 190.914 115.635 188.931 120.637 185.216L121.631 184.477C132.02 176.754 136.829 173.711 143.083 171.661C145.423 170.893 148.231 170.178 152.296 169.281C152.419 169.252 160.995 167.409 163.54 166.818C175.181 164.125 182.447 161.39 186.852 157.324C190.221 154.214 192.661 150.595 196.902 143.097L198.124 140.937C203.313 131.784 206.572 127.276 211.445 123.705C214.139 121.699 217.169 120.018 220.442 118.713L222.805 117.768C226.491 116.28 228.345 114.998 230.387 112.118C231.408 110.63 232.284 109.078 233.007 107.477C235.675 101.794 239.717 97.8674 244.69 95.477C248.346 93.7203 252.254 92.9235 255.512 92.9235C259.613 92.9235 262.912 92.8659 267.311 92.6499C273.687 92.3637 280.033 91.7288 286.306 90.7491C289.231 90.2787 292.009 89.7267 294.624 89.0931C302.481 87.1828 306.546 86.6836 313.894 86.3188L315.204 86.2516C318.574 86.074 320.937 85.8196 323.891 85.2484C326.998 84.6484 330.203 84.6004 337.112 84.9124C342.401 85.1524 344.623 85.1908 347.18 84.9604C350.52 84.6628 352.995 83.8756 354.755 82.4356C358.522 79.3401 363.704 72.66 368.998 64.8135C368.999 64.8122 368.998 64.8103 368.996 64.8103ZM368.994 278.87C368.994 279.251 368.519 279.321 368.427 278.952C367.945 277.024 367.528 274.585 367.046 271.188L366.906 270.209L366.771 269.234C365.707 261.698 364.975 258.684 363.525 257.489C362.085 256.308 361.746 255.074 362.05 253.342C362.109 253.054 362.156 252.814 362.279 252.31C362.682 250.61 362.729 249.89 362.325 249.026C361.793 247.884 360.389 246.91 357.768 246.022C354.796 245.019 353.954 243.699 354.908 241.971C355.294 241.275 355.955 240.521 356.967 239.566C357.575 238.99 360.172 236.705 359.939 236.911C363.536 233.696 365.192 231.468 365.192 229.001C365.151 227.792 365.477 226.594 366.141 225.514C366.731 224.553 367.572 223.713 368.602 223.052C368.774 222.941 368.994 223.068 368.994 223.273C368.994 223.364 368.947 223.448 368.871 223.498C367.893 224.143 367.106 224.962 366.569 225.893C366.01 226.863 365.738 227.928 365.777 229.001C365.777 231.627 364.063 233.94 360.371 237.238C360.594 237.036 358.008 239.316 357.406 239.878C356.429 240.804 355.797 241.524 355.44 242.167C354.639 243.627 355.305 244.673 357.991 245.575C360.746 246.511 362.273 247.572 362.869 248.854C363.326 249.833 363.279 250.615 362.852 252.406C362.735 252.9 362.676 253.13 362.629 253.409C362.349 255.007 362.647 256.092 363.934 257.153C365.537 258.468 366.262 261.453 367.35 269.181L367.491 270.156L367.625 271.135C368.102 274.476 368.515 276.89 368.984 278.789C368.991 278.816 368.994 278.843 368.994 278.87ZM368.994 249.967C368.994 250.259 368.605 250.358 368.466 250.102C367.578 248.472 366.347 246.208 366.098 245.71C365.502 244.495 365.367 243.886 365.566 243.223C365.683 242.82 366.765 240.977 366.923 240.665C367.509 239.493 368.014 238.295 368.437 237.078C368.534 236.798 368.994 236.867 368.994 237.163C368.994 237.19 368.99 237.218 368.981 237.244C368.568 238.472 368.06 239.677 367.461 240.852C367.28 241.212 366.239 242.993 366.134 243.339C365.97 243.876 366.087 244.404 366.642 245.532C366.879 246.015 368.074 248.211 368.96 249.833C368.983 249.874 368.994 249.92 368.994 249.967ZM368.994 210.11C368.994 210.185 368.961 210.257 368.902 210.304C367.954 211.063 366.802 211.639 365.25 212.211C365.104 212.259 357.078 214.837 353.316 216.257C347.847 218.331 343.547 219.089 339.844 218.777C336.872 218.523 334.568 217.697 331.204 215.936L329.332 214.942C328.298 214.384 327.236 213.86 326.149 213.373C323.78 212.326 324.248 210.589 327.009 208.347C329.18 206.581 332.625 204.541 337.966 201.723L340.575 200.37C351.076 194.931 351.234 194.85 353.603 193.295C360.03 189.076 364.889 186.679 368.72 186.086C368.865 186.064 368.994 186.178 368.994 186.325C368.994 186.446 368.906 186.549 368.786 186.568C365.089 187.152 360.322 189.495 353.966 193.669C351.567 195.243 351.427 195.32 340.885 200.773C340.015 201.223 339.148 201.676 338.282 202.131C332.976 204.93 329.554 206.955 327.419 208.688C324.898 210.742 324.523 212.11 326.424 212.95C327.419 213.387 328.349 213.853 329.642 214.534L331.514 215.533C334.813 217.256 337.042 218.053 339.903 218.297C343.489 218.605 347.695 217.865 353.077 215.825C356.856 214.395 364.882 211.817 365.01 211.774C366.536 211.21 367.639 210.657 368.554 209.911C368.725 209.771 368.994 209.889 368.994 210.11ZM368.746 190.381C368.882 190.375 368.994 190.484 368.994 190.619C368.994 190.749 368.891 190.855 368.762 190.861C365.025 191.033 361.82 192.412 357.464 195.21L354.755 196.976C353.93 197.515 353.071 198.018 352.182 198.483C351.702 198.733 348.958 200.082 348.543 200.288C346.607 201.248 344.945 202.112 343.354 202.976C341.712 203.864 340.119 204.812 338.581 205.818C335.884 207.603 334.252 209.13 333.918 210.306C333.55 211.587 334.784 212.48 338.042 212.926C344.302 213.781 350.28 212.902 355.855 210.694C359.572 209.224 362.955 207.243 365.859 204.838C366.845 203.944 367.73 202.978 368.504 201.954C368.659 201.75 368.994 201.857 368.994 202.113C368.994 202.168 368.976 202.223 368.943 202.267C368.172 203.303 367.28 204.275 366.28 205.17C363.327 207.616 359.887 209.631 356.107 211.126C350.432 213.373 344.331 214.27 337.943 213.397C334.398 212.917 332.883 211.817 333.351 210.195C333.725 208.88 335.416 207.291 338.212 205.443C339.587 204.531 341.195 203.581 343.032 202.578C344.629 201.704 346.297 200.845 348.239 199.88C348.66 199.669 351.398 198.325 351.877 198.08C352.614 197.696 353.398 197.235 354.393 196.597C354.861 196.299 356.674 195.109 357.101 194.835C361.552 191.968 364.854 190.555 368.746 190.381ZM368.78 116.149C368.902 116.155 368.994 116.258 368.994 116.38C368.994 116.521 368.872 116.631 368.73 116.623C367.72 116.57 366.308 116.807 364.42 117.389C358.564 119.189 356.347 119.822 353.217 120.633C352.176 120.902 351.678 121.032 350.953 121.229C350.087 121.469 349.104 121.593 347.01 121.785C346.495 121.833 345.981 121.881 345.466 121.929C340.903 122.381 338.867 123.115 338.867 124.843C338.867 126.979 340.558 131.169 343.524 137.232C344.08 138.42 344.536 139.639 344.887 140.879C345.055 141.432 345.219 141.986 345.378 142.54C346.466 146.198 347.233 147.681 348.631 148.142C349.923 148.564 351.38 148.43 353 147.796C355.036 146.985 357.224 145.425 359.552 143.251C360.442 142.435 361.29 141.575 362.238 140.577L364.086 138.609C365.406 137.259 367.121 133.814 368.438 130.404C368.549 130.116 368.994 130.195 368.994 130.503C368.994 130.537 368.988 130.571 368.976 130.603C367.638 134.043 365.905 137.521 364.542 138.912C364.285 139.175 362.98 140.572 362.7 140.875C361.746 141.883 360.886 142.747 359.997 143.572C357.61 145.785 355.376 147.383 353.252 148.228C351.503 148.919 349.877 149.068 348.408 148.583C346.747 148.041 345.951 146.5 344.811 142.655C344.646 142.102 344.482 141.548 344.319 140.995C343.851 139.459 343.459 138.379 342.985 137.414C339.979 131.27 338.282 127.07 338.282 124.843C338.282 122.745 340.529 121.934 345.396 121.449C345.912 121.398 346.429 121.35 346.946 121.305C348.993 121.118 349.959 120.998 350.766 120.777C351.503 120.576 351.994 120.441 353.036 120.173C356.159 119.366 358.365 118.733 364.209 116.937C366.148 116.342 367.654 116.086 368.78 116.149ZM18 153.167C18 153.164 18.0013 153.161 18.0036 153.159C23.9278 147.731 28.6065 142.025 31.4957 136.176C33.4262 132.268 35.0583 128.438 37.8195 121.512L38.7496 119.189C42.5696 109.618 44.6639 104.875 47.3899 100.2C50.9408 94.0947 54.7315 90.0339 59.2477 87.9411C63.1437 86.1364 65.2146 84.1684 66.3962 81.6293C66.8527 80.5998 67.2164 79.5441 67.4843 78.4709C68.2039 75.9749 68.6836 74.8278 69.7833 73.4982C71.2166 71.7606 73.4512 70.3638 76.8617 69.1975C86.0929 66.0391 86.6486 65.8183 87.4208 64.8727C87.801 64.4023 87.9063 63.8408 87.8537 62.708C87.8361 62.3576 87.7191 60.8744 87.7133 60.788C87.6481 59.901 87.6149 59.0126 87.6138 58.1241C87.6138 53.3049 87.7191 52.6665 89.0003 51.8122C89.3045 51.6106 89.6613 51.4282 90.2112 51.1882C90.3691 51.121 91.4865 50.6506 91.8726 50.4778C93.739 49.6559 95.523 48.7138 97.2077 47.6602C98.4128 46.921 98.7521 46.633 101.893 43.8539C104.105 41.8907 105.526 40.8011 107.135 39.9564C109.264 38.838 111.347 38.4588 113.511 38.9436C116.085 39.5196 119.835 39.9036 124.497 40.1243C128.534 40.3163 132.044 40.3643 137.338 40.3643C140.187 40.3643 142.585 40.5899 146.347 41.1179C150.892 41.7563 151.787 41.8571 153.589 41.8571C155.958 41.8571 157.936 41.4347 159.837 40.4411C162.797 38.8956 164.581 38.1996 166.389 37.9452C168.506 37.638 169.179 37.7244 176.07 38.934C186.167 40.7099 194.117 39.5868 200.09 34.278C203.073 31.6237 203.296 30.0061 202.126 27.1742C201.64 26.0126 201.523 25.6862 201.441 25.1102C201.272 23.9006 201.734 22.8494 203.027 21.7839C204.521 20.5578 205.7 17.6058 206.569 13.4738C206.626 13.2016 206.865 13.0048 207.144 13.0048C207.511 13.0048 207.787 13.3411 207.712 13.7007C206.808 17.9972 205.557 21.0706 203.857 22.4606C202.81 23.3246 202.477 24.0878 202.605 24.995C202.67 25.475 202.781 25.7774 203.231 26.867C204.53 30.0013 204.261 31.9837 200.95 34.9308C194.65 40.5275 186.284 41.7131 175.825 39.8748C169.144 38.6988 168.483 38.6172 166.593 38.886C164.973 39.1164 163.306 39.7692 160.469 41.2475C158.416 42.3199 156.021 42.8664 153.589 42.8171C151.688 42.8171 150.775 42.7115 146.142 42.0635C142.451 41.5451 140.105 41.3243 137.338 41.3243C132.015 41.3243 128.499 41.2763 124.427 41.0843C119.695 40.8587 115.875 40.4651 113.195 39.8652C109.908 39.1308 107.246 40.5275 102.753 44.5019C99.5359 47.353 99.1966 47.6362 97.9097 48.4282C96.1768 49.5106 94.3419 50.4784 92.4225 51.3226C92.0247 51.5002 90.9132 51.9706 90.7611 52.0378C90.2697 52.2489 89.9714 52.4025 89.7374 52.5561C88.8774 53.1321 88.7838 53.7081 88.7838 58.1241C88.7838 59.012 88.8189 59.8232 88.8833 60.7352C88.8833 60.8168 89.0003 62.3096 89.0237 62.6696C89.0822 63.9896 88.9476 64.7287 88.3919 65.4103C87.4149 66.6103 87.0639 66.7543 77.3063 70.0854C74.1006 71.1846 72.0473 72.4662 70.7544 74.0406C69.7541 75.2454 69.3095 76.3109 68.6251 78.6965C68.1395 80.3765 67.9172 81.0581 67.4902 81.9749C66.2149 84.7252 63.951 86.866 59.8268 88.7811C55.5564 90.7587 51.9002 94.6754 48.4429 100.618C45.7519 105.245 43.6635 109.958 39.8611 119.491L38.9368 121.814C36.1581 128.76 34.526 132.604 32.5838 136.545C29.6664 142.443 24.9799 148.183 19.0565 153.635C18.6508 154.009 18 153.719 18 153.167ZM18 190.602C18 190.469 18.1071 190.361 18.24 190.36L18.585 190.357C22.2821 190.357 22.9549 192.853 21.2759 196.77C20.528 198.423 19.5978 200.016 18.4973 201.53C18.3386 201.748 18 201.634 18 201.364C18 201.304 18.0191 201.246 18.0543 201.197C19.1124 199.737 20.0048 198.201 20.7202 196.607C22.2938 192.959 21.7205 190.837 18.585 190.837C18.2666 190.837 18 190.58 18 190.262V171.65C18 169.717 19.1167 167.961 20.8518 167.109C22.5907 166.254 24.3137 165.378 26.0202 164.481C34.0112 159.94 43.4471 146.433 43.4471 138.758C43.4471 130.07 56.0653 103.891 62.3013 100.637C69.7365 96.7538 81.1614 87.2164 83.244 82.5172C84.373 79.9733 86.4614 79.0277 91.6795 78.0197C95.2772 77.3285 96.7338 76.8581 97.9214 75.7206C98.7989 74.8854 99.5125 73.4214 100.454 70.7766C100.589 70.4022 101.566 67.5703 101.876 66.7159C103.994 60.9176 106.146 57.8409 109.756 56.9289C111.218 56.5641 111.528 56.4585 115.454 55.1529C119.835 53.6985 122.456 53.0265 125.469 52.7913C129.417 52.4793 133.149 53.1513 136.905 55.0329C140.082 56.6265 144.036 57.2985 148.704 57.2217C152.232 57.1641 155.841 56.7081 160.305 55.8777C161.369 55.6857 164.622 55.0425 165.137 54.9465C166.71 54.6585 167.676 54.5193 168.342 54.5193C171.25 54.5193 173.566 54.4953 176.649 54.3897C181.271 54.2361 185.752 53.9481 189.958 53.4873C194.93 52.9401 199.259 52.1769 202.757 51.1738C213.814 47.9962 221.852 42.3899 222.454 37.9308C222.624 36.702 222.688 36.51 224.086 32.5981C225.449 28.7821 225.964 26.3918 225.677 23.8478C225.56 22.7726 225.274 21.7455 224.812 20.7663C223.961 18.9424 223.314 16.415 222.849 13.2977C222.825 13.1407 222.947 13 223.106 13C223.235 13 223.345 13.0954 223.365 13.2235C223.814 16.2267 224.459 18.6729 225.362 20.5935C225.841 21.6246 226.144 22.7053 226.262 23.8046C226.555 26.4254 226.028 28.8637 224.642 32.7325C223.261 36.6012 223.197 36.798 223.039 37.9884C222.401 42.6683 214.206 48.3946 202.956 51.625C199.411 52.6425 195.047 53.4105 190.034 53.9625C185.81 54.4233 181.306 54.7161 176.679 54.8697C173.578 54.9705 171.256 54.9993 168.342 54.9993C167.734 54.9993 166.798 55.1289 165.265 55.4169C164.757 55.5129 161.504 56.1513 160.433 56.3481C155.941 57.1785 152.29 57.6441 148.716 57.7017C143.948 57.7833 139.883 57.0921 136.601 55.4457C132.956 53.6169 129.347 52.9689 125.527 53.2665C122.579 53.4969 120.005 54.1593 115.676 55.5993C111.727 56.9145 111.411 57.0153 109.931 57.3897C106.579 58.2344 104.503 61.2104 102.438 66.8551C102.127 67.7047 101.151 70.5318 101.016 70.9158C100.045 73.6278 99.3137 75.1302 98.366 76.0374C97.0673 77.2757 95.5346 77.7749 91.3402 78.5813C86.7773 79.4597 84.8293 80.3381 83.7939 82.6804C81.6586 87.4996 70.1519 97.109 62.6172 101.04C56.5743 104.203 44.0321 130.219 44.0321 138.763C44.0321 146.606 34.4967 160.257 26.3537 164.879C25.161 165.556 21.8656 167.174 18.5012 168.803C18.2694 168.915 18 168.746 18 168.489V190.611V190.602ZM18 107.227C18 106.904 18.1936 106.614 18.4886 106.482C22.6542 104.628 26.6719 101.626 30.7762 97.5842C32.9992 95.3954 39.0889 88.5699 40.0132 87.7204C41.0662 86.7412 42.3882 85.8196 44.3538 84.6244C44.9856 84.2404 47.232 82.9108 47.5654 82.7092C53.0409 79.4213 55.7553 76.9685 56.9135 73.4166C57.3815 71.9862 57.8144 70.1622 58.3526 67.5127C58.4872 66.8215 59.5226 61.532 59.8502 59.9336C61.5291 51.8842 63.2022 47.0746 65.7411 44.5259C72.0882 38.1708 77.3765 31.3069 77.3765 28.8445C77.3765 27.6254 77.5754 27.2366 80.9157 21.3039C81.3135 20.5887 81.6469 19.9887 81.9511 19.4175C83.3335 16.8087 84.141 14.826 84.3438 13.2708C84.3634 13.1205 84.4893 13.0048 84.6409 13.0048C84.8118 13.0048 84.9467 13.1506 84.9249 13.3201C84.7173 14.9388 83.8938 16.9574 82.4835 19.6095C82.1793 20.1855 81.8458 20.7855 81.4422 21.5055C78.2013 27.2702 77.9615 27.7406 77.9615 28.8445C77.9615 31.4701 72.6439 38.3676 66.1973 44.8331C63.7404 47.2906 62.0849 52.0617 60.4293 60.02C60.0959 61.6184 59.0663 66.8983 58.9259 67.5943C58.3877 70.2631 57.949 72.0966 57.4751 73.5462C56.2759 77.2325 53.4855 79.7525 47.9106 83.1028L44.699 85.0132C42.7685 86.1892 41.4757 87.0964 40.4461 88.042C39.551 88.8723 33.4613 95.6882 31.2266 97.8962C26.8304 102.223 22.5276 105.38 18.0089 107.233C18.0046 107.235 18 107.232 18 107.227ZM18 280.903C18 280.603 18.4827 280.536 18.5795 280.82C18.6931 281.153 18.8116 281.47 18.936 281.776C20.106 284.671 21.6269 285.741 23.7271 284.939C34.8243 280.692 43.4471 273.352 43.4471 265.961C43.4471 258.185 47.1735 250.606 53.4504 243.737C54.5502 242.537 55.5915 241.625 56.6854 240.857C57.1124 240.559 57.5336 240.291 58.0309 239.993L59.2009 239.307C61.3536 238.02 62.313 236.772 63.3426 233.264C63.7813 231.79 64.1499 230.854 65.7996 226.899L66.1681 225.996C68.0635 221.398 68.8357 218.811 68.6075 217.045C68.3267 214.918 66.3845 214.534 61.9971 216.257C60.2585 216.938 58.471 217.531 56.6445 218.033C48.5189 220.275 40.8731 220.817 31.6888 220.635L30.548 220.611L29.6998 220.601C26.6806 220.602 23.6904 221.085 20.8957 222.022C20.0105 222.329 19.1709 222.716 18.3925 223.177C18.221 223.278 18 223.157 18 222.958C18 222.869 18.0469 222.786 18.124 222.742C18.9175 222.282 19.7681 221.893 20.6617 221.581C23.798 220.526 27.1723 220.032 30.5597 220.131L31.7005 220.155C40.8263 220.337 48.4136 219.795 56.4573 217.577C58.2617 217.082 60.0278 216.497 61.7456 215.825C66.4489 213.982 68.8591 214.457 69.1866 216.992C69.4323 218.859 68.6485 221.475 66.7238 226.15L66.3494 227.052C64.7115 230.988 64.3429 231.924 63.9159 233.379C62.8512 236.988 61.8158 238.342 59.546 239.695L58.376 240.382C57.8846 240.67 57.4751 240.934 57.0598 241.222C55.8881 242.057 54.8344 242.997 53.9184 244.025C47.7117 250.817 44.0321 258.3 44.0321 265.961C44.0321 273.583 35.2572 281.056 23.9728 285.376C21.4573 286.341 19.6497 285.059 18.3802 281.93C18.2463 281.605 18.1239 281.266 18.0016 280.912C18.0005 280.909 18 280.906 18 280.903ZM18 251.066C18 250.756 18.4138 250.651 18.5621 250.923L18.8541 251.46C20.0826 253.764 20.8782 256.418 21.3461 259.509C21.7322 262.053 21.8375 263.973 21.9545 268.389C22.0715 272.863 22.247 274.509 22.9081 275.613C23.6569 276.861 25.055 276.741 27.7576 274.893C37.7844 268.029 40.5221 263.901 40.5221 256.356C40.5221 252.914 41.1656 250.409 42.6866 247.87C44.0145 245.628 44.8218 244.692 50.5255 238.452C51.8619 236.947 53.3491 235.536 54.9714 234.233C55.63 233.714 56.3212 233.224 57.0423 232.764C57.2645 232.62 57.4166 232.515 57.5629 232.409C58.2027 231.97 58.7262 231.427 59.1014 230.816C59.6443 229.899 60.0867 228.945 60.4235 227.964L60.6399 227.388L60.8505 226.836C61.0202 226.4 61.1313 226.092 61.2366 225.8C61.4999 225.065 61.6695 224.513 61.769 224.043C61.9913 222.987 61.8392 222.368 61.2717 222.051C59.897 221.278 55.843 221.936 47.349 224.422C41.7682 226.054 37.9189 226.424 31.057 226.467C26.5467 226.496 24.9555 226.659 23.3059 227.484C21.2701 228.502 19.8895 230.556 18.8716 234.329C18.7676 234.705 18.6643 235.068 18.5612 235.418C18.4624 235.754 18 235.681 18 235.332C18 235.303 18.0039 235.275 18.0115 235.248L18.2983 234.224C19.3513 230.336 20.8021 228.176 23.0017 227.072C24.78 226.184 26.4297 226.016 31.057 225.987C37.8487 225.944 41.6453 225.584 47.1501 223.971C55.884 221.417 59.9906 220.75 61.5993 221.653C62.4066 222.104 62.5997 222.901 62.3481 224.124C62.2076 224.737 62.024 225.343 61.7982 225.939L61.4121 226.98L61.2015 227.532L60.9851 228.108C60.6379 229.116 60.1817 230.096 59.6221 231.036C59.1541 231.771 58.6802 232.246 57.949 232.769L57.4108 233.139L56.8141 233.537C56.2876 233.892 55.8489 234.209 55.3692 234.584C53.7725 235.867 52.3089 237.257 50.9935 238.74C45.319 244.947 44.5176 245.878 43.2072 248.081C41.7331 250.553 41.1071 252.986 41.1071 256.356C41.1071 264.055 38.2875 268.313 28.132 275.258C25.1837 277.274 23.3468 277.442 22.3816 275.824C21.6679 274.624 21.4924 272.973 21.3695 268.399C21.2525 264.002 21.1472 262.087 20.767 259.567C20.3049 256.524 19.5268 253.903 18.3159 251.652L18.0023 251.075C18.0008 251.073 18 251.07 18 251.066ZM240.001 13.3865C239.937 13.1996 240.075 13.0048 240.273 13.0048C240.396 13.0048 240.505 13.0823 240.545 13.198L241.355 15.5296C243.274 21.0783 244.216 24.8078 244.432 28.8733C244.719 34.158 243.543 39.078 240.554 43.8347C235.991 51.097 228.579 56.5545 219.365 60.2024C212.123 63.0632 204.085 64.6039 198.177 64.6039C194.176 64.6039 188.092 65.2663 176.374 66.8215L175.046 66.9991C160.714 68.9143 156.532 69.3991 153.133 69.3991C151.091 69.3991 150.746 69.3607 141.702 68.0551C139.619 67.7479 138.005 67.5271 136.437 67.3351C124.603 65.9143 118.302 66.7591 117.741 71.1078C117.682 71.5158 117.636 71.9334 117.571 72.4566L117.413 73.767C116.77 78.9989 116.232 81.3173 114.892 83.3476C113.195 85.9108 110.347 87.1636 105.749 87.1636C99.7816 87.1636 98.1905 87.4516 96.6812 88.6851C96.9854 88.4403 93.7387 91.4931 91.9077 92.8611C90.2989 94.061 83.5306 98.885 82.6824 99.4994C81.3922 100.433 80.1168 101.38 78.8565 102.341C74.7792 105.456 71.9478 107.986 70.3157 110.093C66.8525 114.557 64.185 118.752 63.4771 121.651C62.5061 125.635 65.6241 126.23 74.6037 122.232C83.1161 118.447 91.8081 114.94 100.659 111.72C102.707 110.971 108.872 108.744 109.832 108.384C112.786 107.304 114.687 106.56 116.138 105.912L117.279 105.398L118.554 104.832C119.584 104.381 120.531 103.987 121.479 103.608C132.067 99.4226 141.649 98.5874 150.921 103.032C164.312 109.435 173.315 120.801 173.315 130.123C173.315 139.3 172.888 142.185 170.285 146.059C169.457 147.271 168.489 148.415 167.395 149.476C163.61 153.206 160.486 157.252 159.93 159.686C159.228 162.729 162.674 163.06 171.73 159.662C179.516 156.743 184.833 152.486 188.402 147.028C189.888 144.713 191.084 142.28 191.97 139.766C192.497 138.336 193.825 134.174 193.965 133.776C194.222 132.979 194.565 132.204 194.989 131.457C199.359 124.291 207.326 116.817 216.195 113.582C220.646 111.96 223.8 108.95 227.544 103.603C228.035 102.893 230.036 99.9361 230.55 99.2018C232.61 96.2738 234.189 94.5458 236.032 93.4515C241.969 89.8995 252.821 88.1236 265.451 88.1236C269.85 88.1236 275.127 87.5284 281.544 86.4052C284.473 85.8858 287.391 85.3225 290.295 84.7156C289.535 84.874 299.386 82.8052 301.656 82.3684C309.934 80.7701 325.681 79.9637 339.16 79.9637C349.315 79.9637 355.434 75.5334 361.699 61.4024C365.572 52.6617 365.572 48.745 363.273 44.9147L362.583 43.7771C362.002 42.8724 361.693 41.8669 361.682 40.8443C361.682 38.91 361.682 38.9196 363.144 29.0557C363.413 27.2654 363.612 25.8206 363.799 24.4286C364.326 20.3727 364.607 17.1327 364.607 14.4448C364.607 14.0835 364.599 13.7038 364.59 13.3056C364.587 13.1406 364.719 13.0048 364.884 13.0048C365.043 13.0048 365.173 13.1304 365.177 13.2887C365.188 13.6931 365.192 14.0784 365.192 14.4448C365.192 17.1567 364.911 20.4111 364.379 24.4766C364.203 25.8734 363.992 27.323 363.729 29.1133C362.267 38.9292 362.267 38.9388 362.267 40.8443C362.267 41.7899 362.53 42.5579 363.115 43.5707C363.161 43.651 363.25 43.8 363.349 43.9642C363.644 44.455 363.959 44.9502 364.222 45.4587C366.159 49.1921 365.925 53.2717 362.249 61.5656C355.908 75.8694 349.596 80.4437 339.16 80.4437C325.728 80.4437 310.01 81.2501 301.785 82.8388C299.527 83.2708 289.681 85.3348 290.436 85.1812C287.526 85.7898 284.602 86.3547 281.667 86.8756C275.208 88.0035 269.903 88.6035 265.451 88.6035C252.932 88.6035 242.192 90.3651 236.377 93.8355C234.622 94.8866 233.078 96.5714 231.053 99.4418C230.545 100.171 228.544 103.128 228.047 103.843C224.25 109.267 221.027 112.344 216.429 114.019C207.712 117.201 199.827 124.593 195.515 131.668C195.106 132.39 194.775 133.14 194.527 133.91C194.392 134.294 193.064 138.465 192.538 139.91C191.637 142.452 190.423 144.913 188.917 147.254C185.29 152.802 179.884 157.132 171.975 160.098C162.557 163.631 158.521 163.242 159.351 159.599C159.936 157.06 163.095 152.961 166.95 149.169C168.018 148.132 168.962 147.013 169.77 145.828C172.315 142.046 172.73 139.219 172.73 130.123C172.73 120.984 163.844 109.771 150.664 103.459C141.556 99.101 132.167 99.917 121.736 104.04C120.322 104.599 118.93 105.193 117.559 105.821L116.419 106.334C114.342 107.23 112.225 108.061 110.072 108.826C109.106 109.181 102.946 111.408 100.893 112.162C92.058 115.376 83.3817 118.876 74.8845 122.654C65.5539 126.811 61.7982 126.091 62.9039 121.555C63.6292 118.579 66.3143 114.346 69.8184 109.834C71.4857 107.683 74.3463 105.13 78.4587 101.991C79.617 101.103 80.8689 100.171 82.2963 99.1394C83.1504 98.5202 89.9128 93.7011 91.5099 92.5059C93.3175 91.1619 96.5408 88.1187 96.2717 88.3443C97.9214 86.9908 99.6354 86.6836 105.749 86.6836C110.136 86.6836 112.792 85.5172 114.377 83.122C115.664 81.1685 116.196 78.8789 116.834 73.719L116.986 72.4086L117.162 71.0598C117.489 68.4583 119.777 66.9799 123.731 66.4519C126.913 66.0295 131.049 66.2071 136.519 66.8647C138.099 67.0567 139.719 67.2775 141.807 67.5799C150.775 68.8759 151.144 68.9239 153.133 68.9239C156.485 68.9239 160.679 68.4295 174.953 66.5239L176.281 66.3511C188.039 64.7863 194.135 64.124 198.177 64.124C203.998 64.124 211.948 62.5976 219.108 59.7656C228.216 56.1657 235.54 50.7754 240.039 43.6139C242.976 38.934 244.134 34.1004 243.847 28.8925C243.631 24.875 242.701 21.1743 240.788 15.6592L240.001 13.3865ZM247.963 13.3636C247.917 13.1816 248.054 13.0048 248.242 13.0048C248.375 13.0048 248.491 13.0954 248.523 13.2244C248.977 15.0564 249.628 17.2957 250.522 20.1471C252.645 26.891 252.312 33.1213 250.083 38.7564C248.678 42.3881 246.423 45.7599 243.444 48.6826C240.042 51.9802 236.257 54.9977 232.142 57.6921C225.519 62.0216 218.476 65.1271 211.111 66.5191C206.747 67.3302 202.342 67.982 197.908 68.4727C196.053 68.6839 194.187 68.8807 191.882 69.1063L186.389 69.6439C179.645 70.3206 176.181 70.8678 173.73 71.7846C168.302 73.8054 157.146 74.6838 144.943 74.6838C144.141 74.6838 143.305 74.6262 142.427 74.5158C140.895 74.319 139.502 74.0214 137.081 73.4166C132.787 72.3558 131.447 72.0966 129.692 72.1878C127.411 72.2982 125.814 73.287 124.737 75.495C123.649 77.7317 123.322 79.1093 122.783 82.6852C122.14 86.9956 121.105 88.5027 116.951 89.5491C115.581 89.8746 114.249 90.302 112.973 90.8259C112.605 90.9843 112.295 91.1331 111.944 91.3155L111.16 91.7283C110.048 92.2755 108.902 92.4435 105.749 92.4435C103.877 92.4435 100.583 92.1795 100.185 92.2563C99.4716 92.3907 99.7465 92.1891 96.0085 95.2514C95.131 95.9714 93.9668 96.7778 92.3113 97.829C91.4221 98.3954 88.1228 100.435 87.6665 100.723C84.7649 102.538 82.7935 103.891 81.1965 105.226C78.3417 107.616 77.1893 109.618 77.944 111.322C78.7278 113.083 80.3249 113.443 83.1504 112.675C84.7152 112.214 86.2347 111.656 87.6957 111.005C88.5732 110.635 92.247 109.022 93.1771 108.624C95.5111 107.602 97.9156 106.691 100.378 105.898C102.565 105.189 104.72 104.414 106.837 103.574C108.03 103.109 113.119 101.098 114.441 100.589C117.021 99.581 119.18 98.7746 121.257 98.0498C131.283 94.5458 138.409 93.2979 143.293 94.8578L146.47 95.8658C147.815 96.2882 148.909 96.6434 149.991 97.0082C152.594 97.8679 155.146 98.829 157.637 99.8882C168.366 104.51 175.392 110.51 177.989 119.025C182.061 132.393 180.095 140.879 173.262 148.977C170.94 151.737 171.203 153.393 173.297 153.282C175.719 153.148 179.27 150.907 182.137 147.273C183.95 144.969 185.12 142.257 186.846 136.939L187.834 133.891C188.22 132.705 188.56 131.721 188.905 130.771C191.789 122.822 195.34 117.677 201.517 114.086C205.7 111.658 215.399 106.646 216.423 106.046C220.366 103.738 222.583 101.515 224.812 97.4066C229.339 89.0355 237.149 85.7236 250.826 85.7236C256.302 85.7236 261.303 85.1812 268.101 84.0484C269.311 83.8486 270.52 83.6438 271.728 83.434C273.132 83.194 274.109 83.0308 275.039 82.8916C277.396 82.5364 279.157 82.3636 280.661 82.3636C283.258 82.3636 286.154 81.8837 299.023 79.4885L300.749 79.1717C310.308 77.4101 315.748 76.6037 319.27 76.6037C320.171 76.6037 320.674 76.6085 323.014 76.6517C327.577 76.7237 330.192 76.7141 333.152 76.5557C342.751 76.0469 348.789 73.983 350.585 69.5671C351.182 68.1243 351.875 66.7094 352.661 65.3287C352.573 65.4775 354.001 62.948 354.358 62.2664C357.505 56.3625 357.616 51.745 353.515 43.3355C351.992 40.1376 350.958 36.7969 350.438 33.3901C349.496 27.6398 349.631 22.283 350.497 14.0224L350.584 13.2628C350.601 13.1158 350.725 13.0048 350.873 13.0048C351.047 13.0048 351.182 13.1556 351.163 13.3281L351.082 14.0608C350.216 22.2926 350.087 27.6158 351.017 33.3277C351.532 36.6935 352.554 39.9938 354.059 43.1531C358.213 51.6874 358.102 56.4345 354.896 62.4584C354.533 63.1448 353.106 65.6839 353.194 65.5303C352.415 66.8953 351.727 68.2941 351.134 69.7207C349.245 74.3862 343.003 76.5125 333.187 77.0357C330.203 77.1941 327.583 77.2037 322.996 77.1317C320.668 77.0885 320.165 77.0837 319.27 77.0837C315.813 77.0837 310.39 77.8853 300.878 79.6373L299.152 79.9589C286.189 82.3684 283.328 82.8436 280.661 82.8436C279.198 82.8436 277.472 83.0164 275.144 83.3668C274.22 83.506 273.243 83.6644 271.845 83.8996C270.636 84.1054 269.427 84.3118 268.218 84.5188C261.385 85.6564 256.343 86.2036 250.826 86.2036C237.36 86.2036 229.766 89.4243 225.362 97.5602C223.08 101.784 220.787 104.078 216.762 106.44C215.721 107.05 206.022 112.056 201.857 114.48C195.808 117.993 192.321 123.057 189.461 130.91C189.121 131.851 188.788 132.83 188.396 134.016L187.407 137.064C185.664 142.43 184.482 145.175 182.628 147.532C179.674 151.281 175.977 153.618 173.332 153.762C170.583 153.911 170.232 151.732 172.783 148.708C179.522 140.721 181.452 132.374 177.416 119.141C174.871 110.779 167.962 104.875 157.368 100.315C155.028 99.3074 152.571 98.3954 149.769 97.4498C148.693 97.0898 147.605 96.7346 146.259 96.3074L143.083 95.309C138.385 93.8115 131.371 95.0306 121.485 98.4914C119.426 99.2114 117.267 100.023 114.693 101.021L107.088 104.006C104.333 105.072 102.315 105.806 100.589 106.349C98.1463 107.135 95.7613 108.038 93.4462 109.051C92.5219 109.45 88.8482 111.058 87.9648 111.432C86.4795 112.094 84.9345 112.662 83.3434 113.131C80.243 113.971 78.3008 113.539 77.3941 111.485C76.54 109.555 77.7802 107.405 80.787 104.89C82.3957 103.536 84.3905 102.173 87.3096 100.339C87.7718 100.051 91.0711 98.0114 91.9545 97.4498C93.231 96.6666 94.4481 95.8203 95.599 94.9154C99.5418 91.6803 99.1674 91.9587 100.051 91.7907C100.56 91.6947 103.964 91.9635 105.749 91.9635C108.802 91.9635 109.861 91.8099 110.861 91.3155L111.628 90.9123C111.99 90.7203 112.318 90.5667 112.704 90.3987C114.01 89.8629 115.373 89.4259 116.776 89.0931C120.66 88.1139 121.584 86.77 122.204 82.6276C122.748 79.0133 123.082 77.6021 124.193 75.3126C125.357 72.9366 127.142 71.8278 129.657 71.7078C131.512 71.6118 132.875 71.8758 137.244 72.9558C138.969 73.4227 140.732 73.7852 142.521 74.0406C143.369 74.1462 144.177 74.2038 144.943 74.2038C157.058 74.2038 168.167 73.3302 173.49 71.343C176.018 70.4022 179.51 69.8551 186.319 69.1687L191.818 68.6311C194.111 68.4007 195.977 68.2087 197.826 67.9975C202.6 67.4503 206.835 66.8311 210.982 66.0487C218.248 64.6759 225.215 61.604 231.779 57.3129C235.865 54.637 239.622 51.6404 242.999 48.3658C245.925 45.4933 248.14 42.1804 249.522 38.6124C251.721 33.0589 252.049 26.9198 249.96 20.2623C249.222 17.9772 248.556 15.6769 247.963 13.3636ZM314.415 13.0048C314.696 13.0048 314.843 13.3399 314.648 13.5433C314.58 13.6148 314.519 13.6772 314.467 13.7296C312.156 16.1103 310.431 17.5311 308.723 18.3231C307.843 18.755 306.84 18.99 305.815 19.0047C304.423 19.0047 303.335 19.3263 301.89 20.0655L300.34 20.8863C297.777 22.2302 295.654 22.8446 292.36 22.8446C289.085 22.8446 286.516 22.2398 282.954 20.9007C282.504 20.7334 282.056 20.5638 281.608 20.3919L280.333 19.9215C279.397 19.5855 278.625 19.3599 277.894 19.2111C277.269 19.078 276.626 19.0087 275.981 19.0047C274.635 19.0047 273.465 18.6783 269.546 17.3871L268.633 17.0895C265.708 16.1439 263.895 15.736 262.479 15.8128C260.765 15.9088 259.893 16.7871 259.893 18.7647C259.893 28.7293 256.846 42.9659 252.786 46.2922C248.352 49.9354 237.254 57.6681 232.861 60.2408C225.163 64.7527 214.627 69.9367 207.057 72.2694C204.514 73.0524 201.911 73.6986 199.265 74.2038C197.346 74.5782 195.404 74.8902 192.684 75.279C192.374 75.327 187.536 75.9989 185.957 76.2341C183.113 76.6517 180.516 77.0693 177.767 77.5589C165.704 79.7093 163.101 79.9637 155.473 79.9637C154.016 79.9637 153.776 79.9301 147.254 79.0037C145.838 78.8021 144.732 78.6533 143.656 78.5237C138.912 77.9525 135.565 77.8709 133.337 78.4277C130.681 79.0997 129.868 80.6597 131.172 83.4772C132.354 86.0116 134.004 87.61 136.344 88.6323C138.251 89.4675 140.292 89.8803 144.428 90.4131C149.939 91.1235 150.828 91.2531 153.495 91.8147C157.296 92.606 160.957 93.7949 164.388 95.3522C169.243 97.5506 172.917 100.872 176.076 105.379C177.673 107.65 181.61 114.658 182.242 115.55C184.231 118.358 185.904 118.733 188.612 116.51C191.508 114.139 194.667 112.493 200.973 109.762C201.147 109.686 201.582 109.495 201.887 109.363C202.104 109.269 202.323 109.176 202.54 109.082C206.99 107.151 209.241 106.065 211.497 104.645C214.487 102.773 216.563 100.757 217.798 98.3522C222.782 88.6371 229.936 82.3636 236.786 82.3636L240.004 82.378C246.164 82.4164 250.153 82.3876 254.57 82.2292C262.561 81.9316 268.481 81.2261 271.763 79.9877C275.185 78.6917 279.613 77.3525 285.908 75.6581C287.932 75.111 289.588 74.6742 293.337 73.6902C297.842 72.5142 299.819 71.991 302.212 71.3382C304.417 70.7328 306.626 70.1376 308.84 69.5527C310.987 68.9767 312.326 68.5927 313.537 68.2183C314.869 67.8132 316.171 67.3419 317.433 66.8071C318.527 66.3367 319.633 65.7991 320.861 65.1271C322.897 64.0088 324.459 63.6248 327.904 63.1448L328.577 63.0488C331.917 62.564 333.842 61.9448 336.042 60.3464C340.616 57.0057 341.061 49.2202 338.288 38.9772C337.294 35.2956 337.06 29.7229 337.37 21.9519C337.485 19.0593 337.639 16.1679 337.831 13.2782C337.841 13.1243 337.969 13.0048 338.123 13.0048C338.292 13.0048 338.426 13.1469 338.416 13.3153L338.346 14.4736C338.159 17.5551 338.036 19.7631 337.949 21.9711C337.65 29.6989 337.879 35.2428 338.861 38.8716C341.681 49.2778 341.225 57.2073 336.428 60.7016C334.14 62.372 332.116 63.0248 328.682 63.5192L328.004 63.6152C324.634 64.0904 323.137 64.4551 321.189 65.5255C320.065 66.1467 318.901 66.7171 317.702 67.2343C316.419 67.7782 315.096 68.2574 313.742 68.6695C312.519 69.0487 311.174 69.4279 309.021 70.0087C306.814 70.6042 304.607 71.1978 302.399 71.7894C300 72.447 298.023 72.9702 293.519 74.151C289.763 75.1302 288.113 75.567 286.089 76.1093C279.812 77.8037 275.402 79.1333 272.009 80.4197C268.639 81.6964 262.666 82.4068 254.593 82.7092C250.171 82.8676 246.17 82.8964 239.998 82.858L236.786 82.8436C230.24 82.8436 223.238 88.9827 218.336 98.5394C217.055 101.031 214.919 103.109 211.854 105.029C209.502 106.502 207.18 107.616 202.488 109.646L201.248 110.184C194.989 112.896 191.865 114.523 189.022 116.856C186.015 119.323 183.903 118.848 181.739 115.79C181.084 114.869 177.147 107.87 175.573 105.614C172.455 101.179 168.857 97.925 164.107 95.7746C160.717 94.2358 157.099 93.0614 153.343 92.2803C150.711 91.7187 149.822 91.5939 144.334 90.8883C140.14 90.3507 138.052 89.9283 136.069 89.0595C133.6 87.9795 131.857 86.29 130.628 83.65C129.207 80.5829 130.172 78.7253 133.167 77.9717C135.507 77.3861 138.912 77.4677 143.744 78.0533C144.82 78.1829 145.932 78.3317 147.353 78.5333C153.8 79.4453 154.069 79.4837 155.473 79.4837C163.054 79.4837 165.622 79.2341 177.644 77.0885C180.399 76.5989 183.002 76.1765 185.851 75.7589C187.437 75.5286 192.274 74.847 192.579 74.8086C195.293 74.4198 197.229 74.1078 199.131 73.7382C201.792 73.2246 204.255 72.615 206.852 71.8182C214.358 69.5095 224.864 64.3351 232.522 59.8472C236.892 57.2889 247.966 49.5754 252.376 45.9563C256.267 42.7547 259.308 28.5997 259.308 18.7647C259.308 16.5519 260.397 15.4528 262.438 15.3328C263.977 15.2464 265.831 15.6688 268.85 16.6431L269.762 16.9407C273.582 18.1983 274.752 18.5247 275.981 18.5247C276.648 18.5247 277.326 18.6015 278.028 18.7455C278.8 18.9039 279.596 19.1391 280.567 19.4799C281.224 19.7123 281.876 19.9555 282.521 20.2095L283.194 20.4687C286.692 21.7791 289.178 22.3646 292.36 22.3646C295.525 22.3646 297.549 21.7839 300.024 20.4831C300.141 20.4207 301.252 19.8207 301.58 19.6575C303.113 18.8751 304.294 18.5247 305.815 18.5247C306.675 18.5247 307.535 18.3183 308.43 17.9007C310.056 17.1519 311.747 15.7648 314.011 13.432L314.416 13.009C314.418 13.0074 314.417 13.0048 314.415 13.0048ZM207.943 300.531C207.892 300.804 207.653 301 207.375 301C207.008 301 206.733 300.664 206.801 300.303C207.03 299.076 207.232 297.757 207.414 296.363C207.671 294.395 207.859 292.403 207.987 290.503C208.031 289.877 208.065 289.306 207.832 287.399C207.8 287.136 207.744 286.876 207.672 286.621C207.435 285.786 207.205 284.861 206.987 283.864C205.811 278.46 205.431 272.872 206.32 267.65C206.783 264.667 207.805 261.761 209.35 259.034C211.233 255.82 213.72 252.868 216.721 250.289C218.698 248.561 219.956 247.649 223.642 245.11C226.274 243.295 227.356 242.441 228.041 241.51C228.415 240.996 228.596 240.521 228.596 240.041C228.596 239.201 228.596 239.206 228.158 235.611C227.947 233.835 227.824 232.587 227.76 231.31C227.467 225.502 228.708 221.902 232.504 220.865C241.806 218.321 247.65 215.057 252.072 208.606C257.612 200.514 267.118 193.482 273.056 193.482C280.286 193.482 284.756 192.541 290.26 189.258C294.215 186.896 295.818 186.09 297.555 185.677C298.854 185.37 299.778 185.322 302.89 185.322C303.978 185.322 304.955 184.924 306.149 184.064C306.78 183.604 309.138 181.607 309.425 181.376C312.958 178.568 316.433 177.162 321.61 177.162C323.043 177.162 324.266 177.181 325.892 177.22C330.285 177.33 331.081 177.301 332.485 176.884C334.257 176.356 335.72 175.429 341.114 171.522C345.793 168.133 347.385 167.241 354.492 163.617C355.335 163.185 356.007 162.834 356.651 162.479C358.619 161.413 360.471 160.209 362.185 158.879C364.263 157.274 366.245 155.636 368.109 153.97C368.449 153.665 368.994 153.905 368.994 154.362C368.994 154.512 368.93 154.655 368.818 154.754C366.944 156.418 364.999 158.028 362.986 159.58C361.126 161.02 359.359 162.148 357.3 163.276C356.645 163.641 355.966 163.996 355.107 164.428C348.057 168.028 346.501 168.901 341.886 172.242C336.352 176.25 334.86 177.196 332.883 177.786C331.28 178.266 330.432 178.295 325.857 178.18C324.242 178.141 323.031 178.122 321.61 178.122C316.772 178.122 313.566 179.418 310.244 182.068C309.986 182.274 307.599 184.295 306.921 184.784C305.534 185.788 304.312 186.282 302.89 186.282C299.907 186.282 299.029 186.33 297.883 186.599C296.321 186.973 294.788 187.736 290.951 190.031C285.218 193.453 280.509 194.442 273.056 194.442C267.662 194.442 258.454 201.258 253.09 209.077C248.504 215.768 242.42 219.166 232.879 221.777C229.772 222.627 228.661 225.862 228.93 231.272C228.988 232.52 229.111 233.763 229.328 235.515C229.766 239.172 229.766 239.153 229.766 240.041C229.766 240.703 229.521 241.351 229.041 242.004C228.263 243.06 227.134 243.958 224.396 245.844C220.74 248.359 219.506 249.262 217.569 250.946C214.652 253.454 212.233 256.322 210.403 259.447C208.911 262.084 207.924 264.895 207.478 267.78C206.607 272.896 206.981 278.383 208.139 283.691C208.391 284.829 208.654 285.866 208.917 286.783C209 287.061 209.073 287.314 209.209 288.288C209.25 288.583 209.261 288.881 209.246 289.177C209.116 291.613 208.895 294.044 208.584 296.469C208.392 297.907 208.181 299.266 207.943 300.531ZM200.014 301H199.551C199.482 301 199.438 300.927 199.47 300.866C201.266 297.429 201.979 295.187 201.979 291.88C201.979 290.167 201.938 289.514 201.535 284.368C201.084 278.589 200.95 274.941 201.213 270.784C201.552 265.265 202.617 260.177 204.612 255.348C205.372 253.524 206.25 251.748 207.274 250.02C209.298 246.593 211.269 244.073 213.369 242.052C214.169 241.286 215.019 240.555 215.914 239.863C216.165 239.671 217.669 238.519 218.061 238.207C221.407 235.52 222.454 232.678 222.454 224.201C222.454 215.158 224.151 212.792 231.709 210.646C232.346 210.469 232.832 210.325 233.329 210.176C234.552 209.808 235.744 209.375 236.898 208.88C239.793 207.632 242.537 205.894 245.345 203.398C260.262 190.136 267.077 186.522 278.321 186.522C283.164 186.522 286.826 185.586 291.19 183.498C292.232 183.004 299.275 179.264 301.814 178.088C303.469 177.325 305.125 176.634 306.862 175.981C311.495 174.253 315.035 173.845 322.423 173.677C326.828 173.581 328.682 173.442 330.765 172.919C333.427 172.247 335.48 170.999 337.159 168.873C338.446 167.236 341.166 165.474 345.735 163.084C346.677 162.59 347.648 162.1 349.04 161.404C354.615 158.596 355.803 157.982 357.704 156.81C360.828 154.89 363.144 152.793 365.707 149.721C366.67 148.557 367.602 147.376 368.503 146.179C368.66 145.971 368.994 146.081 368.994 146.342C368.994 146.401 368.975 146.459 368.939 146.506C367.815 147.989 366.992 149.031 366.186 149.995C363.601 153.105 361.237 155.236 358.055 157.194C356.13 158.375 354.943 158.994 349.344 161.807C348.24 162.359 347.143 162.919 346.051 163.487C341.546 165.839 338.879 167.577 337.65 169.132C335.895 171.354 333.731 172.679 330.935 173.38C328.782 173.917 326.898 174.061 322.435 174.162C315.122 174.325 311.648 174.729 307.108 176.418C305.403 177.055 303.732 177.751 302.101 178.506C299.585 179.672 292.542 183.412 291.483 183.916C287.037 186.042 283.276 187.002 278.321 187.002C267.282 187.002 260.595 190.554 245.778 203.725C242.923 206.259 240.121 208.03 237.178 209.302C236.008 209.806 234.838 210.224 233.534 210.622C233.031 210.776 232.539 210.92 230.392 211.52C227.421 212.365 226.04 213.08 224.964 214.577C223.659 216.392 223.039 219.349 223.039 224.201C223.039 232.793 221.945 235.755 218.476 238.548C218.073 238.87 216.563 240.017 216.318 240.209C215.437 240.89 214.601 241.61 213.814 242.364C211.749 244.351 209.801 246.838 207.8 250.226C206.79 251.938 205.91 253.7 205.168 255.502C203.19 260.287 202.137 265.332 201.798 270.813C201.541 274.941 201.669 278.575 202.12 284.335C202.523 289.499 202.564 290.152 202.564 291.88C202.564 294.927 201.968 297.096 200.022 300.995C200.021 300.998 200.017 301 200.014 301ZM214.683 300.704C214.684 300.867 214.553 301 214.39 301C214.23 301 214.099 300.871 214.098 300.711C214.082 298.539 214.141 296.378 214.264 293.79C214.416 290.714 214.03 288.131 212.784 282.093L212.603 281.2C211.363 275.176 210.988 271.913 211.45 268.495C212.053 264.055 214.229 260.489 218.47 257.614C231.363 248.878 235.909 243.127 235.909 236.201C235.909 234.953 235.733 233.892 235.336 232.28C234.768 229.98 234.692 229.553 234.768 228.646C234.885 227.417 235.511 226.39 236.851 225.42C238.413 224.292 240.975 223.213 244.877 222.056C250.563 220.376 253.956 217.649 259.092 211.702L260.133 210.502C262.754 207.464 264.287 205.88 266.235 204.368C268.756 202.414 271.488 201.118 274.741 200.447C282.521 198.853 286.657 197.821 289.564 196.779C290.624 196.398 291.656 195.966 292.653 195.483C293.296 195.171 293.677 194.984 295.133 194.235C296.713 193.429 298.187 193.237 301.79 193.141C304.973 193.055 306.412 192.935 308.208 192.464C310.362 191.899 312.29 190.868 313.789 189.479C316.638 186.935 319.656 185.826 324.196 185.207C324.822 185.12 325.295 185.063 326.454 184.928C330.49 184.463 332.268 184.117 334.339 183.191C336.972 182.015 338.311 181.06 348.063 173.745L349.9 172.377C355.545 168.196 359.33 165.738 362.431 164.466C364.746 163.519 366.604 162.384 368.559 160.717C368.729 160.572 368.994 160.691 368.994 160.915C368.994 160.991 368.961 161.063 368.903 161.112C366.935 162.783 365.044 163.929 362.688 164.898C359.658 166.141 355.896 168.58 350.286 172.732L348.461 174.1C338.633 181.468 337.317 182.404 334.62 183.613C332.467 184.573 330.642 184.933 326.536 185.404C325.383 185.538 324.909 185.596 324.289 185.677C319.867 186.282 316.965 187.348 314.222 189.805C312.655 191.256 310.64 192.334 308.389 192.925C306.517 193.405 305.043 193.535 301.808 193.621C298.31 193.717 296.9 193.895 295.437 194.643C294.618 195.073 293.789 195.49 292.951 195.896C291.933 196.387 290.88 196.828 289.798 197.216C286.85 198.272 282.691 199.314 274.881 200.912C269.183 202.083 265.954 204.584 260.607 210.781L259.572 211.981C254.365 218 250.902 220.784 245.076 222.507C241.232 223.64 238.729 224.7 237.237 225.78C236.008 226.673 235.453 227.576 235.353 228.68C235.277 229.524 235.353 229.942 235.909 232.184C236.318 233.825 236.494 234.92 236.494 236.201C236.494 243.3 231.855 249.161 218.839 257.988C214.726 260.772 212.615 264.228 212.03 268.548C211.573 271.908 211.948 275.138 213.176 281.124L213.363 282.012C214.621 288.083 215.001 290.685 214.849 293.81C214.726 296.368 214.667 298.514 214.683 300.704ZM74.1006 301C73.487 301 73.0291 300.433 73.1316 299.828C73.4129 298.168 73.6291 296.087 73.849 293.33C73.966 291.837 74.007 291.381 74.0772 290.642C74.8377 282.223 76.4405 277.615 80.8046 274.706C83.5248 272.896 85.0282 270.424 85.8764 267.026C86.1748 265.817 86.2859 265.169 86.6545 262.625C87.0406 259.985 87.333 258.756 87.9648 257.652C88.8131 256.169 90.1995 255.401 92.2879 255.401C100.642 255.401 114.798 259.778 123.643 265.097C128.709 268.145 136.08 271.49 142.211 273.309C149.833 275.57 155.016 275.426 156.689 272.479C157.684 270.732 157.813 270.506 158.24 269.709C159.954 266.508 160.983 263.853 161.311 261.309C161.445 260.268 161.451 259.279 161.323 258.334C161.135 257.014 160.492 256.15 158.936 254.806L158.164 254.148C157.661 253.725 157.191 253.278 156.754 252.809C156.205 252.19 155.716 251.537 155.291 250.855L154.63 249.828C153.683 248.34 153.063 247.62 152.22 247.159C149.143 245.479 143.562 244.519 135.519 243.881C133.758 243.743 131.995 243.63 130.23 243.54L128.955 243.459C123.357 243.108 120.11 242.71 117.805 241.923C109.592 239.115 97.5587 229.241 97.5587 224.201C97.5587 221.638 98.5766 219.627 100.759 217.419C101.917 216.248 107.264 211.798 108.241 210.92C110.885 208.534 114.184 206.341 118.583 203.883C120.221 202.971 127.229 199.275 128.815 198.368C130.136 197.585 131.377 196.713 132.524 195.762C133.419 195.042 136.595 192.339 136.689 192.258C140.889 188.754 144.118 186.709 148.236 185.356C150.202 184.712 152.992 184.016 158.444 182.773C160.741 182.247 163.038 181.722 165.336 181.199C167.814 180.629 170.285 180.037 172.747 179.423C184.681 176.428 192.637 173.625 196.609 170.572C201.722 166.636 203.5 163.929 205.811 158.082C206.993 155.097 207.619 153.743 208.777 151.977C214.358 143.476 225.572 133.08 234.224 130.161C242.502 127.363 245.561 124.526 245.561 121.483C245.561 120.096 247.158 117.451 249.557 114.893C252.341 111.917 255.787 109.44 259.355 108.086C266.668 105.317 278.952 103.243 287.096 103.243C290.208 103.243 292.846 102.523 296.701 100.896C302.083 98.6354 302.609 98.4434 304.645 98.4434C310.741 98.4434 323.4 97.2194 331.414 95.5778L333.684 95.1074L335.714 94.6802C337.235 94.3634 338.247 94.1618 339.183 93.9938C341.465 93.581 343.138 93.4035 344.787 93.4323C346.39 93.4611 347.987 93.6818 349.859 94.1426C352.527 94.8002 357.879 93.7107 363.238 91.4163C364.98 90.6778 366.654 89.8349 368.245 88.8945C368.574 88.7 368.994 88.9346 368.994 89.3168C368.994 89.4878 368.905 89.6461 368.758 89.7333C362.3 93.5629 353.872 96.1359 349.52 95.0642C347.98 94.6599 346.38 94.4337 344.764 94.3922C343.225 94.3682 341.628 94.5362 339.435 94.9298C337.606 95.2676 335.787 95.6357 333.977 96.0338L331.695 96.509C323.587 98.1698 310.834 99.4034 304.645 99.4034C302.896 99.4034 302.358 99.5954 297.233 101.751C293.226 103.435 290.442 104.203 287.096 104.203C279.11 104.203 267.001 106.248 259.847 108.955C256.465 110.237 253.166 112.613 250.487 115.473C248.235 117.883 246.731 120.369 246.731 121.483C246.731 124.973 243.338 128.116 234.669 131.044C226.321 133.867 215.27 144.105 209.807 152.428C208.695 154.132 208.081 155.442 206.923 158.38C204.553 164.365 202.693 167.207 197.405 171.273C193.263 174.46 185.196 177.306 173.087 180.34C170.618 180.955 168.142 181.549 165.657 182.12C163.359 182.653 161.058 183.178 158.755 183.695C153.349 184.933 150.582 185.62 148.669 186.248C144.732 187.54 141.62 189.512 137.525 192.93C137.437 193.002 134.249 195.714 133.343 196.443C132.149 197.433 130.858 198.341 129.482 199.155C127.879 200.077 120.853 203.778 119.244 204.675C114.915 207.094 111.674 209.245 109.106 211.563C108.1 212.475 102.788 216.896 101.671 218.024C99.6412 220.069 98.7287 221.878 98.7287 224.201C98.7287 228.761 110.428 238.361 118.256 241.039C120.403 241.774 123.579 242.163 129.049 242.503C129.895 242.557 130.741 242.608 131.588 242.657C133.483 242.767 134.553 242.835 135.642 242.921C143.878 243.579 149.576 244.553 152.87 246.363C153.934 246.939 154.636 247.759 155.677 249.382L156.327 250.404C156.724 251.042 157.182 251.654 157.696 252.233C158.058 252.631 158.456 253.001 159.018 253.486C159.152 253.601 159.661 254.042 159.79 254.143C161.504 255.626 162.27 256.654 162.487 258.223C162.627 259.241 162.621 260.301 162.481 261.41C162.136 264.074 161.077 266.81 159.316 270.098C158.883 270.9 158.755 271.13 157.76 272.882C155.718 276.468 149.962 276.626 141.819 274.212C135.577 272.359 128.113 268.97 122.953 265.869C114.301 260.661 100.378 256.361 92.2938 256.361C89.3688 256.361 88.5498 257.81 87.8244 262.74C87.646 264.242 87.3806 265.737 87.0289 267.218C86.1338 270.818 84.5134 273.477 81.5475 275.455C77.5286 278.133 75.9901 282.549 75.2471 290.719C75.1828 291.448 75.1419 291.904 75.0249 293.392C74.756 296.753 74.4931 299.142 74.1076 300.994C74.1069 300.998 74.104 301 74.1006 301ZM78.8097 301C78.5067 301 78.2843 300.715 78.3553 300.421C78.4786 299.909 78.6045 299.368 78.7395 298.797L79.3538 296.099C80.8163 289.715 81.8107 286.538 83.2615 284.555C84.256 283.192 85.4143 281.916 87.9707 279.261C92.7735 274.288 94.3354 272.277 94.3354 270.281L94.3237 269.469C94.312 268.615 94.312 268.173 94.3354 267.66C94.4582 265.236 95.1953 263.724 97.0497 263.148C99.3429 262.428 103.128 263.359 108.82 266.234C114.412 269.057 119.075 271.37 123.977 273.751C124.743 274.125 132.325 277.788 134.314 278.767C135.569 279.385 136.821 280.009 138.069 280.639C146.154 284.719 160.849 283.063 165.154 276.88C167.26 273.866 167.81 272.791 169.706 268.567C169.924 268.072 170.154 267.581 170.396 267.093C171.033 265.808 171.828 264.579 172.771 263.426C178.229 256.716 181.499 250.898 181.499 245.801C181.499 244.044 181.938 242.623 183.464 238.673C183.769 237.886 183.95 237.396 184.137 236.883C186.267 231.012 185.916 227.705 181.628 225.363C179.881 224.392 177.881 223.771 175.789 223.549C171.577 223.102 167.313 224.11 161.802 226.371C160.896 226.745 157.918 228.022 157.356 228.257C156.532 228.6 155.725 228.968 154.935 229.361L152.361 230.638C145.563 233.96 140.427 235.044 133.167 233.556C131.225 233.153 129.517 232.884 125.504 232.289C117.753 231.142 114.564 230.489 111.856 229.188C108.211 227.427 107.492 224.859 110.171 221.197C112.526 217.986 115.364 215.032 118.618 212.403C120.186 211.13 121.81 209.904 123.485 208.726C123.444 208.75 127.089 206.182 128.06 205.477C129.392 204.52 130.662 203.506 131.863 202.438C136.367 198.378 139.339 196.026 143.609 193.525C149.424 190.117 156.128 187.592 164.189 186.047C185.851 181.9 194.024 179.951 198.604 177.44C203.635 174.69 211.064 165.551 220.155 151.132C223.209 146.284 227.333 142.3 232.516 138.792C235.517 136.756 238.108 135.312 242.783 132.921C247.123 130.704 248.41 129.974 249.44 129.004C250.141 128.293 250.721 127.506 251.165 126.667C251.522 126.043 252.844 123.561 252.92 123.417C253.716 121.977 254.418 120.825 255.231 119.707C259.051 114.442 264.609 111.067 273.6 109.723C281.047 108.619 285.212 108.427 290.962 108.619C292.864 108.682 293.378 108.696 294.238 108.686C297.251 108.653 299.919 108.187 303.955 106.862C316.088 102.878 326.623 101.083 338.581 101.083C340.365 101.083 342.108 101.155 344.711 101.314L345.934 101.391C353.217 101.851 356.51 101.851 360.757 101.088C363.518 100.59 366.175 99.7645 368.644 98.6374C368.81 98.5616 369 98.6822 369 98.8647C369 98.9619 368.944 99.0503 368.855 99.0904C366.356 100.225 363.67 101.056 360.88 101.559C356.563 102.331 353.229 102.331 345.887 101.871L344.67 101.794C342.079 101.635 340.347 101.563 338.581 101.563C326.705 101.563 316.234 103.349 304.177 107.304C300.076 108.648 297.333 109.128 294.25 109.166C293.372 109.176 292.852 109.162 290.939 109.099C285.229 108.907 281.111 109.094 273.699 110.203C264.889 111.514 259.472 114.801 255.734 119.952C254.887 121.135 254.125 122.358 253.453 123.614C253.383 123.749 252.055 126.24 251.692 126.873C251.226 127.753 250.616 128.577 249.878 129.321C248.79 130.344 247.498 131.078 243.093 133.329C238.442 135.71 235.868 137.145 232.89 139.161C227.766 142.631 223.688 146.567 220.67 151.353C211.538 165.849 204.08 175.026 198.932 177.844C194.263 180.397 186.079 182.351 164.318 186.517C156.333 188.043 149.705 190.544 143.948 193.919C139.725 196.395 136.771 198.723 132.295 202.765C131.082 203.844 129.799 204.87 128.452 205.837C127.475 206.547 123.825 209.115 123.866 209.086C121.953 210.45 120.473 211.563 119.034 212.744C115.817 215.346 113.013 218.27 110.686 221.446C108.17 224.883 108.802 227.153 112.166 228.771C114.781 230.033 117.946 230.686 125.761 231.838C128.298 232.18 130.819 232.597 133.319 233.086C140.403 234.54 145.393 233.489 152.074 230.225L154.648 228.953C155.619 228.473 156.379 228.123 157.105 227.825C157.661 227.595 160.638 226.318 161.551 225.944C167.161 223.64 171.519 222.613 175.877 223.073C178.057 223.304 180.14 223.95 181.961 224.96C186.536 227.46 186.904 230.969 184.711 237.022C184.523 237.535 184.336 238.03 184.032 238.817C182.529 242.715 182.096 244.116 182.096 245.801C182.096 251.023 178.785 256.908 173.274 263.695C172.353 264.82 171.574 266.02 170.952 267.276C170.735 267.708 170.525 268.149 170.261 268.735C168.36 272.983 167.798 274.077 165.675 277.12C161.188 283.562 146.119 285.256 137.771 281.047C136.528 280.418 135.28 279.795 134.027 279.18C132.038 278.2 124.457 274.538 123.69 274.164C118.788 271.778 114.12 269.469 108.527 266.647C102.97 263.839 99.3429 262.951 97.272 263.594C95.7042 264.084 95.0491 265.428 94.9321 267.679C94.9061 268.274 94.9022 268.869 94.9204 269.465L94.9321 270.281C94.9321 272.44 93.3585 274.471 88.193 279.818C85.8998 282.194 84.7591 283.461 83.7763 284.805C82.3782 286.711 81.3895 289.874 79.9388 296.19L79.3245 298.888L78.8242 300.989C78.8226 300.995 78.8166 301 78.8097 301ZM84.9521 301H84.8479C84.5911 301 84.3905 300.777 84.3905 300.52C84.3905 294.573 89.3513 284.407 95.599 279.703C96.3991 279.1 97.1188 278.429 97.7459 277.701C98.3825 276.955 98.9459 276.169 99.4306 275.349C99.6412 275.004 100.454 273.592 100.659 273.256C102.543 270.237 104.66 270.117 110.586 273.444C111.37 273.876 114.137 275.44 114.33 275.546C115.863 276.41 117.062 277.082 118.25 277.735C121.192 279.362 123.731 280.711 126.153 281.911C134.536 286.072 141.064 288.28 146.107 288.28C155.97 288.28 165.242 285.424 169.273 281.176C170.203 280.197 171.145 278.695 172.233 276.554C172.701 275.632 173.192 274.605 173.795 273.29L175.397 269.772C178.124 263.801 179.937 260.623 182.16 258.602C186.781 254.383 190.859 241.323 190.859 233.321C190.859 232.409 190.958 231.828 191.455 229.352C191.672 228.296 191.795 227.624 191.888 226.918C192.257 224.273 192.011 222.377 190.906 220.971C188.215 217.563 179.381 216.541 168.407 218.677C164.601 219.381 160.889 220.394 157.327 221.701C154.303 222.838 147.318 226.376 147.675 226.212C143.744 227.96 140.087 228.204 133.167 226.836C115.881 223.409 115.366 222.699 124.24 213.968C134.442 203.922 151.805 191.802 157.222 191.802C163.025 191.802 188.718 186.052 195.702 183.186C201.236 180.916 209.929 173.02 217.242 165.018C217.657 164.562 225.139 154.65 228.474 150.811C233.943 144.508 239.132 139.987 244.239 137.596C248.504 135.595 251.938 132.662 255.237 128.606C256.366 127.214 261.391 120.134 262.684 118.809C263.585 117.883 264.439 117.269 265.328 116.942C273.559 113.942 279.497 112.603 288.26 112.603H305.224C307.594 112.603 309.53 112.411 318.638 111.403L321.154 111.13C326.957 110.506 330.847 110.203 333.889 110.203C334.86 110.203 335.615 110.208 337.416 110.222C348.303 110.314 354.118 109.992 363.659 108.288C365.353 107.988 367.012 107.503 368.644 106.841C368.808 106.775 368.988 106.895 368.988 107.072C368.988 107.172 368.928 107.262 368.835 107.299C367.229 107.951 365.532 108.441 363.782 108.758C354.188 110.467 348.338 110.794 337.411 110.702C335.609 110.688 334.86 110.683 333.889 110.683C330.876 110.683 327.009 110.986 321.23 111.605L318.714 111.883C309.565 112.896 307.635 113.083 305.224 113.083H288.26C279.596 113.083 273.729 114.403 265.562 117.384C264.778 117.672 263.988 118.238 263.14 119.112C261.877 120.398 256.869 127.459 255.722 128.87C252.376 132.984 248.878 135.974 244.532 138.009C239.518 140.361 234.376 144.839 228.953 151.084C225.631 154.91 218.149 164.831 217.71 165.306C210.339 173.37 201.611 181.3 195.96 183.618C188.905 186.512 163.119 192.282 157.222 192.282C152.062 192.282 134.764 204.354 124.685 214.275C116.144 222.685 116.384 223.016 133.307 226.371C140.093 227.715 143.603 227.475 147.4 225.795C147.008 225.963 154.016 222.421 157.087 221.264C160.252 220.073 163.873 219.061 168.266 218.206C179.457 216.032 188.536 217.078 191.397 220.712C192.596 222.233 192.848 224.225 192.473 226.971C192.354 227.795 192.208 228.616 192.035 229.433C191.543 231.872 191.444 232.452 191.444 233.321C191.444 241.433 187.331 254.599 182.593 258.919C180.44 260.882 178.638 264.031 175.942 269.94C175.737 270.386 174.655 272.791 174.345 273.458C173.736 274.783 173.245 275.81 172.777 276.741C171.665 278.916 170.7 280.452 169.735 281.469C165.581 285.851 156.134 288.76 146.107 288.76C140.924 288.76 134.319 286.528 125.849 282.319C123.421 281.114 120.876 279.765 117.922 278.133C116.61 277.409 115.301 276.679 113.997 275.944L110.253 273.837C104.59 270.655 102.876 270.756 101.186 273.477C100.981 273.804 100.168 275.215 99.9571 275.565C99.4588 276.406 98.8798 277.214 98.2256 277.98C97.5704 278.733 96.8391 279.42 95.9967 280.058C89.8719 284.666 84.9755 294.703 84.9755 300.52L84.9582 300.994C84.9581 300.997 84.9554 301 84.9521 301ZM67.6027 300.996C67.6042 300.998 67.6033 301 67.6013 301H67.2079C67.0988 301 67.03 300.882 67.0811 300.786C67.6895 299.639 68.0108 298.425 68.0108 297.16C68.0108 287.56 70.8363 276.981 75.1185 273.472C78.1429 270.986 79.6638 269.45 80.9099 267.357C82.4542 264.761 83.2206 261.597 83.2206 257.321C83.2206 254.047 83.8875 251.758 85.192 250.087C86.2099 248.791 87.2979 248.066 90.4042 246.478C91.2049 246.079 91.9676 245.632 92.6857 245.139C95.3825 243.238 96.5349 242.163 97.2018 240.622C98.0384 238.692 97.7459 236.283 96.1137 232.932C95.4393 231.601 94.6596 230.307 93.7796 229.059L93.2356 228.243C92.6845 227.459 92.1693 226.658 91.6912 225.843C88.6727 220.702 89.4858 216.771 96.1839 211.549C101.048 207.745 106.294 204.284 111.868 201.205C114.184 199.914 121.695 196.021 123.123 195.205C124.599 194.353 130.711 189.975 132.098 188.985C132.55 188.662 132.94 188.385 133.208 188.197C136.115 186.152 138.526 184.597 140.842 183.325C143.603 181.813 146.089 180.791 148.371 180.292C155.847 178.655 157.497 178.285 161.106 177.426C168.448 175.679 173.953 174.114 177.568 172.626C178.974 172.076 180.436 171.628 181.938 171.287C187.004 170.01 188.969 169.319 191.865 167.399C195.831 164.778 199.511 160.559 203.173 154.022C212.515 137.332 214.334 135.115 221.98 130.411C223.817 129.278 225.707 128.443 228.667 127.339L230.03 126.84C237.009 124.272 239.898 122.553 242.373 118.497C243.473 116.688 243.824 115.478 244.344 112.608C244.801 110.117 245.21 108.979 246.409 107.688C247.913 106.056 250.522 104.678 254.81 103.363C256.781 102.758 259.115 102.163 261.859 101.573C271.412 99.509 276.648 99.0002 285.025 98.7842C289.061 98.6786 290.582 98.5154 292.431 97.8242C293.127 97.565 293.811 97.2338 294.525 96.8114C296.689 95.5154 299.287 94.6322 302.27 94.0898C305.61 93.4802 308.524 93.3507 313.209 93.3939L314.584 93.4035C316.234 93.4035 318.562 92.9235 326.109 91.1523C332.444 89.6739 335.439 89.0835 337.399 89.0835C337.879 89.0835 338.51 89.1459 339.476 89.2803L342.406 89.7123C348.151 90.5187 352.609 90.6195 357.119 89.6115C361.565 88.6149 365.396 86.5689 368.525 83.2787C368.69 83.105 368.988 83.2199 368.988 83.4596C368.988 83.5264 368.963 83.5909 368.916 83.6392C365.729 86.9741 361.811 89.0528 357.271 90.0675C352.661 91.0995 348.128 90.9987 342.307 90.1779L339.382 89.7459C338.446 89.6211 337.838 89.5587 337.399 89.5587C335.527 89.5587 332.532 90.1443 325.851 91.7091C318.626 93.4035 316.316 93.8787 314.584 93.8787L313.204 93.869C308.559 93.8211 305.686 93.9507 302.399 94.5506C299.491 95.0834 296.958 95.9426 294.864 97.1906C294.179 97.6061 293.444 97.9632 292.67 98.2562C290.728 98.9762 289.161 99.1538 285.042 99.2594C276.706 99.4706 271.511 99.9794 262.011 102.029C259.646 102.525 257.313 103.118 255.021 103.805C250.826 105.101 248.299 106.426 246.872 107.971C245.76 109.181 245.362 110.256 244.924 112.675C244.397 115.593 244.029 116.841 242.894 118.704C241.594 120.892 239.652 122.78 237.243 124.2C235.417 125.285 233.762 125.99 230.264 127.272L228.912 127.771C225.982 128.86 224.127 129.686 222.331 130.79C214.785 135.436 213.012 137.592 203.699 154.214C200.008 160.818 196.27 165.1 192.234 167.773C189.262 169.741 187.244 170.447 182.113 171.743C180.64 172.076 179.205 172.514 177.825 173.053C174.175 174.551 168.641 176.125 161.27 177.882C157.034 178.883 152.783 179.838 148.517 180.748C146.312 181.232 143.878 182.236 141.17 183.719C138.529 185.205 136 186.819 133.594 188.552C132.336 189.437 128.383 192.294 128.068 192.522C128.053 192.533 128.041 192.542 128.026 192.553C126.569 193.63 125.046 194.645 123.462 195.594C122.023 196.419 114.5 200.312 112.195 201.594C106.647 204.659 101.424 208.103 96.5817 211.889C90.0708 216.968 89.3103 220.673 92.2119 225.632C92.6863 226.439 93.1975 227.232 93.7445 228.008L94.2944 228.824C95.1834 230.087 95.971 231.397 96.6519 232.745C98.3367 236.201 98.6409 238.726 97.7576 240.775C97.0439 242.422 95.8388 243.545 93.066 245.499C92.3991 245.964 91.7088 246.363 89.9655 247.26C87.6723 248.436 86.6369 249.127 85.6892 250.342C84.4432 251.926 83.8056 254.129 83.8056 257.316C83.8056 261.66 83.0217 264.895 81.4363 267.559C80.1552 269.714 78.5991 271.289 75.5279 273.804C71.3921 277.197 68.5958 287.675 68.5958 297.155C68.5958 298.499 68.2568 299.785 67.6021 300.994C67.6017 300.995 67.6019 300.996 67.6027 300.996ZM232.89 301C232.544 301 232.244 300.761 232.166 300.424L231.656 298.216C229.854 290.411 229.287 285.64 230.053 280.332C230.463 277.548 230.504 275.685 230.375 272.988C230.27 270.852 230.275 270.261 230.486 269.325C230.942 267.261 232.498 265.231 236.564 261.482C241.87 256.586 243.736 254.086 248.147 247.01C248.937 245.743 249.51 244.865 250.124 243.987C250.651 243.228 251.189 242.518 251.745 241.827C253.581 239.571 255.857 237.785 261.596 233.758C268.159 229.15 270.663 227.105 272.202 224.576C272.611 223.904 272.962 223.232 273.331 222.464C273.63 221.818 273.92 221.17 274.202 220.52C276.326 215.749 278.888 213.833 287.599 211.971C290.518 211.347 299.62 209.509 300.106 209.408C309.577 207.44 314.923 205.875 319.691 203.36C323.119 201.55 323.108 201.555 335.872 195.426L337.393 194.696C343.377 191.816 347.396 189.8 350.69 188C352.45 187.044 354.167 186.035 355.838 184.976C357.085 184.169 358.328 183.356 359.564 182.538C362.38 180.687 365.426 179.084 368.652 177.758C368.815 177.69 368.994 177.811 368.994 177.988C368.994 178.089 368.933 178.181 368.839 178.219C365.677 179.52 362.692 181.091 359.933 182.908C360.038 182.84 357.148 184.751 356.2 185.356C354.52 186.423 352.793 187.439 351.023 188.403C347.718 190.208 343.693 192.224 337.697 195.109L336.176 195.843C323.423 201.963 323.435 201.958 320.013 203.763C315.175 206.317 309.781 207.896 300.252 209.874C299.766 209.974 290.664 211.813 287.757 212.432C283.059 213.44 280.064 214.592 278.133 216.032C276.577 217.193 275.794 218.365 274.758 220.688L273.881 222.641C273.54 223.371 273.158 224.087 272.734 224.787C271.143 227.403 268.616 229.467 261.982 234.123C256.29 238.116 254.026 239.892 252.242 242.091C251.678 242.788 251.144 243.5 250.639 244.227C250.025 245.095 249.463 245.969 248.679 247.227C244.245 254.335 242.35 256.865 237.003 261.799C233.007 265.495 231.504 267.453 231.065 269.412C230.866 270.3 230.866 270.871 230.966 272.964C231.094 275.69 231.048 277.572 230.644 280.389C229.883 285.631 230.445 290.368 232.241 298.125L232.895 300.994C232.896 300.997 232.893 301 232.89 301ZM188.086 301C187.496 301 187.092 300.406 187.308 299.857L187.671 298.936C188.279 297.352 188.8 295.682 189.238 293.944C190.789 287.834 191.151 282.602 191.151 274.12C191.151 271.38 190.063 269.441 188.735 269.441C187.015 269.441 184.664 272.133 182.341 277.639C176.614 291.247 169.103 297.64 157.228 297.64C144.112 297.64 140.111 296.992 128.902 292.797C127.007 292.083 125.167 291.275 123.392 290.378C121.666 289.514 115.916 286.264 114.711 285.712C112.254 284.579 110.616 284.411 109.024 285.237C108.656 285.429 108.287 285.674 107.913 285.981C107.111 286.633 106.269 287.251 105.392 287.834C104.801 288.231 104.205 288.621 103.602 289.005L103.017 289.389C98.1495 292.567 96.3887 294.846 96.3887 299.56C96.3887 299.862 96.3843 300.158 96.374 300.452C96.3633 300.76 96.1072 301 95.7987 301C95.4621 301 95.1958 300.716 95.2064 300.38C95.215 300.109 95.2187 299.837 95.2187 299.56C95.2187 294.51 97.1667 291.986 102.291 288.635C102.68 288.378 103.07 288.122 103.461 287.867C103.947 287.56 104.298 287.325 104.649 287.095C105.498 286.53 106.312 285.931 107.088 285.299C107.521 284.949 107.954 284.656 108.399 284.426C110.428 283.37 112.493 283.586 115.284 284.872C116.542 285.453 122.321 288.712 124 289.557C125.738 290.435 127.539 291.225 129.394 291.923C140.433 296.056 144.27 296.68 157.228 296.68C168.489 296.68 175.649 290.584 181.247 277.322C183.728 271.442 186.313 268.481 188.741 268.481C190.964 268.481 192.327 270.909 192.327 274.12C192.327 282.664 191.959 287.944 190.397 294.136C189.946 295.912 189.414 297.606 188.788 299.224C188.555 299.846 188.321 300.435 188.094 300.995C188.093 300.998 188.089 301 188.086 301ZM101.289 301C101.068 301 100.935 300.755 101.055 300.569L101.069 300.549C102.461 298.477 103.735 296.353 104.889 294.184C106.486 291.165 108.27 289.557 110.294 289.135C112.482 288.679 114.477 289.49 117.641 291.597C120.818 293.709 121.192 293.93 122.163 294.045C123.099 294.151 124.667 294.592 127.346 295.461C128.107 295.701 133.653 297.549 135.449 298.125C137.244 298.701 138.871 299.205 140.415 299.651C141.505 299.969 142.548 300.258 143.546 300.519C143.812 300.588 143.762 301 143.487 301C143.467 301 143.447 300.997 143.428 300.992C142.407 300.726 141.34 300.431 140.216 300.102C138.547 299.614 136.887 299.104 135.238 298.571C133.436 297.995 127.885 296.152 127.13 295.907C124.497 295.053 122.947 294.621 122.081 294.515C120.947 294.386 120.601 294.179 117.273 291.971C114.248 289.955 112.382 289.197 110.434 289.6C108.621 289.975 106.959 291.482 105.427 294.376C104.249 296.592 102.945 298.762 101.52 300.877C101.468 300.954 101.382 301 101.289 301ZM168.525 301C168.279 301 168.223 300.599 168.456 300.52C170.262 299.908 171.936 299.054 173.409 297.99C174.315 297.338 175.351 296.33 176.532 294.971C177.147 294.271 177.79 293.483 178.527 292.552C179.02 291.931 179.507 291.307 179.99 290.68L180.265 290.32L180.809 289.615C181.411 288.82 182.045 288.042 182.71 287.282C183.324 286.595 183.775 286.211 184.137 286.101C184.734 285.923 185.009 286.331 185.009 287.08L185.015 288.093C185.044 291.41 184.968 293.527 184.605 295.931C184.382 297.597 183.939 299.238 183.286 300.825C183.242 300.931 183.138 301 183.023 301C182.818 301 182.679 300.789 182.757 300.598C183.385 299.066 183.809 297.482 184.02 295.874C184.383 293.493 184.459 291.395 184.43 288.098L184.424 287.08C184.424 286.615 184.377 286.543 184.336 286.552C184.126 286.619 183.722 286.96 183.184 287.56C182.525 288.314 181.897 289.086 181.3 289.874L180.762 290.575L180.481 290.935C179.995 291.562 179.507 292.19 179.019 292.816C178.281 293.752 177.626 294.544 177.006 295.255C175.801 296.637 174.742 297.674 173.789 298.35C172.251 299.466 170.494 300.359 168.591 300.989C168.57 300.996 168.548 301 168.525 301ZM59.4143 300.931C59.3677 300.975 59.3054 301 59.2408 301C59.0032 301 58.8898 300.696 59.0591 300.529C60.6975 298.915 61.5759 296.708 61.5759 293.8C61.5759 284.872 61.5525 285.472 62.1726 283.831C62.5236 282.904 63.0501 282.036 64.0855 280.648C64.3312 280.312 66.9637 276.904 68.0518 275.436C69.8301 273.05 74.5101 267.516 75.1945 266.527C77.2303 263.609 77.9557 260.738 77.9557 254.921C77.9557 251.153 79.4181 248.105 82.6941 243.67L84.3555 241.447C84.8707 240.757 85.3565 240.053 85.8121 239.335C86.7598 237.823 87.2628 236.561 87.3447 235.361C87.4617 233.547 86.5843 231.862 84.4783 230.129C81.4773 227.672 79.4474 227.523 77.9264 229.241C76.6862 230.643 75.8906 232.956 74.9664 237.147C74.9 237.427 74.0539 241.25 73.9843 241.529C73.7354 242.529 73.5113 243.275 73.2582 243.948C72.4684 246.07 71.0937 247.601 68.3677 249.833L66.4606 251.369C62.7284 254.436 60.7979 256.894 59.8151 260.729L59.1365 263.378C58.6276 265.346 58.2239 266.757 57.7735 268.149C55.6266 274.744 52.1283 280.615 44.5586 289.615C40.2544 294.737 38.2643 298.358 38.1717 300.7C38.1652 300.864 38.0339 301 37.8691 301C37.7112 301 37.5811 300.875 37.5864 300.717C37.6703 298.238 39.7145 294.535 44.0789 289.346C51.6077 280.384 55.0767 274.562 57.206 268.025C57.6565 266.642 58.0543 265.241 58.5632 263.277L59.2418 260.633C60.2538 256.687 62.2428 254.153 66.0511 251.033C66.4196 250.726 67.7125 249.689 67.9523 249.492C70.6257 247.313 71.942 245.835 72.7024 243.809C73.2158 242.313 73.6201 240.794 73.9134 239.259L74.3872 237.065C75.3349 232.793 76.1422 230.441 77.4526 228.958C79.2075 226.966 81.6645 227.144 84.8878 229.793C87.1107 231.617 88.0584 233.432 87.9297 235.39C87.842 236.667 87.3155 237.987 86.3327 239.556C85.8717 240.284 85.3801 240.998 84.8585 241.697L83.1972 243.919C79.968 248.287 78.5406 251.263 78.5406 254.921C78.5406 260.815 77.7919 263.767 75.7034 266.767C75.0014 267.775 70.3157 273.319 68.5549 275.685C67.4609 277.154 64.8285 280.572 64.5886 280.898C63.5766 282.252 63.0676 283.092 62.7342 283.97C62.1375 285.544 62.1609 284.978 62.1609 293.8C62.1609 296.888 61.1929 299.228 59.4143 300.931ZM199.4 13.0048C199.684 13.0048 199.869 13.3043 199.738 13.5572C199.604 13.8164 199.464 14.0825 199.318 14.3584C197.036 18.7071 196.13 21.6303 196.13 26.4446C196.13 30.1117 194.901 32.0125 192.245 32.7085C190.221 33.2365 188.899 33.1789 181.967 32.5021C175.409 31.8685 171.017 31.7504 165.956 32.3759C165.648 32.4139 165.349 32.4838 165.052 32.5728C160.994 33.7895 150.201 35.8044 146.698 35.8044C140.175 35.8044 125.194 34.422 115.038 32.4397C113.372 32.0861 111.637 32.0093 109.934 32.2137C108.231 32.4181 106.595 32.8997 105.123 33.6301C102.753 34.7484 100.975 36.0444 96.9912 39.3756C93.3175 42.4427 91.4163 43.8059 88.9184 44.8955C84.7708 46.7146 82.3548 48.5674 81.0795 50.785C80.0148 52.6329 79.7165 54.5481 79.7165 58.1241C79.7165 60.236 78.1662 61.3352 74.1883 62.7992C74.2468 62.7752 72.4509 63.428 71.942 63.62C66.8057 65.5687 64.5067 67.5991 64.5067 71.5638C64.5067 77.5733 61.6637 80.7893 54.363 84.9844L51.6954 86.4916C50.584 87.1156 49.765 87.5956 48.9635 88.0755C48.4253 88.4019 47.9164 88.7187 47.4309 89.0355C43.2423 91.7331 40.996 96.0146 38.3284 105.01C37.9599 106.243 36.3979 111.73 35.9475 113.237C35.0414 116.353 34.027 119.447 32.9056 122.515C32.1041 124.675 30.2731 129.748 30.004 130.449C29.3898 132.081 29.0446 132.82 28.5649 133.483C28.0852 134.155 24.5577 137.841 21.1706 142.252L18.495 145.78C18.3355 145.991 18 145.878 18 145.614C18 145.554 18.0197 145.495 18.0561 145.447L20.6793 141.993C22.9916 138.995 25.4526 136.076 28.056 133.243C27.8805 133.483 28.8457 131.899 29.4483 130.305C29.7115 129.614 31.5425 124.541 32.344 122.371C33.4145 119.477 34.3563 116.568 35.3801 113.122C35.8247 111.619 37.3924 106.133 37.7551 104.894C40.4578 95.7986 42.7392 91.4451 47.0682 88.6563C47.5596 88.3347 48.0744 88.018 48.6184 87.6916C49.4257 87.202 50.2564 86.7268 51.3678 86.098L54.0237 84.5908C61.1898 80.4773 63.9217 77.3861 63.9217 71.5638C63.9217 67.3687 66.3787 65.1991 71.6963 63.188C72.211 62.9912 74.0128 62.3384 73.9485 62.3576C77.7275 60.9656 79.1315 59.972 79.1315 58.1241C79.1315 54.4761 79.4415 52.5081 80.5472 50.5834C81.8868 48.2602 84.3905 46.3354 88.6434 44.4731C91.0711 43.4123 92.9431 42.0731 96.921 38.7468C100.595 35.6748 102.397 34.3644 104.83 33.2125C106.367 32.4507 108.075 31.9484 109.852 31.7349C111.629 31.5214 113.44 31.6011 115.179 31.9693C125.281 33.9468 140.216 35.3244 146.698 35.3244C150.132 35.3244 160.896 33.3107 164.929 32.1024C165.226 32.0134 165.525 31.9436 165.833 31.9055C170.969 31.27 175.414 31.3837 182.037 32.0269C188.841 32.6893 190.168 32.7469 192.07 32.2525C194.445 31.6285 195.545 29.9245 195.545 26.4446C195.545 21.5982 196.457 18.6226 199.403 13.0101C199.404 13.0077 199.402 13.0048 199.4 13.0048ZM214.098 13.3001C214.096 13.1374 214.227 13.0048 214.39 13.0048C214.55 13.0048 214.681 13.1339 214.683 13.2943C214.718 15.9045 214.84 18.6509 215.06 22.3166C215.335 26.9726 215.434 29.3101 215.434 32.6845C215.434 37.3932 212.696 41.0651 207.771 43.8011C203.951 45.9275 199.031 47.3818 193.538 48.2794C191.35 48.5386 188.027 48.5482 180.27 48.3898C176.328 48.3082 174.801 48.2842 173.022 48.2842C171.402 48.2842 170.115 48.4906 168.559 48.937C168.044 49.081 165.897 49.7722 165.295 49.9498C161.463 51.0778 157.345 51.6442 150.793 51.6442C146.054 51.6442 142.849 50.9818 137.654 49.2922L135.794 48.6922C128.452 46.3546 123.351 46.2202 114.044 49.2298C107.521 51.337 103.438 53.6457 101.01 56.3385C99.1674 58.3832 98.4771 60.0824 97.5353 63.9224C96.8216 66.8455 96.4062 68.1175 95.4878 69.7447C94.5226 71.439 93.1654 72.5334 91.3519 73.2102C89.9889 73.7238 88.8072 73.9302 85.8998 74.2614C80.6115 74.871 78.4295 75.7445 76.7681 78.8597C74.5978 82.93 72.252 85.5172 68.4496 88.3443C67.0456 89.3907 60.7628 93.6339 59.1424 94.7858C54.3454 98.1938 51.0403 103.123 48.203 110.131C47.5204 111.832 46.8826 113.544 46.2901 115.267C46.2843 115.291 44.9681 119.093 44.6054 120.115C39.6388 133.963 34.1457 145.531 29.3196 149.491C27.6816 150.835 26.3595 152.198 23.2357 155.711C21.4391 157.74 19.9146 159.335 18.4639 160.632C18.2833 160.794 18 160.664 18 160.422C18 160.341 18.0343 160.265 18.0943 160.211C19.6715 158.792 21.3949 156.973 23.5457 154.55C25.9032 151.9 27.2428 150.518 28.9101 149.155C33.6309 145.276 39.1123 133.728 44.0438 119.971C44.4065 118.963 45.7168 115.157 45.7285 115.133C46.4364 113.098 47.0214 111.518 47.6473 109.978C50.5138 102.898 53.8658 97.901 58.7621 94.4258C60.3884 93.2643 66.6595 89.0259 68.0576 87.9939C71.8016 85.21 74.0947 82.6708 76.2299 78.6677C77.2127 76.8293 78.5991 75.639 80.4419 74.895C81.8458 74.3334 83.1562 74.0934 86.0168 73.7622C88.6727 73.4598 89.8193 73.2582 91.1062 72.7734C92.7969 72.1446 94.0487 71.1318 94.9555 69.5431C95.8505 67.9591 96.26 66.7111 96.962 63.8312C97.9214 59.924 98.6292 58.1721 100.536 56.0553C103.04 53.2761 107.211 50.9194 113.833 48.7786C123.281 45.7259 128.534 45.8651 136.004 48.2458L137.87 48.8506C143.001 50.5162 146.136 51.1642 150.793 51.1642C157.28 51.1642 161.334 50.6074 165.102 49.4986C165.687 49.3258 167.839 48.6346 168.366 48.4858C169.855 48.0298 171.433 47.7988 173.022 47.8042C174.807 47.8042 176.339 47.8282 181.253 47.929C187.998 48.0682 191.315 48.0586 193.439 47.809C198.85 46.921 203.699 45.4907 207.443 43.4075C212.217 40.7483 214.849 37.2252 214.849 32.6845C214.849 29.3245 214.75 26.9918 214.44 21.7887C214.243 18.4345 214.127 15.8318 214.098 13.3001ZM72.8162 13.4755C72.8782 13.2041 73.1153 13.0048 73.3937 13.0048C73.7606 13.0048 74.0351 13.3432 73.9467 13.6994C73.5591 15.262 73.0607 16.4374 72.3339 17.5503C70.9709 19.6527 70.6667 20.3103 69.2568 23.8046C68.9444 24.6292 68.5653 25.4358 68.122 26.219C66.8116 28.4557 64.6588 30.4429 60.4761 33.0637C55.7904 36.006 52.1283 41.0075 48.7588 48.2074C47.3548 51.1978 43.6401 60.5096 43.1195 61.652C41.5459 65.0887 39.2819 67.7479 33.9761 73.0182L32.4083 74.5734C28.8867 78.0965 26.9387 80.3669 25.5522 82.8052C24.307 84.9997 21.799 87.2025 18.7472 89.1357C18.4211 89.3422 18 89.1052 18 88.7192C18 88.5486 18.0879 88.3902 18.2316 88.2982C21.1257 86.4459 23.3536 84.4079 24.4934 82.3972C25.9325 79.8677 27.9273 77.5493 31.5016 73.9686L33.0693 72.4038C38.2992 67.2199 40.5104 64.6183 42.0197 61.316C42.5345 60.1976 46.255 50.881 47.6649 47.8618C51.1105 40.5131 54.8602 35.382 59.7625 32.3053C63.8106 29.7613 65.8464 27.8894 67.0631 25.8014C67.4434 25.1534 67.7417 24.5054 68.1454 23.5022C69.5786 19.9503 69.9003 19.2639 71.3043 17.0991C72.0194 15.9568 72.5284 14.7362 72.8162 13.4755ZM78.1641 13.2268C78.1962 13.0972 78.3128 13.0048 78.4463 13.0048C78.6343 13.0048 78.7726 13.1811 78.7275 13.3636C77.7998 17.1157 77.0842 19.1242 76.1597 20.3295C75.2371 21.5901 74.4352 22.9076 73.7613 24.2702C73.0183 25.7102 72.3339 27.2462 71.7138 28.7821C71.5291 29.2289 71.3686 29.6491 70.7456 30.668C70.4596 31.1358 70.0841 31.5423 69.6563 31.8851C67.2948 33.7775 65.0114 35.7346 62.8103 37.7532C60.7745 39.654 59.3296 41.2427 58.6276 42.3899C58.0718 43.3019 57.4225 45.2651 56.5158 48.6154C56.1414 50.0074 54.3805 56.8473 53.8775 58.7288C51.7539 66.6247 49.999 71.5398 48.0861 74.0886C43.605 80.0645 41.8618 81.6293 26.3946 93.8163C23.9798 95.7633 21.2795 97.456 18.3562 98.8556C18.1907 98.9348 18 98.8136 18 98.6301C18 98.5336 18.0555 98.4457 18.1424 98.4037C20.9916 97.0276 23.6253 95.3711 25.9851 93.4706C41.4289 81.3125 43.137 79.7669 47.583 73.839C49.4549 71.3526 51.1982 66.4615 53.3042 58.6232C53.8073 56.7465 55.5681 49.9066 55.9425 48.5146C56.8609 45.1115 57.5219 43.1387 58.1069 42.1787C58.8323 40.9787 60.3065 39.366 62.3715 37.4316C62.898 36.9372 63.4596 36.4236 64.0446 35.9052C65.4486 34.6572 66.9461 33.3997 68.4496 32.1805C68.7479 31.9412 69.033 31.7111 69.3987 31.4081C70.0726 30.8499 70.5715 30.1131 70.8869 29.2969C71.5683 27.533 72.3459 25.7949 73.2172 24.0878C73.9062 22.7017 74.7257 21.3616 75.6683 20.0799C76.5403 18.9314 77.2435 16.9382 78.1641 13.2268ZM66.9695 13.0048C67.2605 13.0048 67.4441 13.3142 67.2895 13.5607C66.0055 15.6074 63.8262 17.4198 60.9324 18.9087C56.7205 21.0783 51.2801 22.3646 46.6645 22.3646C41.4581 22.3646 39.7616 25.7246 39.7967 32.6941C39.7967 33.5101 39.8201 34.2156 39.8669 35.5692C39.9254 37.1532 39.9371 37.7052 39.9371 38.4444C39.9371 41.1947 39.4925 43.8683 38.7613 46.3642C38.4168 47.4974 37.9969 48.6143 37.5036 49.7098C36.1489 52.2511 34.7839 54.7887 33.4086 57.3225C29.5765 64.3594 25.696 71.3786 21.7673 78.3797C20.8649 80.0273 19.7577 81.5935 18.4637 83.0535C18.3002 83.238 18 83.1208 18 82.8743C18 82.8081 18.0242 82.7443 18.0678 82.6945C19.3069 81.2791 20.3717 79.7662 21.2467 78.1781C26.2288 69.2776 31.1331 60.3479 35.9592 51.3898C36.2692 50.8138 36.5383 50.3194 37.3866 48.5578C38.6748 45.2903 39.3378 41.8786 39.3521 38.4444C39.3521 37.7148 39.3346 37.1676 39.2819 35.5884C39.2351 34.23 39.2117 33.5197 39.2117 32.7037C39.1942 29.4445 39.5218 27.1262 40.4227 25.3406C41.5576 23.0942 43.5758 21.8895 46.6645 21.8895C51.1689 21.8895 56.4982 20.6271 60.6224 18.5055C63.5859 16.9756 65.7668 15.1102 66.9608 13.0099C66.9626 13.0067 66.9659 13.0048 66.9695 13.0048ZM232.385 13.3582C232.344 13.1779 232.481 13.0048 232.666 13.0048C232.801 13.0048 232.918 13.1006 232.947 13.232C233.99 17.8552 234.173 19.1294 234.253 21.7887C234.939 26.2204 235.012 30.7017 234.47 35.1468C233.908 39.3612 232.656 42.8315 230.591 45.2987C223.958 53.2185 207.309 59.324 191.742 59.324C188.764 59.324 185.617 59.4584 182.201 59.7224C177.432 60.1121 172.677 60.6179 167.945 61.2392C155.332 62.804 151.764 63.164 146.698 63.164C142.65 63.164 139.561 62.66 134.009 61.292L132.383 60.8936C131.57 60.6968 130.897 60.5384 130.248 60.404C125.568 59.42 121.929 59.4248 117.554 60.7496C115.21 61.4349 113.286 62.8437 112.189 64.6759C111.253 66.1399 110.727 67.5847 109.838 70.8342C108.96 74.0214 108.469 75.4038 107.504 76.9013C106.931 77.8594 106.124 78.7103 105.132 79.4007C104.141 80.0912 102.987 80.6064 101.741 80.9141C99.8578 81.3877 98.0032 81.9355 96.1839 82.5556C92.3523 83.8996 90.2756 85.2292 88.1111 87.5812C87.333 88.4211 87.5085 88.2051 84.9346 91.3731C83.7763 92.7987 82.2085 94.1571 79.9739 95.7602C78.798 96.605 73.7086 99.9985 72.4392 100.896C68.1278 103.944 65.08 106.723 62.7108 110.083C60.2421 113.587 58.1479 118.867 56.1121 126.048C55.6032 127.838 55.1059 129.715 54.5677 131.875L53.8775 134.659L53.2398 137.275C52.1868 141.575 51.6194 143.649 51.0344 145.079C47.0565 154.89 40.9375 165.316 35.1636 169.655C32.1743 171.911 30.4252 173.049 28.6702 173.908C28.1437 174.167 27.5938 174.407 26.9621 174.661C26.7047 174.767 21.3461 176.773 18.7137 177.858L18.346 178.011C18.1814 178.08 18 177.959 18 177.781C18 177.679 18.0612 177.588 18.155 177.55L18.4563 177.426C21.1004 176.341 26.4531 174.335 26.7047 174.234C27.27 174.006 27.8242 173.759 28.366 173.495C30.0859 172.655 31.8058 171.532 34.7658 169.305C40.4461 165.033 46.5241 154.66 50.4845 144.926C51.0519 143.524 51.6194 141.46 52.6665 137.184L53.31 134.563C53.9893 131.678 54.7343 128.804 55.5447 125.942C57.5921 118.713 59.6981 113.395 62.2077 109.843C64.612 106.43 67.7066 103.613 72.0531 100.531C73.3342 99.629 78.4178 96.2354 79.5878 95.3954C81.7932 93.8211 83.3259 92.4915 84.4432 91.1091C87.0347 87.922 86.8534 88.1427 87.6431 87.2884C89.8661 84.874 92.0305 83.4916 95.9558 82.114C97.4826 81.5765 99.3137 81.0389 101.566 80.4533C102.738 80.1651 103.825 79.6812 104.758 79.032C105.691 78.3827 106.451 77.5822 106.989 76.6805C107.919 75.231 108.404 73.8726 109.346 70.4454C110.171 67.4359 110.703 65.9671 111.674 64.4551C112.836 62.5171 114.871 61.0263 117.349 60.2984C121.853 58.94 125.597 58.9352 130.394 59.9384C131.049 60.0776 131.728 60.2312 132.547 60.4328L134.729 60.9656C139.684 62.1848 142.72 62.684 146.698 62.684C151.723 62.684 155.28 62.324 167.863 60.764C172.603 60.141 177.365 59.6336 182.142 59.2424C185.582 58.9832 188.747 58.844 191.742 58.844C207.127 58.844 223.595 52.8057 230.112 45.0299C232.112 42.6395 233.329 39.2412 233.891 35.094C234.382 31.3789 234.318 27.4046 233.902 23.6222C233.825 22.9321 233.734 22.2429 233.63 21.5552C233.59 21.2951 233.57 21.0325 233.567 20.7695C233.544 18.906 233.336 17.6001 232.385 13.3582ZM28.9813 13.2093C29.0187 13.0886 29.1308 13.0048 29.2571 13.0048C29.4509 13.0048 29.5893 13.193 29.5319 13.3782C28.4937 16.7281 27.9774 17.9924 26.459 20.7807C25.3182 22.8782 24.897 25.1918 25.0433 27.9278C25.1603 30.0061 25.4586 31.6237 26.3771 35.67C27.0147 38.4924 27.2955 39.8796 27.5119 41.5259C28.0735 45.7979 27.6523 49.2442 25.874 52.4649C23.5734 56.6197 21.1175 60.7153 18.5099 64.746C18.3595 64.9785 18 64.8717 18 64.5948C18 64.5412 18.0155 64.4888 18.0445 64.4438C20.6248 60.4452 23.0564 56.3832 25.3358 52.2633C27.0732 49.1338 27.4827 45.7691 26.927 41.5739C26.7164 39.9419 26.4356 38.5692 25.7979 35.7564C24.8795 31.6909 24.5694 30.0541 24.4583 27.947C24.3062 25.1438 24.7391 22.7582 25.9208 20.5887C27.4348 17.8123 27.9368 16.5722 28.9813 13.2093ZM192.688 13.0048C192.893 13.0048 193.031 13.2122 192.951 13.4002C192.214 15.1236 191.309 16.7956 190.245 18.3999C188.747 20.6559 187.899 22.4558 187.401 24.1502L187.167 25.0142L187.004 25.7102C186.946 26.0626 186.798 26.4012 186.571 26.7038C186.138 27.1982 185.442 27.3182 183.57 27.3038C184.108 27.3038 177.808 27.1646 174.777 27.1646C168.811 27.1646 163.984 27.5582 157.544 28.3933C147.675 29.6701 147.172 29.7229 143.703 29.6029C142.126 29.5506 140.559 29.3754 139.023 29.0797C128.668 27.083 112.008 26.267 107.012 27.635C105.421 28.0669 103.572 28.9789 101.443 30.3181C100.128 31.1548 98.8514 32.0323 97.6172 32.9485C96.7982 33.5485 92.2528 37.0284 91.311 37.6716C90.4627 38.2476 86.5258 41.2331 86.1338 41.5211C85.2666 42.164 84.3791 42.7882 83.4721 43.3931C80.553 45.3275 78.2657 46.369 76.499 46.369C74.4399 46.393 73.9719 46.369 73.4922 46.177C72.8311 45.9083 72.6147 45.3515 72.8311 44.4635C73.264 42.7211 75.446 39.2604 80.3424 32.5597C83.671 28.0093 85.853 23.9198 87.2336 19.9839C88.0616 17.6225 88.3545 16.4868 88.9284 13.2466C88.953 13.1075 89.0741 13.0048 89.2154 13.0048C89.3962 13.0048 89.5332 13.1684 89.5017 13.3464C88.9279 16.5867 88.6324 17.7424 87.801 20.1183C86.4029 24.0926 84.1975 28.2253 80.8396 32.8093C75.9842 39.4524 73.8198 42.8939 73.4103 44.5595C73.2348 45.2555 73.3635 45.5867 73.7554 45.7451C74.1064 45.8891 74.5452 45.9131 75.7912 45.8891C78.0844 45.8891 80.2898 44.8811 83.1036 43.0187C83.9225 42.4763 84.7825 41.8715 85.7419 41.1659C86.128 40.8827 90.0767 37.8876 90.9366 37.302C91.8667 36.6636 96.4004 33.1981 97.2252 32.5885C98.6292 31.5565 99.8869 30.6877 101.086 29.9341C103.262 28.5661 105.164 27.6302 106.825 27.179C111.949 25.7774 128.709 26.5934 139.157 28.6141C140.661 28.9021 142.164 29.0701 143.726 29.1229C147.142 29.2429 147.646 29.1901 157.456 27.9182C163.92 27.0782 168.781 26.6846 174.772 26.6846C177.813 26.6846 184.126 26.8286 183.576 26.8238C185.255 26.8382 185.822 26.7422 186.091 26.4254C186.226 26.2718 186.325 26.0414 186.43 25.6094L186.594 24.923L186.828 24.035C187.343 22.307 188.209 20.4639 189.73 18.1695C190.788 16.5768 191.682 14.9213 192.422 13.1811C192.468 13.0745 192.572 13.0048 192.688 13.0048ZM187.248 13.0048C187.652 13.0048 187.928 13.4132 187.774 13.7866C184.499 21.7348 182.32 23.5646 176.532 23.5646C173.9 23.5646 170.554 23.7182 159.749 24.2846L158.854 24.3326C149.728 24.8078 145.124 25.0046 142.018 25.0046C138.888 25.0046 134.273 24.5438 125.135 23.4302L124.234 23.3198C113.459 22.0047 110.118 21.6447 107.504 21.6447C104.9 21.6447 103.233 22.1294 101.092 23.2478C101.034 23.2766 100.039 23.8094 99.7465 23.9534C98.325 24.6734 97.2194 25.0046 95.8037 25.0046C94.1657 25.0046 93.3994 24.3038 93.3994 22.979C93.3994 22.4798 93.493 21.8799 93.6919 21.0111C93.7855 20.6175 94.2184 18.8991 94.3178 18.4575C94.737 16.6905 95.0154 15.1315 95.1404 13.5562C95.1649 13.2471 95.4203 13.0048 95.7305 13.0048C96.0658 13.0048 96.3331 13.2864 96.3067 13.6207C96.179 15.2387 95.8961 16.8339 95.4703 18.6447C95.3591 19.0959 94.9321 20.8047 94.8443 21.1935C94.6881 21.7808 94.5961 22.3783 94.5694 22.979C94.5694 23.795 94.8385 24.0446 95.8037 24.0446C96.9678 24.0446 97.8804 23.771 99.1381 23.1326C99.4131 22.9982 100.396 22.475 100.46 22.4414C102.777 21.2319 104.649 20.6847 107.504 20.6847C110.206 20.6847 113.529 21.0399 124.41 22.3694L125.305 22.4798C134.372 23.5838 138.976 24.0446 142.018 24.0446C145.089 24.0446 149.687 23.8478 158.778 23.3726L159.679 23.3246C170.525 22.7582 173.859 22.6046 176.532 22.6046C181.688 22.6046 183.582 21.0221 186.717 13.3653C186.805 13.1502 187.015 13.0048 187.248 13.0048ZM100.7 13.1318C100.751 13.0529 100.839 13.0048 100.933 13.0048C101.152 13.0048 101.284 13.2494 101.165 13.4341C100.185 14.9543 99.8978 15.4955 99.8226 15.976C99.7348 16.5135 100.068 16.7631 101.18 16.9167C102.233 17.0607 103.432 17.0847 107.504 17.0847C111.025 17.0847 115.108 17.3535 119.993 17.8623C122.304 18.1023 124.691 18.3903 127.674 18.7695C141.714 20.5455 140.836 20.4447 143.369 20.4447C157.421 20.4447 173.689 19.3695 178.732 17.1135C180.369 16.3814 181.613 15.0377 182.514 13.1705C182.563 13.0698 182.664 13.0048 182.776 13.0048C182.984 13.0048 183.123 13.219 183.031 13.4059C182.084 15.3436 180.771 16.7492 179.007 17.5359C173.841 19.8495 157.555 20.9247 143.369 20.9247C140.789 20.9247 141.708 21.0303 127.586 19.2447C124.603 18.8607 122.222 18.5823 119.923 18.3423C115.062 17.8335 110.996 17.5647 107.504 17.5647C103.385 17.5647 102.18 17.5407 101.086 17.3871C99.6939 17.1951 99.1089 16.7535 99.2434 15.9136C99.3347 15.3423 99.632 14.7848 100.7 13.1318ZM145.481 13.0048C145.48 13.0048 145.48 13.006 145.481 13.0062C148.807 13.7925 151.543 14.2048 153.718 14.2048C159.309 14.2048 163.459 13.8663 166.788 13.0135C166.81 13.0077 166.833 13.0048 166.856 13.0048C167.17 13.0048 167.229 13.4051 166.926 13.4822C163.534 14.3432 159.329 14.6848 153.718 14.6848C151.506 14.6848 148.748 14.2747 145.422 13.4915C145.126 13.422 145.178 13.0048 145.481 13.0048ZM59.3413 13.0048C59.3455 13.0048 59.3475 13.0099 59.3444 13.0128C57.666 14.5778 55.2823 15.5929 52.3214 16.1391C49.9931 16.5663 47.934 16.6575 44.7633 16.6191C44.4221 16.6118 44.0809 16.607 43.7396 16.6047C40.5982 16.6047 38.5566 16.0095 37.8312 14.2192C37.7159 13.9201 37.6427 13.6115 37.6126 13.2995C37.5971 13.1376 37.7298 13.0048 37.8923 13.0048C38.0505 13.0048 38.1786 13.1308 38.1955 13.2881C38.2261 13.5707 38.2898 13.8315 38.3869 14.0704C39.007 15.592 40.8263 16.1247 43.7396 16.1247L44.7692 16.1343C47.8989 16.1775 49.9171 16.0863 52.1927 15.6688C54.4847 15.2467 56.413 14.5371 57.9044 13.4926C58.3283 13.1957 58.8237 13.0048 59.3413 13.0048ZM18 113.016C18 112.885 18.106 112.779 18.2367 112.778C22.3666 112.767 24.7274 114.449 24.7274 118.123C24.7274 123.346 22.0404 130.984 18.5186 137.155C18.3756 137.405 18 137.302 18 137.014C18 136.965 18.0127 136.916 18.0369 136.874C21.4879 130.78 24.1424 123.255 24.1424 118.123C24.1424 114.748 22.067 113.242 18.2458 113.258C18.1115 113.258 18 113.15 18 113.016ZM18 116.429C18 116.287 18.1223 116.175 18.2627 116.197C18.8564 116.287 19.3258 116.487 19.6789 116.793C20.4979 117.504 20.6149 118.579 20.3575 120.432L20.2639 121.056C20.1406 121.673 20.0682 122.297 20.0475 122.923C20.0475 124.206 19.4436 126.533 18.5561 129.049C18.446 129.362 18 129.281 18 128.95C18 128.916 18.0058 128.882 18.0172 128.85C18.8794 126.407 19.4625 124.153 19.4625 122.923C19.4625 122.453 19.5093 122.083 19.6789 120.993L19.7725 120.374C20.0182 118.665 19.9129 117.691 19.2577 117.125C19.0043 116.904 18.6587 116.752 18.2132 116.675C18.0923 116.654 18 116.552 18 116.429ZM18.4382 209.835C18.2706 209.996 18 209.873 18 209.641C18 209.569 18.0291 209.499 18.0801 209.448C18.7398 208.782 19.2965 208.051 19.7374 207.272C20.5096 205.976 21.3052 204.258 22.405 201.565C26.9972 190.261 26.9854 188.797 22.5512 186.973C21.3059 186.464 19.9035 186.304 18.2796 186.499C18.1319 186.517 18 186.403 18 186.254C18 186.135 18.0868 186.032 18.2054 186.016C19.768 185.797 21.3766 185.982 22.8086 186.546C27.6289 188.523 27.6406 190.194 22.9549 201.714C21.8551 204.43 21.0536 206.163 20.2639 207.483C19.7918 208.334 19.177 209.126 18.4382 209.835ZM37.6791 229.961C38.6619 229.961 39.4574 229.851 42.5579 229.332L43.9502 229.107C48.7822 228.353 51.3912 228.483 52.4501 230.225C53.2574 231.545 52.1751 233.038 49.6714 234.872C48.7154 235.557 47.7239 236.209 46.6996 236.825C46.1497 237.161 43.839 238.548 43.3125 238.875C42.2244 239.547 41.5751 240.012 41.2826 240.329C40.5471 241.127 39.976 242.019 39.592 242.969C39.6329 242.873 37.2403 249.521 35.5205 253.634C33.941 257.402 32.2679 258.78 30.3608 257.758C29.1265 257.086 28.2198 255.722 26.4999 252.463C25.3416 250.246 25.0374 249.698 24.5109 248.911C21.8492 244.985 22.2295 237.439 24.4817 233.134C24.817 232.415 25.3664 231.777 26.0796 231.277C26.7929 230.778 27.6473 230.432 28.5649 230.273C30.08 229.956 31.408 229.913 35.4561 229.952L37.6791 229.961ZM37.6791 230.921C37.018 230.921 36.4564 230.921 35.4444 230.912C28.3836 230.849 26.769 231.185 25.5581 233.508C23.4346 237.574 23.066 244.812 25.5288 248.446C26.0904 249.276 26.3946 249.828 27.5763 252.084C29.1675 255.108 30.0566 256.442 31.0043 256.951C31.9637 257.47 33.0518 256.567 34.409 253.327C35.842 249.788 37.2013 246.229 38.4864 242.652C38.9099 241.609 39.5383 240.63 40.3466 239.753C40.7269 239.335 41.4289 238.841 42.6047 238.107C43.1429 237.771 45.4536 236.393 45.9976 236.057C47.1793 235.337 48.1036 234.728 48.8933 234.152C51.0168 232.601 51.8709 231.416 51.4088 230.657C50.701 229.496 48.4429 229.385 44.1666 230.048L42.7919 230.273C39.5803 230.806 38.7789 230.921 37.6791 230.921ZM240.075 301C239.952 301 239.841 300.919 239.802 300.802C237.847 295.095 237.664 294.191 237.664 291.88C237.664 290.282 237.588 288.871 237.412 286.437C237.044 281.479 237.032 279.957 237.564 278.244C238.272 275.968 240.027 274.836 243.221 274.836H258.431C260.818 274.836 261.467 275.724 261.9 278.248C261.958 278.628 261.976 278.714 262.011 278.882C262.503 281.45 263.649 282.52 267.206 282.52C269.335 282.52 270.447 282.712 270.967 283.178C271.412 283.576 271.412 283.869 271.178 285.064C270.681 287.589 271.47 289.312 275.565 291.688C279.263 293.824 282.369 294.261 285.247 293.306C287.47 292.567 289.184 291.309 292.22 288.506L292.864 287.915L293.501 287.325C294.013 286.856 294.54 286.399 295.081 285.952C296.718 284.631 298.61 283.54 300.679 282.722C301.568 282.357 301.685 282.309 303.99 281.46C307.559 280.149 309.261 279.3 310.858 277.802C312.396 276.362 313.59 275.474 314.777 274.903C316.638 274.015 317.971 273.88 322.78 273.88C326.278 273.88 328.957 271.807 333.31 266.685L334.959 264.751C335.58 264.031 336.094 263.455 336.592 262.932C341.195 258.074 347.929 257.94 354.574 263.393C357.815 266.047 360.523 272.719 362.553 281.877C363.987 288.346 364.959 295.718 365.157 300.699C365.164 300.865 365.031 301 364.866 301C364.708 301 364.579 300.877 364.573 300.72C364.371 295.766 363.41 288.412 361.98 281.964C359.974 272.906 357.289 266.292 354.165 263.729C347.759 258.473 341.435 258.602 337.048 263.229C336.562 263.743 336.053 264.314 335.439 265.029L333.795 266.959C329.32 272.215 326.553 274.36 322.78 274.36C318.077 274.36 316.807 274.485 315.076 275.32C313.952 275.858 312.794 276.712 311.302 278.119C309.629 279.684 307.869 280.562 304.23 281.901C303.119 282.29 302.023 282.706 300.942 283.149C298.927 283.943 297.085 285.004 295.49 286.288C294.73 286.914 293.998 287.562 293.296 288.232L292.653 288.827C289.564 291.683 287.803 292.975 285.469 293.747C282.392 294.77 279.081 294.309 275.232 292.077C270.944 289.595 270.072 287.685 270.599 284.987C270.798 283.97 270.798 283.739 270.54 283.499C270.166 283.168 269.171 283 267.206 283C263.327 283 261.964 281.738 261.432 278.959L261.315 278.316C260.923 276.002 260.42 275.32 258.431 275.32H243.221C240.296 275.32 238.775 276.3 238.132 278.364C237.617 280.01 237.635 281.517 237.997 286.408C238.153 288.23 238.237 290.054 238.249 291.88C238.249 294.124 238.428 295.023 240.346 300.616C240.41 300.803 240.272 301 240.075 301ZM248.1 301C247.966 301 247.849 300.908 247.819 300.778C247.097 297.748 246.934 295.812 247.076 293.877C247.1 293.541 247.135 293.186 247.182 292.735L247.316 291.506C247.515 289.677 247.609 288.16 247.609 286.12C247.609 283.749 248.463 282.396 250.071 282.079C251.464 281.8 253.324 282.338 255.453 283.519C259.338 285.688 263.637 289.792 265.135 292.749C267.925 298.24 273.395 300.28 284.756 300.28C289.786 300.28 293.133 299.152 296.847 296.498C297.696 295.893 305.657 289.298 309.132 286.898C313.35 283.984 316.017 283.255 321.195 282.904C324.424 282.688 325.863 282.472 327.887 281.772C330.566 280.836 333.362 279.141 336.603 276.352C340.95 272.628 344.354 272.071 346.823 274.288C348.765 276.031 350.017 279.367 350.813 284.004C351.24 286.485 351.363 287.719 351.737 292.346C351.881 294.119 351.838 294.877 351.226 300.736C351.211 300.884 351.086 301 350.937 301C350.764 301 350.63 300.847 350.648 300.675C351.253 294.876 351.296 294.114 351.152 292.375C350.778 287.767 350.655 286.538 350.234 284.071C349.455 279.525 348.227 276.261 346.396 274.615C344.196 272.642 341.172 273.136 337.036 276.688C333.731 279.52 330.87 281.248 328.115 282.208C326.021 282.943 324.529 283.163 321.329 283.379C316.181 283.725 313.625 284.426 309.512 287.267C306.061 289.648 298.105 296.243 297.228 296.862C293.413 299.589 289.933 300.76 284.756 300.76C273.184 300.76 267.498 298.638 264.597 292.936C263.14 290.071 258.917 286.034 255.12 283.917C253.119 282.803 251.399 282.309 250.206 282.544C248.919 282.799 248.194 283.946 248.194 286.12C248.194 288.175 248.1 289.706 247.901 291.549L247.767 292.778C247.714 293.224 247.685 293.57 247.655 293.906C247.52 295.789 247.678 297.681 248.382 300.641C248.425 300.823 248.287 301 248.1 301ZM315.035 301C314.8 301 314.678 300.72 314.838 300.548C316.509 298.758 319.737 295.238 320.791 294.136C323.997 290.786 328.425 288.194 332.14 287.445C336.241 286.624 338.867 288.141 338.867 291.88C338.867 293.782 338.844 294.341 338.451 300.722C338.442 300.876 338.314 301 338.16 301C337.991 301 337.858 300.854 337.869 300.686C338.26 294.334 338.282 293.769 338.282 291.88C338.282 288.463 336.024 287.162 332.28 287.915C328.706 288.635 324.383 291.165 321.253 294.429C320.182 295.544 316.884 299.146 315.23 300.916C315.179 300.971 315.11 301 315.035 301ZM308.65 138.302C308.649 138.302 308.648 138.303 308.649 138.304C310.661 139.604 312.743 140.75 315.339 142.022C315.959 142.329 320.264 144.374 321.393 144.95C327.986 148.31 330.168 151.358 328.618 157.108C327.77 160.238 325.968 162.436 323.125 164.039C320.885 165.301 318.404 166.084 313.718 167.188C306.716 168.844 305.716 169.103 302.709 170.202C301.128 170.778 299.601 171.449 298.14 172.209C291.641 175.602 286.967 175.904 281.784 173.783C280.487 173.254 276.905 171.337 274.386 169.964C272.745 169.071 270.687 167.944 268.989 167.165C268.886 167.118 268.783 167.071 268.68 167.025C259.297 162.786 248.632 155.428 248.486 151.737C248.422 150.076 249.65 148.583 252.16 146.812C252.762 146.38 253.435 145.943 254.313 145.396C254.734 145.132 256.29 144.167 256.618 143.956C259.232 142.324 260.818 141.177 262.07 139.9C268.575 133.267 277.601 126.134 282.17 124.406C289.225 121.747 293.776 121.637 298.181 124.464C300.082 125.683 301.486 127.603 303.2 130.872C303.37 131.184 304.546 133.488 304.885 134.107C305.833 135.859 306.582 136.891 307.365 137.438C307.786 137.725 308.212 138.013 308.65 138.3C308.651 138.301 308.65 138.302 308.65 138.302ZM306.605 138.168C305.651 137.5 304.832 136.372 303.815 134.496C303.475 133.872 302.294 131.558 302.13 131.251C300.486 128.131 299.158 126.307 297.462 125.222C293.466 122.654 289.359 122.75 282.661 125.28C278.303 126.921 269.382 133.977 262.982 140.505C261.654 141.859 260.01 143.049 257.325 144.724L255.021 146.155C254.304 146.599 253.604 147.06 252.92 147.537C250.656 149.135 249.604 150.417 249.656 151.708C249.779 154.895 260.268 162.134 269.242 166.18C270.271 166.645 271.289 167.14 272.342 167.682C272.412 167.721 280.304 172.108 282.304 172.924C287.113 174.892 291.348 174.613 297.514 171.397C299.024 170.614 300.602 169.922 302.235 169.329C305.306 168.201 306.33 167.937 313.397 166.266C317.96 165.191 320.358 164.433 322.464 163.242C325.061 161.783 326.694 159.796 327.472 156.897C328.899 151.607 326.986 148.929 320.773 145.761C319.662 145.195 315.374 143.159 314.736 142.843C312.104 141.551 309.98 140.385 307.927 139.051C307.477 138.763 307.038 138.47 306.605 138.168ZM69.3153 128.968C69.3153 128.97 69.3165 128.97 69.3175 128.97C71.832 127.54 73.9258 126.571 76.4171 125.635C76.9085 125.443 77.4292 125.261 78.0434 125.04L80.5998 124.137C84.1617 122.877 87.6272 121.441 90.9775 119.837C96.2702 117.299 101.711 114.977 107.281 112.877C109.75 111.941 120.087 108.154 119.665 108.307C130.88 104.17 136.104 104.981 148.622 112.171C153.25 114.83 156.368 118.531 158.246 123.048C160.012 127.286 160.445 130.972 160.445 136.368C160.445 140.361 160.059 142.583 158.292 145.473C155.847 149.486 151.097 153.22 143.328 156.738C129.025 163.214 120.613 169.962 112.423 179.701C107.258 185.845 84.4841 200.922 74.3053 205.693C61.8977 211.505 46.6002 216.281 36.1347 216.281C30.2555 216.281 27.5529 213.987 27.5002 209.864C27.4593 206.83 28.7053 203.274 31.1857 198.191C32.9114 194.653 32.3674 191.999 29.9221 187.492C28.056 184.05 27.6523 183.104 27.6523 181.482C27.6523 179.874 28.7463 178.17 30.8815 176.168C32.4083 174.729 32.929 174.33 37.8429 170.649C40.8205 168.412 42.5696 167.001 44.1023 165.489C49.6363 160.036 51.4848 156.143 54.5736 143.995C56.3988 136.771 58.4521 134.26 63.4186 131.875C63.8866 131.649 65.7294 130.795 66.1681 130.588C67.2433 130.084 68.2926 129.543 69.3133 128.967C69.3142 128.967 69.3153 128.967 69.3153 128.968ZM69.6429 129.364C68.6103 129.949 67.5486 130.498 66.4606 131.011L63.7111 132.292C58.8967 134.606 56.9428 137.001 55.141 144.1C52.0406 156.316 50.1628 160.276 44.5527 165.801C42.9966 167.332 41.23 168.757 38.2348 171.004C33.3443 174.671 32.8295 175.074 31.3202 176.485C29.2728 178.41 28.2373 180.018 28.2373 181.487C28.2373 183.013 28.6351 183.935 30.4603 187.304C32.9582 191.912 33.5256 194.682 31.7239 198.378C29.2786 203.403 28.0443 206.912 28.0852 209.864C28.132 213.733 30.5773 215.806 36.1347 215.806C46.4715 215.806 61.6871 211.054 74.0128 205.28C84.1215 200.538 106.831 185.504 111.944 179.432C120.18 169.631 128.657 162.83 143.048 156.316C150.723 152.846 155.385 149.179 157.772 145.262C159.48 142.449 159.86 140.294 159.86 136.368C159.86 131.025 159.427 127.377 157.696 123.201C155.853 118.776 152.805 115.161 148.283 112.565C135.922 105.461 130.909 104.683 119.911 108.749C120.321 108.595 109.99 112.378 107.527 113.309C106.532 113.693 105.596 114.053 104.684 114.413C100.118 116.21 95.6431 118.159 91.27 120.254C87.8989 121.867 84.4118 123.312 80.828 124.579L78.2715 125.481C77.6632 125.697 77.1484 125.885 76.657 126.072C74.1998 126.989 71.8517 128.091 69.6429 129.364ZM65.197 135.22C69.7014 132.22 72.3924 131.299 79.0496 129.811C82.6297 129.009 84.3847 128.395 86.2508 127.065C88.4738 125.481 90.6207 124.896 95.5288 124.137C97.1375 123.888 97.6757 123.801 98.4888 123.648C101.695 123.053 104.035 122.241 106.152 120.821C112.248 116.726 121.011 114.048 127.393 114.048C130.511 114.048 137.203 117.686 142.451 122.285C148.728 127.785 151.787 133.454 149.898 137.884C148.037 142.252 143.235 146.798 136.425 151.257C131.488 154.487 125.685 157.497 121.672 159.143C119.496 160.036 117.817 161.486 115.957 163.938C115.553 164.466 109.463 173.658 106.579 177.296C103.292 181.448 97.5704 185.629 88.895 190.717C87.1138 191.759 85.3197 192.786 83.5131 193.799C83.437 193.842 79.5293 196.031 78.4821 196.626C74.6973 198.767 72.4275 200.154 70.848 201.344C64.0387 206.466 49.1215 208.803 45.2839 205.654C44.1374 204.714 43.997 203.706 44.1432 200.605C44.3597 196.083 43.8507 193.645 41.2475 190.76C40.0784 189.495 38.6911 188.376 37.1292 187.439C34.8302 186.023 33.5783 184.506 33.2916 182.884C32.7242 179.711 35.5556 176.615 41.581 172.473C42.5052 171.839 45.4828 169.861 45.7285 169.698C46.8156 168.998 47.8382 168.233 48.788 167.409C51.1865 165.186 52.2102 162.825 53.351 157.775C53.5107 157.077 53.6667 156.377 53.819 155.678C54.012 154.78 54.1699 154.094 54.3337 153.407C54.7666 151.593 55.2112 149.961 55.7377 148.305C56.3227 146.491 56.545 145.665 57.1183 143.327C57.4693 141.878 57.6623 141.307 58.0309 140.702C58.7446 139.526 58.7738 139.502 65.197 135.22ZM65.5714 135.595C59.2711 139.79 59.2067 139.838 58.5515 140.913C58.2122 141.47 58.0367 142.017 57.6916 143.419C57.1183 145.766 56.896 146.601 56.3052 148.43C55.7787 150.076 55.3399 151.694 54.907 153.498C54.6414 154.608 54.3898 155.72 54.1524 156.834L53.9243 157.866C52.766 162.993 51.7188 165.421 49.2209 167.725C48.2518 168.569 47.2076 169.352 46.0971 170.068C45.8514 170.231 42.8796 172.213 41.9612 172.842C36.0879 176.874 33.3501 179.874 33.8708 182.816C34.134 184.304 35.2982 185.711 37.4802 187.055C39.2351 188.135 40.6333 189.272 41.7155 190.472C44.424 193.467 44.9446 196.002 44.7282 200.624C44.582 203.571 44.7224 204.512 45.6993 205.318C49.2677 208.246 63.8457 205.957 70.4502 200.989C72.059 199.779 74.3463 198.383 78.1487 196.227L83.1796 193.4C85.3031 192.21 86.9528 191.269 88.5557 190.328C97.1726 185.269 102.853 181.122 106.088 177.032C108.954 173.413 115.044 164.226 115.459 163.689C117.372 161.164 119.121 159.652 121.415 158.711C125.387 157.079 131.155 154.089 136.057 150.878C142.796 146.471 147.529 141.983 149.348 137.726C151.144 133.512 148.166 127.996 142.024 122.611C136.876 118.099 130.301 114.528 127.393 114.528C121.151 114.528 112.517 117.168 106.521 121.195C104.321 122.669 101.899 123.504 98.6234 124.118C97.7985 124.272 97.2486 124.358 95.6341 124.608C90.8313 125.352 88.7546 125.918 86.6369 127.43C84.683 128.822 82.8637 129.456 79.2075 130.272C72.6205 131.745 69.9939 132.643 65.5714 135.595ZM142.018 133.891C142.018 137.52 141.667 139.132 140.497 140.755C139.853 141.638 136.016 145.579 135.466 146.179C131.98 149.99 130.008 151.113 125.369 152.783C124.585 153.062 124.082 153.263 123.597 153.503C123.275 153.662 122.895 153.82 122.427 153.993C122.011 154.151 119.818 154.905 119.197 155.14C115.658 156.474 113.938 157.924 113.938 160.29C113.938 165.556 102.853 177.628 93.7504 181.828C88.9652 184.036 81.2901 186.32 74.5744 187.52C66.7765 188.912 61.418 188.711 60.1719 186.407C59.3998 184.981 57.598 184.362 53.1638 183.618L52.8128 183.56C49.9814 183.085 48.7529 182.816 47.5303 182.293C45.8221 181.573 44.9096 180.517 44.9096 179.01C44.9096 177.695 45.5413 176.24 46.8108 174.369C47.308 173.634 47.8755 172.866 48.7003 171.801C48.6067 171.921 50.3558 169.689 50.8472 169.036C54.7608 163.9 56.6094 160.156 56.6094 155.97C56.6094 147.134 63.1729 139.953 72.6966 135.398C75.7502 133.934 78.0961 133.809 81.5884 134.38C84.5368 134.86 85.1276 134.812 85.9349 133.651C88.5674 129.883 90.0533 129.091 95.2187 129.091C97.5177 129.091 99.2961 128.62 101.344 127.574C102.256 127.109 106.415 124.613 107.773 123.888C113.155 121.017 114.406 120.528 122.514 118.152C126.58 116.961 131.395 118.766 135.577 122.529C139.409 125.981 142.018 130.502 142.018 133.891ZM140.848 133.891C140.848 130.771 138.362 126.461 134.711 123.177C130.81 119.664 126.428 118.022 122.912 119.054C114.88 121.406 113.71 121.862 108.404 124.694C107.094 125.395 102.923 127.9 101.964 128.39C99.7407 129.523 97.7517 130.051 95.2187 130.051C90.492 130.051 89.3805 130.641 86.9528 134.131C86.3093 135.048 85.4845 135.513 84.4081 135.614C83.6476 135.681 83.2966 135.638 81.3544 135.321C78.1194 134.793 76.0486 134.899 73.2816 136.224C64.0855 140.625 57.7793 147.527 57.7793 155.97C57.7793 160.386 55.8606 164.27 51.8417 169.545L49.6889 172.314C48.8758 173.365 48.3142 174.124 47.8345 174.834C46.6528 176.576 46.0795 177.896 46.0795 179.01C46.0795 181.021 47.7585 181.732 53.0409 182.62L53.3978 182.677C58.2356 183.493 60.2421 184.18 61.2366 186.013C63.0911 189.44 82.2963 186.013 93.1771 180.992C101.94 176.946 112.768 165.157 112.768 160.29C112.768 157.458 114.798 155.74 118.712 154.266C119.355 154.026 121.549 153.268 121.941 153.124C122.374 152.961 122.713 152.817 122.994 152.678C123.532 152.414 124.076 152.198 124.895 151.9C129.37 150.292 131.184 149.26 134.53 145.603C135.127 144.95 138.9 141.081 139.485 140.27C140.532 138.825 140.848 137.361 140.848 133.886V133.891ZM119.098 123.137C119.098 123.138 119.099 123.139 119.1 123.138C119.201 123.083 120.504 122.413 120.824 122.256C121.385 121.982 121.818 121.805 122.245 121.694C123.749 121.296 125.205 121.646 128.704 123.192C137.397 127.032 140.07 134.169 134.074 141.772C131.71 144.767 128.592 146.092 123.123 147.105C122.626 147.201 122.421 147.235 121.292 147.431C117.758 148.051 116.156 148.43 114.506 149.183C112.382 150.153 110.943 151.574 110.118 153.714C105.515 165.681 98.5824 174.517 88.895 177.863C79.2719 181.189 76.5341 181.957 72.5269 182.13C69.6371 182.25 66.794 181.818 63.5181 180.743C62.3842 180.39 61.2817 179.973 60.2188 179.495C57.8671 178.376 57.2119 177.22 57.5863 175.026C57.7618 174.004 59.7917 167.572 60.4176 165.114C60.7862 163.65 61.1138 162.167 61.4414 160.463C61.7215 159.041 61.9847 157.617 62.2311 156.191C63.0618 151.674 63.6936 149.342 64.8577 147.239C66.2968 144.633 68.4437 142.905 71.7138 141.897C75.5689 140.711 77.8796 140.409 82.2612 140.203C85.0399 140.073 86.1689 139.895 87.5261 139.219C87.8829 139.041 88.2398 138.83 88.5908 138.58C89.2988 138.079 89.958 137.534 90.5622 136.948C90.9073 136.617 91.9545 135.556 92.1007 135.417C94.0663 133.497 95.7862 132.763 99.3137 132.763C101.619 132.763 102.765 132.321 104.099 131.15C103.999 131.236 105.708 129.643 106.351 129.124C107.535 128.18 108.872 127.372 110.323 126.725C111.201 126.326 112.166 125.947 113.242 125.582C115.276 124.907 117.235 124.088 119.096 123.135C119.097 123.135 119.098 123.135 119.098 123.137ZM110.604 127.142C109.2 127.769 107.907 128.551 106.761 129.465C105.996 130.122 105.251 130.794 104.526 131.481C103.087 132.744 101.788 133.243 99.3137 133.243C95.9675 133.243 94.4056 133.91 92.5453 135.724C92.4108 135.859 91.3578 136.924 91.0068 137.26C90.3847 137.865 89.706 138.428 88.9769 138.945C88.5966 139.209 88.2164 139.439 87.8303 139.631C86.3678 140.356 85.1686 140.543 82.2904 140.683C77.9674 140.884 75.7093 141.182 71.9244 142.348C68.8006 143.308 66.7648 144.94 65.3901 147.436C64.261 149.486 63.6351 151.79 62.8103 156.263L62.43 158.346L62.0205 160.54C61.6871 162.249 61.3653 163.742 60.9909 165.21C60.3591 167.697 58.3351 174.105 58.1654 175.093C57.8203 177.095 58.3702 178.06 60.5112 179.077C61.301 179.447 62.3247 179.836 63.7404 180.301C66.9344 181.348 69.6956 181.765 72.4977 181.645C76.4113 181.482 79.1198 180.719 88.6727 177.421C98.1554 174.143 105.006 165.417 109.563 153.566C110.434 151.31 111.973 149.793 114.225 148.766C115.939 147.983 117.583 147.59 121.169 146.961C122.292 146.769 122.503 146.726 122.994 146.635C128.329 145.646 131.324 144.379 133.582 141.513C139.385 134.15 136.829 127.329 128.423 123.614C125.059 122.126 123.725 121.809 122.427 122.15C122.046 122.246 121.649 122.409 121.122 122.669C120.8 122.822 119.502 123.494 119.408 123.542C117.518 124.509 115.529 125.339 113.465 126.024C112.412 126.384 111.464 126.753 110.604 127.142ZM85.8062 142.847C95.2538 141.47 101.227 142.382 104.801 145.804C107.773 148.651 105.462 156.086 101.332 162.868C98.5298 167.466 95.131 170.649 87.7835 174.959C79.5059 179.807 67.0163 180.815 63.9685 176.807C62.8805 175.381 62.7401 172.9 63.3484 169.257C63.8047 166.53 64.4365 164.116 66.1154 158.226L66.1856 157.982C67.1158 154.718 67.5721 153.033 68.0225 151.195C68.8708 147.715 70.2104 145.689 72.2695 144.599C73.9134 143.735 75.5045 143.505 79.4825 143.342C82.6005 143.212 83.905 143.121 85.8062 142.847ZM85.9115 143.318C83.981 143.601 82.659 143.692 79.5117 143.822C75.6391 143.98 74.1123 144.196 72.5854 145.003C70.6842 146.011 69.4148 147.926 68.5958 151.29C68.1454 153.134 67.6832 154.818 66.7531 158.092L66.6829 158.332C65.0098 164.207 64.3839 166.617 63.9334 169.324C63.3309 172.857 63.4713 175.256 64.4599 176.557C67.2796 180.253 79.4006 179.279 87.4442 174.565C94.7156 170.303 98.0501 167.178 100.805 162.657C104.818 156.071 107.094 148.737 104.356 146.121C100.94 142.852 95.1719 141.969 85.9115 143.318ZM95.2187 145.723C99.3838 145.723 101.455 147.201 101.8 149.899C102.046 151.828 101.548 153.806 100.179 157.55C98.6819 161.639 89.439 169.732 84.2677 172.564C80.1669 174.805 72.5562 175.285 68.7245 173.039C66.3904 171.671 66.6595 167.241 68.7362 160.338C69.134 159.018 69.5961 157.626 70.1226 156.134C70.692 154.505 71.2868 152.883 71.9069 151.266L72.1233 150.691C72.9891 148.387 75.1068 146.971 78.4002 146.241C80.9742 145.665 83.9811 145.521 88.6259 145.603L90.9015 145.651C93.1654 145.703 94.0721 145.723 95.2187 145.723ZM95.2187 146.203C94.0663 146.203 93.1537 146.183 90.8839 146.131L88.6142 146.083C84.022 146.001 81.0561 146.145 78.5523 146.707C75.4402 147.393 73.4805 148.703 72.6849 150.835C72.3751 151.669 72.0631 152.502 71.7489 153.335C71.3511 154.391 71.006 155.337 70.6842 156.263C70.1577 157.751 69.7014 159.138 69.3036 160.454C67.2971 167.116 67.0397 171.46 69.0697 172.645C72.679 174.767 80.0265 174.301 83.9401 172.165C89.0061 169.391 98.1729 161.37 99.6178 157.415C100.963 153.734 101.455 151.794 101.215 149.947C100.905 147.499 99.0855 146.203 95.2187 146.203ZM84.8117 149.563C86.5128 149.594 88.2001 149.82 89.8251 150.235C92.9958 151.089 94.9262 152.649 94.9262 155.082C94.9262 159.686 89.363 163.338 81.8575 165.388C76.1129 166.962 73.89 164.529 75.0365 157.449C75.5279 154.434 77.2712 152.327 79.8569 150.988C81.3589 150.217 83.0515 149.73 84.8117 149.563ZM84.4607 150.081C82.9357 150.274 81.4747 150.719 80.1669 151.391C77.7216 152.658 76.0837 154.646 75.6215 157.516C74.5159 164.289 76.4171 166.372 81.6703 164.937C88.9593 162.94 94.3412 159.402 94.3412 155.082C94.3412 152.894 92.598 151.483 89.6438 150.691C88.0929 150.28 86.4762 150.062 84.8468 150.043C84.7708 150.043 84.6421 150.057 84.4607 150.081ZM131.772 138.828C131.77 138.826 131.768 138.827 131.768 138.829C130.174 143.529 123.033 143.557 116.138 140.409C110.189 137.702 108.065 131.779 113.213 129.432C114.107 129.028 114.981 128.596 115.834 128.136L117.021 127.512C117.765 127.115 118.53 126.747 119.314 126.408C122.081 125.241 124.474 125.064 127.504 126.062C132.862 127.819 133.927 132.459 131.776 138.826C131.775 138.828 131.773 138.829 131.772 138.828ZM119.584 126.837C119.584 126.836 119.582 126.835 119.581 126.836C118.814 127.168 118.065 127.528 117.337 127.915L116.15 128.539C115.658 128.793 115.272 128.995 114.886 129.187C114.406 129.427 113.95 129.648 113.494 129.854C108.849 131.966 110.809 137.438 116.419 139.991C123.035 143.011 129.757 142.982 131.207 138.696C133.296 132.537 132.29 128.15 127.288 126.504C124.422 125.568 122.206 125.726 119.586 126.839C119.585 126.839 119.584 126.838 119.584 126.837ZM130.026 132.667C130.026 135.403 128.598 136.987 126.141 137.448C124.211 137.812 121.719 137.424 119.66 136.579L118.554 136.128C118.162 135.964 117.864 135.83 117.6 135.705C115.22 134.563 115.184 133.32 117.799 130.459C121.777 126.11 130.026 127.022 130.026 132.667ZM129.441 132.667C129.441 130.123 127.762 128.563 125.159 128.27C122.684 127.996 119.899 128.961 118.267 130.747C115.84 133.406 115.869 134.318 117.893 135.292C118.15 135.412 118.437 135.537 118.823 135.7L119.917 136.147C121.871 136.948 124.223 137.318 126.013 136.982C128.195 136.569 129.441 135.187 129.441 132.662V132.667ZM244.391 267.545C244.391 261.401 245.819 259.509 255.202 253.255C256.601 252.326 258.09 251.491 259.654 250.759C261.175 250.039 262.772 249.406 264.626 248.753C265.351 248.498 266.077 248.249 267.025 247.937L269.318 247.183C274.817 245.345 277.355 243.967 279.04 241.399C279.742 240.334 280.333 239.287 280.93 238.121C281.24 237.51 281.541 236.896 281.831 236.278L282.006 235.923L282.334 235.232C284.206 231.382 285.873 229.433 289.763 227.312C290.799 226.745 291.77 226.102 292.665 225.392C293.473 224.745 294.231 224.057 294.934 223.333C295.092 223.169 296.426 221.797 296.806 221.422C298.842 219.43 300.615 218.59 303.54 218.59C305.341 218.59 306.827 218.288 309.138 217.582C312.309 216.613 312.958 216.459 314.379 216.526C315.859 216.589 317.217 217.131 318.58 218.249C319.34 218.873 321.826 221.048 322.394 221.504C325.354 223.904 327.916 224.825 332.789 224.825C335.147 224.838 337.503 224.91 339.856 225.041C349.175 225.459 352.69 225.315 354.644 223.98C358.687 221.211 361.454 222.67 361.454 227.705C361.454 232.856 356.423 237.305 350.339 237.305C347.531 237.305 345.472 237.991 344.875 239.067C344.22 240.257 345.273 242.019 348.373 244.14C356.329 249.578 354.949 254.105 343.904 254.105C340.778 254.061 337.741 254.955 335.363 256.62C333.444 257.921 331.97 259.433 329.601 262.293L328.712 263.373C326.898 265.567 325.781 266.781 324.43 267.885C320.797 270.866 318.989 271.553 316.795 271.193L316.21 271.082C315.703 270.97 315.18 270.91 314.654 270.905C313.718 270.905 313.245 271.226 309.869 273.89C307.032 276.132 305.148 277.144 302.955 277.144C302.177 277.144 300.931 277.696 299.181 278.8C298.439 279.271 297.614 279.828 296.549 280.576L293.671 282.635C292.798 283.259 291.912 283.87 291.015 284.469C285.557 288.098 281.872 289.365 279.192 287.599C277.613 286.567 276.77 285.434 276.484 284.114C276.267 283.135 276.332 282.372 276.653 280.61C277.162 277.802 277.034 276.568 275.583 275.042C274.226 273.612 273.851 273.496 273.378 273.895C273.231 274.02 272.588 274.677 272.436 274.826C271.143 276.026 269.598 276.54 267.171 276.18C264.48 275.776 263.912 274.207 264.41 271.337L264.55 270.588C264.901 268.831 264.948 268.221 264.696 267.804C264.439 267.391 263.585 267.353 261.637 267.996L261.204 268.135C253.143 270.794 252.277 271.058 249.837 271.337C246.31 271.74 244.391 270.569 244.391 267.545ZM245.561 267.545C245.561 269.945 246.813 270.712 249.68 270.386C251.967 270.122 252.856 269.858 260.765 267.242L261.204 267.098C263.643 266.301 265.123 266.359 265.743 267.377C266.159 268.063 266.106 268.701 265.708 270.737L265.568 271.471C265.147 273.89 265.533 274.96 267.375 275.234C269.382 275.532 270.523 275.152 271.558 274.188C271.675 274.077 272.342 273.391 272.541 273.228C273.652 272.287 274.776 272.628 276.507 274.452C278.204 276.247 278.362 277.701 277.806 280.749C277.221 283.989 277.502 285.261 279.924 286.85C281.965 288.194 285.247 287.066 290.278 283.725C291.068 283.197 291.887 282.631 292.904 281.911L295.788 279.847C296.865 279.088 297.701 278.522 298.468 278.037C300.422 276.808 301.826 276.184 302.955 276.184C304.733 276.184 306.435 275.272 309.056 273.199L310.495 272.052C311.045 271.624 311.472 271.303 311.882 271.029C312.94 270.314 313.812 269.945 314.654 269.945C315.257 269.945 315.713 270.007 316.468 270.146C316.877 270.223 316.883 270.228 317.029 270.247C318.761 270.535 320.218 269.983 323.599 267.209C324.886 266.153 325.974 264.977 327.746 262.836L328.636 261.756C331.063 258.823 332.59 257.258 334.614 255.881C337.202 254.072 340.505 253.1 343.904 253.145C353.773 253.145 354.796 249.78 347.624 244.875C344.173 242.513 342.874 240.358 343.81 238.668C344.641 237.171 347.127 236.345 350.339 236.345C355.75 236.345 360.284 232.342 360.284 227.705C360.284 223.414 358.599 222.526 355.393 224.715C353.088 226.289 349.555 226.438 339.791 226.001L339.195 225.972C336.217 225.843 334.521 225.785 332.789 225.785C327.594 225.785 324.74 224.758 321.569 222.185C320.984 221.715 318.492 219.531 317.749 218.926C316.585 217.971 315.491 217.534 314.315 217.486C313.128 217.429 312.525 217.573 309.547 218.48C307.12 219.224 305.511 219.545 303.54 219.545C301.007 219.545 299.538 220.246 297.701 222.041C297.333 222.397 296.011 223.769 295.841 223.937C295.108 224.691 294.319 225.405 293.478 226.078C292.533 226.829 291.507 227.509 290.412 228.108C286.75 230.11 285.206 231.905 283.422 235.587L283.088 236.273L282.925 236.628C282.623 237.25 282.319 237.871 282.012 238.491C281.433 239.637 280.785 240.758 280.07 241.851C278.221 244.673 275.495 246.156 269.756 248.071L267.463 248.83C266.527 249.137 265.802 249.382 265.094 249.631C263.43 250.206 261.809 250.86 260.239 251.59C258.728 252.296 257.29 253.102 255.939 253.999C246.801 260.095 245.561 261.741 245.561 267.549V267.545ZM323.494 229.26C325.284 229.995 327.319 230.23 329.741 230.076C331.221 229.98 332.614 229.779 334.889 229.361C338.025 228.79 338.592 228.699 339.762 228.622C341.388 228.512 342.582 228.704 343.442 229.294C344.366 229.923 344.588 230.6 344.179 231.32C343.793 231.982 343.565 232.155 341.225 233.753C339.16 235.16 338.282 236.071 338.282 237.156C338.282 240.66 339.037 241.966 342.863 244.654C345.121 246.238 346.332 247.937 345.951 249.271C345.513 250.831 343.05 251.681 338.575 251.681C334.374 251.681 331.145 253.894 326.857 258.727C326.565 259.063 324.541 261.401 323.967 262.025C323.149 262.973 322.225 263.857 321.206 264.665C320.586 265.135 319.984 265.481 319.393 265.697C317.726 266.301 316.439 266.45 313.642 266.532C309.161 266.661 307.284 267.228 304.879 269.94C303.955 270.981 303.06 271.86 302.141 272.628C300.629 273.871 298.928 274.95 297.081 275.839C296.994 275.877 290.828 278.81 288.423 280.077C286.224 281.239 284.65 281.056 283.615 279.708C282.866 278.733 282.503 277.528 281.936 274.74C281.444 272.301 281.193 271.341 280.731 270.453C280.163 269.349 279.438 268.898 278.379 269.071C274.752 269.666 273.143 269.738 271.956 269.167C270.57 268.495 270.125 266.949 270.423 264.017C270.517 263.076 269.815 262.639 268.224 262.557C266.913 262.495 265.357 262.653 262.409 263.095L262.005 263.153C257.343 263.849 255.734 263.978 254.564 263.503C252.862 262.817 253.628 260.973 257.039 257.642C260.244 254.508 263.24 252.454 266.258 251.148C268.446 250.202 269.733 249.876 273.372 249.18C277.636 248.354 279.456 247.495 281.585 244.711C283.316 242.431 287.868 235.774 288.687 234.708C290.787 231.987 292.665 230.34 295.151 229.265C296.672 228.603 297.912 227.912 300.515 226.352L301.322 225.867C305.915 223.121 308.518 222.037 311.665 222.037C314.134 222.037 315.462 222.689 317.006 224.326C317.205 224.533 317.983 225.392 318.176 225.608C318.673 226.131 319.112 226.558 319.609 226.966C320.737 227.906 322.05 228.681 323.494 229.26ZM323.236 229.69C323.236 229.691 323.235 229.692 323.234 229.691C321.597 229.02 320.311 228.238 319.188 227.307C318.679 226.875 318.223 226.438 317.72 225.9C317.515 225.68 316.737 224.82 316.544 224.619C315.099 223.092 313.935 222.517 311.665 222.517C308.688 222.517 306.166 223.572 301.668 226.251L300.86 226.736C298.234 228.315 296.982 229.011 295.42 229.688C293.045 230.72 291.231 232.304 289.184 234.968C288.371 236.019 283.825 242.671 282.076 244.961C279.859 247.874 277.905 248.791 273.5 249.641C269.914 250.337 268.662 250.649 266.527 251.57C263.579 252.847 260.648 254.863 257.483 257.954C254.307 261.055 253.663 262.605 254.822 263.071C255.816 263.474 257.442 263.345 261.9 262.682L262.309 262.62C265.305 262.173 266.884 262.01 268.259 262.082C270.137 262.178 271.137 262.793 271.008 264.055C270.727 266.82 271.125 268.202 272.254 268.749C273.266 269.239 274.793 269.172 278.262 268.601C279.637 268.375 280.602 268.975 281.269 270.266C281.755 271.202 282.012 272.186 282.48 274.49L282.515 274.663C283.065 277.375 283.422 278.556 284.106 279.453C284.96 280.557 286.165 280.701 288.108 279.674C290.529 278.397 296.701 275.464 296.771 275.426C298.578 274.557 300.241 273.502 301.72 272.287C302.696 271.466 303.595 270.587 304.411 269.657C306.938 266.801 308.98 266.186 313.619 266.057C316.345 265.975 317.573 265.831 319.153 265.255C319.679 265.063 320.235 264.746 320.814 264.314C321.807 263.527 322.708 262.666 323.505 261.741C324.067 261.117 326.079 258.785 326.389 258.444C330.777 253.495 334.123 251.201 338.575 251.201C342.81 251.201 345.021 250.433 345.384 249.166C345.7 248.052 344.588 246.502 342.477 245.019C338.528 242.239 337.697 240.799 337.697 237.156C337.697 235.875 338.657 234.881 340.85 233.384C343.073 231.862 343.325 231.675 343.647 231.113C343.939 230.604 343.793 230.158 343.067 229.659C341.763 228.771 340.306 228.867 335.018 229.832C332.719 230.249 331.303 230.456 329.788 230.552C327.274 230.715 325.127 230.465 323.238 229.689C323.237 229.688 323.236 229.689 323.236 229.69ZM306.856 227.823C306.856 227.821 306.857 227.82 306.859 227.82C310.163 226.467 312.099 226.765 314.403 228.478C314.73 228.718 315.924 229.664 316.17 229.856C318.626 231.723 320.89 232.596 324.535 232.596C331.186 232.596 332.725 233.273 333.953 236.479C334.105 236.878 334.743 238.687 334.924 239.177C335.392 240.439 335.884 241.591 336.504 242.825C337.75 245.307 338.048 246.819 337.51 247.74C337.06 248.513 336.281 248.786 334.369 249.079C333.011 249.286 332.731 249.334 332.116 249.487C331.034 249.766 330.157 250.159 329.425 250.764C328.84 251.244 328.244 251.786 327.489 252.521C327.138 252.862 325.787 254.201 325.465 254.508C321.253 258.607 318.194 260.436 314.005 260.436C311.806 260.436 309.939 261.05 307.81 262.356C306.734 263.013 301.012 267.305 298.906 268.625C297.248 269.669 295.498 270.612 293.671 271.447C290.992 272.666 289.371 272.992 288.418 272.517C287.645 272.133 287.452 271.524 287.283 269.877C287.258 269.587 287.226 269.298 287.189 269.009C286.873 266.738 285.879 265.716 283.001 265.716C278.841 265.716 277.823 265.125 277.309 263.119C276.747 260.906 276.08 259.903 273.477 258.478C271.155 257.206 270.956 255.876 272.588 254.532C273.758 253.572 275.296 252.852 279.227 251.234C283.094 249.65 284.609 248.93 285.721 248.028C286.887 247.085 287.926 246.043 288.821 244.918C289.395 244.198 289.892 243.459 290.506 242.455L291.746 240.391C292.279 239.513 292.752 238.774 293.273 238.001C296.631 233.048 299.339 230.907 306.854 227.826C306.856 227.826 306.856 227.824 306.856 227.823ZM293.788 238.236C293.267 238.999 292.799 239.734 292.267 240.607L291.033 242.671C290.518 243.534 289.943 244.372 289.313 245.182C288.394 246.333 287.327 247.4 286.13 248.364C284.96 249.324 283.428 250.049 279.491 251.662C275.63 253.246 274.109 253.966 272.997 254.873C271.634 255.996 271.78 256.97 273.805 258.074C276.554 259.582 277.291 260.695 277.882 263.018C278.338 264.794 279.105 265.236 283.001 265.236C286.218 265.236 287.429 266.469 287.768 268.956C287.803 269.196 287.821 269.349 287.868 269.839C288.014 271.308 288.189 271.84 288.722 272.104C289.424 272.46 290.88 272.167 293.39 271.025C295.191 270.201 296.915 269.271 298.55 268.241C300.626 266.945 306.353 262.649 307.465 261.967C309.682 260.609 311.665 259.956 314.005 259.956C317.965 259.956 320.908 258.194 325.02 254.196L327.039 252.214C327.665 251.596 328.323 251 329.01 250.428C329.829 249.769 330.837 249.288 331.941 249.031C332.584 248.868 332.877 248.815 334.263 248.604C335.989 248.34 336.644 248.114 336.983 247.534C337.428 246.771 337.147 245.374 335.966 243.007C335.359 241.799 334.824 240.567 334.363 239.316C334.181 238.822 333.544 237.012 333.392 236.623C332.251 233.648 330.958 233.076 324.535 233.076C320.732 233.076 318.328 232.15 315.772 230.206C315.514 230.014 314.333 229.068 314.011 228.833C311.876 227.249 310.197 226.985 307.114 228.252C299.702 231.291 297.081 233.364 293.788 238.236ZM326.465 243.963C324.722 247.059 316.649 251.287 310.823 251.287C307.705 251.287 306.4 249.857 306.663 247.514C306.851 245.844 307.892 243.718 308.962 242.422L309.852 241.308C310.199 240.865 310.566 240.433 310.951 240.012C313.092 237.708 315.544 236.436 318.919 236.436C324.219 236.436 328.133 241.006 326.465 243.963ZM325.936 243.761C325.938 243.761 325.939 243.76 325.94 243.758C327.411 241.133 323.802 236.916 318.919 236.916C315.76 236.916 313.461 238.107 311.419 240.305C311.073 240.684 310.743 241.064 310.351 241.554C310.342 241.566 310.333 241.578 310.324 241.59C310.225 241.715 309.62 242.488 309.448 242.691C308.43 243.924 307.424 245.979 307.243 247.558C307.009 249.636 308.079 250.807 310.823 250.807C316.42 250.807 324.285 246.691 325.932 243.763C325.933 243.762 325.934 243.761 325.936 243.761ZM285.183 253.716C286.399 253.802 287.78 254.105 288.622 254.58C289.863 255.286 289.909 256.308 288.47 257.484C285.463 259.956 280.953 259.567 280.953 256.836C280.953 254.599 282.79 253.553 285.183 253.716ZM285.13 254.196C283.047 254.052 281.538 254.916 281.538 256.836C281.538 259.034 285.358 259.361 288.061 257.148C289.248 256.169 289.219 255.502 288.295 254.978C287.552 254.556 286.259 254.273 285.136 254.196H285.13ZM302.437 145.744C302.439 145.743 302.441 145.742 302.443 145.743C305.16 146.872 312.543 149.697 313.783 150.268C315.353 150.95 316.752 151.868 317.907 152.975C318.71 153.763 319.443 154.598 320.101 155.471C321.505 157.286 320.124 159.148 316.474 161.054C313.566 162.57 309.349 164.077 303.633 165.767C300.802 166.602 292.15 168.973 291.29 169.223C287.435 170.341 282.603 169.271 276.583 166.41C274.284 165.321 271.903 164.01 269.013 162.311C267.709 161.538 263.456 158.956 262.754 158.543C261.144 157.544 259.458 156.63 257.706 155.807C254.886 154.559 255.102 152.62 257.805 149.985C259.718 148.123 260.244 147.743 268.393 142.147C270.165 140.945 271.899 139.706 273.594 138.432C274.546 137.712 275.467 136.966 276.355 136.195C279.327 133.588 282.088 133.08 285.112 134.313C286.423 134.841 287.762 135.681 289.459 136.963C290.325 137.62 293.519 140.188 294.127 140.659C297.168 143.014 299.659 144.593 302.43 145.745C302.433 145.746 302.435 145.746 302.437 145.744ZM302.171 146.174C299.333 144.998 296.801 143.395 293.723 141.009C293.109 140.529 289.921 137.966 289.061 137.318C287.406 136.065 286.101 135.254 284.849 134.74C282.07 133.608 279.584 134.068 276.776 136.521C275.88 137.301 274.952 138.055 273.992 138.782C272.541 139.886 270.973 140.999 268.774 142.511C260.666 148.079 260.133 148.463 258.256 150.292C255.752 152.73 255.576 154.324 257.986 155.385C259.291 155.961 260.853 156.82 263.099 158.154C263.801 158.572 268.054 161.15 269.359 161.922C271.78 163.382 274.289 164.742 276.876 165.997C282.761 168.791 287.447 169.828 291.091 168.772C291.957 168.522 300.609 166.146 303.434 165.316C309.109 163.636 313.297 162.143 316.158 160.65C319.574 158.87 320.779 157.242 319.609 155.726C318.965 154.872 318.248 154.057 317.462 153.287C316.352 152.223 315.006 151.34 313.496 150.686C312.279 150.129 304.908 147.302 302.171 146.174ZM279.456 150.04C279.456 150.039 279.457 150.038 279.458 150.037C281.276 149.86 282.791 149.976 284.369 150.374C285.627 150.691 285.972 150.82 289.424 152.183C292.202 153.282 294.332 154.036 297.14 154.852C302.042 156.278 303.762 157.842 302.305 159.537C301.088 160.948 297.602 162.378 291.869 163.943C286.926 165.297 282.813 165.071 279.333 163.511C276.613 162.287 274.46 160.391 272.225 157.607C270.529 155.49 270.628 153.671 272.319 152.298C273.769 151.123 276.336 150.345 279.453 150.043C279.454 150.043 279.456 150.041 279.456 150.04ZM279.526 150.518C276.525 150.806 274.068 151.554 272.728 152.639C271.248 153.839 271.16 155.409 272.716 157.343C274.898 160.07 276.987 161.908 279.619 163.089C282.954 164.581 286.891 164.802 291.682 163.492C297.292 161.956 300.714 160.554 301.826 159.258C302.96 157.938 301.533 156.642 296.941 155.303C294.11 154.478 291.969 153.719 289.172 152.615C285.756 151.266 285.417 151.142 284.2 150.835C282.687 150.448 281.089 150.34 279.52 150.518H279.526ZM136.461 253.183C136.461 255.478 135.612 256.812 133.869 257.47C132.529 257.974 131.207 258.06 127.557 258.046L126.516 258.041C121.14 258.041 116.571 254.369 116.571 250.601C116.571 246.958 122.772 245.556 128.119 247.99C129.745 248.734 130.581 248.921 133.132 249.31C135.729 249.708 136.461 250.399 136.461 253.183ZM135.876 253.183C135.876 250.639 135.349 250.14 133.021 249.785C130.418 249.386 129.534 249.185 127.838 248.412C122.824 246.127 117.156 247.404 117.156 250.601C117.156 254.105 121.461 257.561 126.516 257.561H127.563C131.108 257.58 132.395 257.494 133.623 257.033C135.144 256.457 135.876 255.305 135.876 253.183ZM155.373 196.616C157.544 195.987 160.463 195.32 164.792 194.432C166.301 194.12 174.461 192.493 176.819 192.008C188.279 189.642 195.275 187.736 199.183 185.6C207.917 180.824 220.752 169.338 224.823 162.657C226.14 160.497 227.544 159.594 229.316 159.657C230.053 159.686 230.843 159.873 231.843 160.233C232.546 160.483 233.237 160.755 233.914 161.049L234.651 161.351C237.447 162.474 239.553 163.002 242.051 163.002C246.263 163.002 247.907 164.476 246.936 166.799C246.117 168.748 243.473 171.076 240.443 172.569C235.587 174.959 233.569 180.872 233.569 188.682C233.569 190.405 232.767 191.696 231.241 192.695C230.082 193.453 228.784 193.943 226.286 194.691L225.689 194.869C222.852 195.709 221.606 196.199 220.611 197.01C217.634 199.458 213.276 200.442 208.707 200.442C207.9 200.442 207.262 200.883 206.373 201.93C206.203 202.126 205.601 202.866 205.513 202.976C203.945 204.858 202.629 205.722 200.517 205.722C195.931 205.722 194.234 206.168 187.788 209.053C184.757 210.406 182.64 210.771 179.212 210.819C179.06 210.819 178.937 210.819 178.673 210.829C175.854 210.858 174.508 210.973 172.525 211.472C170.748 211.948 169.011 212.519 167.325 213.181C166.055 213.661 161.165 215.585 161.34 215.518C156.783 217.294 153.548 218.389 150.284 219.152C143.024 220.856 139.415 220.227 134.243 217.198C132.734 216.31 132.652 215.072 133.758 213.541C134.606 212.365 136.039 211.098 138.485 209.235L139.526 208.448C141.819 206.72 142.147 206.475 142.977 205.794C144.335 204.68 144.802 204.114 146.183 202.131C147.312 200.518 148.154 199.678 149.851 198.743C151.196 198.003 152.975 197.312 155.373 196.616ZM155.572 197.067C153.215 197.749 151.477 198.426 150.179 199.141C148.57 200.029 147.78 200.816 146.692 202.371C145.288 204.387 144.797 204.982 143.393 206.13C142.556 206.821 142.223 207.07 139.918 208.803L138.882 209.586C136.484 211.419 135.068 212.662 134.261 213.785C133.296 215.125 133.36 216.089 134.583 216.809C139.614 219.757 143.042 220.352 150.126 218.691C153.343 217.937 156.561 216.848 161.089 215.086C160.913 215.153 165.804 213.224 167.079 212.744C168.788 212.074 170.549 211.497 172.35 211.016C174.403 210.493 175.795 210.378 178.668 210.344H179.2C182.546 210.296 184.57 209.946 187.507 208.63C194.035 205.712 195.814 205.242 200.517 205.242C202.383 205.242 203.559 204.474 205.027 202.707L205.893 201.651C206.887 200.485 207.648 199.962 208.707 199.962C213.135 199.962 217.353 199.002 220.202 196.674C221.272 195.791 222.565 195.282 225.49 194.418L226.087 194.24C231.118 192.738 232.984 191.519 232.984 188.682C232.984 180.714 235.049 174.666 240.144 172.156C243.069 170.716 245.614 168.474 246.38 166.645C247.211 164.663 245.895 163.482 242.051 163.482C239.448 163.482 237.26 162.935 234.394 161.783C229.995 160.022 230.428 160.18 229.293 160.137C227.783 160.089 226.572 160.866 225.35 162.873C221.231 169.626 208.327 181.18 199.511 186.004C195.527 188.183 188.49 190.093 176.959 192.474C174.602 192.963 166.441 194.586 164.932 194.898C160.621 195.781 157.719 196.448 155.572 197.067ZM165.418 199.002C166.634 199.002 167.758 198.906 169.659 198.671C172.712 198.301 173.543 198.239 174.608 198.431C176.082 198.699 176.825 199.559 176.825 201.162C176.825 203.106 175.497 204.661 172.952 206.014C171.057 207.022 169.132 207.709 164.675 209.086L164.517 209.134L163.183 209.547C161.404 210.104 160.1 210.757 157.725 212.153L157.257 212.427C152.466 215.249 149.447 216.281 143.773 216.281C140.86 216.281 139.748 215.307 140.409 213.584C140.918 212.235 142.503 210.435 144.972 208.242C145.709 207.584 146.517 206.898 147.4 206.178C149.254 204.67 153.981 201.085 154.098 200.994C154.367 200.768 154.642 200.566 154.917 200.389C156.894 199.088 158.292 198.911 163.212 198.983C164.177 198.997 164.751 199.002 165.418 199.002ZM165.418 199.482C164.745 199.482 164.172 199.477 163.2 199.462C158.415 199.395 157.117 199.559 155.28 200.763C155.022 200.931 154.765 201.118 154.507 201.33C154.39 201.43 149.652 205.021 147.809 206.523C146.988 207.19 146.184 207.872 145.399 208.568C142.989 210.714 141.445 212.465 140.965 213.728C140.438 215.11 141.228 215.801 143.773 215.801C149.307 215.801 152.22 214.808 156.912 212.038L157.38 211.765C159.796 210.344 161.135 209.672 162.972 209.096L164.318 208.683L164.464 208.635C168.881 207.272 170.782 206.595 172.636 205.611C175.023 204.339 176.24 202.923 176.24 201.162C176.24 199.775 175.672 199.117 174.485 198.906C173.52 198.728 172.701 198.786 169.746 199.146C167.816 199.386 166.669 199.482 165.418 199.482ZM231.211 177.719C230.112 180.33 230.053 180.964 230.638 183.844C231.328 187.232 229.831 191.802 227.427 191.802C227.132 191.802 226.837 191.813 226.543 191.835L226.169 191.855C224.496 191.941 223.343 191.936 222.109 191.773C218.277 191.264 216.019 189.306 216.019 185.322C216.019 178.65 217.271 175.871 220.775 172.684C221.341 172.127 221.835 171.524 222.249 170.884C222.594 170.389 223.876 168.421 223.841 168.479C226.438 164.572 228.351 162.945 231.007 163.487C231.691 163.631 232.294 163.857 233.101 164.25L233.914 164.653C234.49 164.952 235.097 165.209 235.728 165.421C236.137 165.551 236.781 165.575 238.506 165.546L238.927 165.541C240.776 165.517 241.724 165.58 242.338 165.858C243.28 166.285 243.04 167.087 241.671 168.21C240.928 168.819 240.175 169.421 239.413 170.015C233.212 174.863 231.954 175.967 231.211 177.719ZM230.661 177.565C231.445 175.693 232.686 174.604 239.009 169.665C239.916 168.959 240.606 168.407 241.262 167.874C242.396 166.938 242.531 166.492 242.051 166.276C241.572 166.06 240.665 165.997 238.939 166.021L238.518 166.026C236.681 166.055 236.026 166.036 235.511 165.863C234.891 165.666 234.359 165.431 233.61 165.061L232.803 164.663C232.204 164.35 231.551 164.112 230.866 163.957C228.596 163.492 226.818 164.999 224.355 168.709C224.396 168.647 223.103 170.62 222.758 171.119C222.323 171.789 221.803 172.419 221.208 173.001C217.809 176.106 216.604 178.76 216.604 185.322C216.604 189.061 218.64 190.827 222.203 191.298C223.378 191.456 224.496 191.461 226.128 191.375C226.368 191.364 226.608 191.353 226.847 191.341C227.093 191.327 227.274 191.322 227.427 191.322C229.298 191.322 230.702 187.05 230.059 183.92C229.462 180.964 229.527 180.253 230.661 177.565ZM225.244 183.527C225.584 183.776 226.707 184.439 226.736 184.453C227.883 185.207 227.93 186.042 226.742 187.506C224.554 190.213 221.577 188.989 221.577 185.322C221.577 183.493 221.875 182.6 222.788 182.432C223.478 182.308 223.958 182.576 225.244 183.527ZM224.461 184.24C224.461 184.238 224.46 184.237 224.459 184.236C223.583 183.589 223.156 183.349 223.039 183.373C222.94 183.388 222.747 183.964 222.747 185.322C222.747 188.139 224.309 188.783 225.771 186.978C226.648 185.893 226.631 185.615 226.005 185.202C226.023 185.216 224.868 184.532 224.462 184.243C224.461 184.242 224.461 184.241 224.461 184.24ZM354.855 121.747C356.142 121.219 357.002 120.95 358.295 120.614L358.458 120.571C360.236 120.141 361.958 119.57 363.601 118.867C366.04 117.869 367.315 117.965 367.672 119.27C367.929 120.23 367.789 121.195 366.941 125.366C365.613 131.904 361.582 137.913 354.557 142.79C352.041 144.532 350.222 144.897 348.853 143.961C347.753 143.207 347.039 141.767 346.156 138.931C345.981 138.379 345.32 136.132 345.15 135.59C344.697 134.097 344.169 132.621 343.565 131.164C342.161 127.891 341.792 125.99 342.336 124.953C342.787 124.075 343.553 123.878 345.612 123.777C346.484 123.734 346.835 123.71 347.35 123.643L348.49 123.485C348.911 123.427 349.204 123.389 349.473 123.345C350.117 123.249 350.596 123.163 351.058 123.057C352.053 122.822 353.059 122.481 354.855 121.747ZM355.112 122.179C353.293 122.918 352.258 123.278 351.222 123.518C350.731 123.629 350.234 123.72 349.578 123.821C348.838 123.932 348.095 124.033 347.35 124.123C346.899 124.185 346.536 124.214 345.641 124.257C343.81 124.344 343.202 124.502 342.868 125.145C342.412 126.029 342.751 127.843 344.115 131.001C344.725 132.472 345.26 133.963 345.717 135.47L346.724 138.811C347.578 141.547 348.256 142.929 349.227 143.591C350.321 144.34 351.854 144.038 354.182 142.42C361.097 137.62 365.063 131.716 366.368 125.285C367.187 121.229 367.333 120.24 367.099 119.376C366.859 118.478 366.011 118.416 363.858 119.299C362.189 120.012 360.439 120.591 358.634 121.027L358.47 121.075C357.314 121.362 356.19 121.731 355.112 122.179ZM352.483 125.337C352.482 125.337 352.482 125.337 352.483 125.337C353.283 125.183 353.943 124.977 354.761 124.656C354.966 124.569 356.265 124.027 356.703 123.854C357.581 123.513 358.441 123.225 359.453 122.947C361.032 122.515 362.167 122.577 362.893 123.139C363.466 123.59 363.677 124.224 363.717 125.145C363.729 125.337 363.729 125.481 363.729 125.803C363.729 128.505 361.021 133.905 357.095 136.723C354.557 138.547 352.819 138.964 351.292 137.932C350.087 137.116 349.245 135.7 347.391 131.736C346.302 129.417 346.191 127.848 346.993 126.84C347.648 126.024 348.689 125.707 350.403 125.544L351.14 125.486C351.834 125.429 352.162 125.395 352.483 125.338C352.483 125.338 352.483 125.337 352.483 125.337ZM351.251 126.441L350.538 126.499C349.134 126.629 348.373 126.864 347.97 127.368C347.426 128.054 347.513 129.336 348.479 131.39C350.245 135.153 351.058 136.531 352.035 137.193C352.989 137.836 354.165 137.553 356.323 136.003C359.985 133.372 362.559 128.241 362.559 125.803C362.559 125.496 362.559 125.357 362.548 125.184C362.518 124.493 362.372 124.065 362.085 123.84C361.734 123.566 361.032 123.528 359.822 123.859C358.928 124.101 358.055 124.39 357.207 124.723C356.785 124.886 355.493 125.429 355.264 125.52C354.465 125.849 353.62 126.101 352.749 126.269C352.363 126.345 352 126.384 351.251 126.441ZM218.032 83.7316C217.101 85.7956 215.961 87.2116 213.855 89.2035L212.334 90.6291C211.801 91.1327 211.288 91.6497 210.795 92.1795C209.745 93.3052 208.828 94.5107 208.057 95.7794C206.39 98.5154 203.881 100.666 200.54 102.447C198.054 103.771 195.714 104.664 191.374 106.09C184.933 108.202 181.762 106.694 175.45 98.2178C173.777 95.9666 170.302 94.0754 164.932 92.1411C163.177 91.5027 157.397 89.6259 156.491 89.2995C153.589 88.2531 152.372 87.514 152.735 86.4916C153.127 85.378 155.835 84.5476 161.791 83.5732C171.519 81.9797 177.544 81.7397 185.149 82.1236C189.771 82.3588 190.806 82.3636 192.602 81.9989C193.766 81.7685 194.895 81.3749 196.112 80.7509L197.744 79.9301C203.512 76.9829 205.314 76.1093 207.864 75.1782C211.392 73.8774 214.048 73.5846 216.019 74.5062C220.231 76.4837 220.512 78.2021 218.032 83.7316ZM216.932 83.3956C219.242 78.2597 219.038 77.0309 215.434 75.3414C213.878 74.6118 211.562 74.8662 208.344 76.0518C205.864 76.9637 204.074 77.8277 198.358 80.7413L196.726 81.5717C195.541 82.1907 194.244 82.6508 192.883 82.9348C190.917 83.3236 189.829 83.3188 185.079 83.0788C177.568 82.7044 171.642 82.9396 162.025 84.5188C159.158 84.9844 157.081 85.4212 155.713 85.8388C154.525 86.2036 153.934 86.5348 153.858 86.7556C153.765 87.0292 154.724 87.6148 156.959 88.4163C157.836 88.7379 163.622 90.6147 165.406 91.2627C170.975 93.2739 174.614 95.2466 176.445 97.7138C182.499 105.84 185.143 107.102 190.941 105.202C195.211 103.795 197.498 102.922 199.909 101.64C203.079 99.9457 205.448 97.9202 207.016 95.3522C207.859 93.9602 208.783 92.7603 209.859 91.5987C210.369 91.0525 210.9 90.5194 211.45 90.0003L212.971 88.5747C214.995 86.6596 216.06 85.3348 216.932 83.3956ZM213.047 83.2084C208.403 89.3523 202.208 93.6483 193.567 95.3186C188.993 96.197 186.272 94.9394 185.892 92.4723C185.57 90.3363 187.232 88.1236 189.402 88.1236C191.169 88.1236 192.678 87.3172 198.399 83.7268C199.259 83.1892 199.903 82.786 200.54 82.4116C203.114 80.8757 205.086 79.9301 206.87 79.4933C210.128 78.6917 212.328 78.4613 213.51 78.9077C214.972 79.4549 214.808 80.8901 213.047 83.2084ZM212.556 82.9588C214.147 80.8469 214.276 79.7237 213.264 79.3445C212.264 78.9653 210.152 79.1861 207.034 79.9541C205.337 80.3717 203.407 81.2933 200.885 82.7956C200.254 83.1748 199.61 83.5732 198.75 84.1108C192.854 87.8164 191.368 88.6035 189.402 88.6035C187.635 88.6035 186.185 90.5331 186.477 92.4147C186.805 94.5746 189.18 95.669 193.433 94.8482C201.903 93.2163 207.976 89.0019 212.556 82.9588ZM287.78 29.0989C295.9 31.4797 299.919 31.4797 306.277 29.1037C308.044 28.4461 309.477 27.6926 312.712 25.8302C315.971 23.9486 317.421 23.1854 319.229 22.5086C321.651 21.6063 323.78 21.3663 325.793 21.8943C328.086 22.499 329.42 27.7982 329.759 35.55C330.051 42.3659 329.455 49.4362 328.32 51.9658C327.255 54.3321 324.892 55.8873 321.587 56.7753C319.131 57.3921 316.573 57.6869 314.005 57.6489C310.618 57.6489 308.74 58.8008 306.868 61.316C306.652 61.5992 305.961 62.564 305.868 62.6936C304.844 64.0855 304.084 64.7719 302.984 65.0695C302.434 65.2231 301.773 65.4679 300.72 65.9047L299.298 66.4951C298.696 66.7495 298.204 66.9463 297.719 67.1383C293.957 68.6263 290.857 69.4039 287.681 69.4039C284.34 69.4039 281.807 70.407 279.479 72.2454C278.8 72.7782 277.022 74.4198 276.77 74.6166C275.285 75.7878 273.301 76.6517 270.423 77.5445C269.604 77.7941 266.925 78.5669 266.767 78.6101L265.562 78.9845C265.041 79.1573 264.521 79.2869 263.983 79.3733C260.736 79.9205 257.466 79.1141 253.464 77.2517C252.721 76.9013 250.463 75.783 250.095 75.6102C248.896 75.0534 247.685 74.8758 244.777 74.6982L243.765 74.6262C240.969 74.4342 239.273 74.079 237.787 73.2006C234.862 71.4678 233.826 69.4759 234.481 67.2823C235.26 64.6807 238.284 61.9928 243.169 58.988C244.415 58.2261 245.683 57.4883 246.971 56.7753C246.778 56.8857 249.504 55.3737 250.071 55.0473C251.669 54.1305 252.879 53.1753 257.53 49.2682L258.168 48.7402C260.209 47.0314 261.613 45.9131 262.918 44.9819C264.614 43.7819 265.679 42.1259 267.305 38.718L267.674 37.9452C269.253 34.6236 270.178 33.1453 271.693 32.0269C272.523 31.4125 275.6 28.8877 276.332 28.4269C278.66 26.987 281.017 27.1166 287.78 29.0989ZM287.581 29.5501C280.994 27.6206 278.806 27.4958 276.689 28.8157C275.992 29.2477 272.945 31.7485 272.079 32.3821C270.663 33.4285 269.762 34.8732 268.218 38.118L267.849 38.8908C266.194 42.3755 265.088 44.0747 263.304 45.3467C261.441 46.6992 259.653 48.1198 257.945 49.6042C253.254 53.5401 252.049 54.5001 250.411 55.4409C249.832 55.7721 247.106 57.2841 247.304 57.1689C245.842 57.9897 244.66 58.6712 243.52 59.372C238.74 62.3144 235.78 64.9399 235.049 67.3975C234.452 69.3895 235.388 71.1894 238.126 72.807C239.507 73.623 241.115 73.959 243.812 74.151L244.824 74.2134C247.819 74.4054 249.083 74.5878 250.382 75.1974C250.762 75.3702 253.014 76.4933 253.751 76.8293C257.647 78.6437 260.794 79.4213 263.866 78.9029C264.369 78.8213 264.86 78.7013 265.34 78.5429C265.747 78.4093 266.156 78.2813 266.568 78.1589C266.732 78.1109 269.411 77.3429 270.219 77.0933C273.026 76.2293 274.945 75.3846 276.361 74.271C276.595 74.0886 278.373 72.447 279.069 71.8998C281.503 69.9798 284.171 68.9239 287.681 68.9239C290.752 68.9239 293.776 68.1607 297.467 66.7063C297.947 66.5143 298.433 66.3223 299.035 66.0679C299.105 66.0391 300.164 65.5927 300.457 65.4775C301.533 65.0311 302.212 64.7767 302.797 64.6135C303.733 64.3639 304.411 63.74 305.365 62.444L306.359 61.0616C308.342 58.4216 310.378 57.1689 314.005 57.1689C316.608 57.1689 319.112 56.9337 321.399 56.3193C324.558 55.4745 326.781 54.0153 327.776 51.8026C328.87 49.3498 329.472 42.3227 329.174 35.5644C328.846 28.1101 327.53 22.8542 325.617 22.355C323.757 21.8655 321.774 22.091 319.475 22.9454C317.708 23.603 316.275 24.3566 313.04 26.2238C309.781 28.1053 308.331 28.8637 306.523 29.5453C300.012 31.9693 295.841 31.9693 287.581 29.5501ZM295.87 39.4044C299.018 39.4044 300.287 39.3036 301.556 38.9436C302.294 38.7372 307.377 36.6396 310.261 35.6028C311.373 35.2092 312.344 34.4316 314.122 32.7037C315.62 31.2445 315.988 30.9037 316.696 30.3805C318.861 28.7725 320.832 28.8061 322.675 30.9709C326.319 35.2428 325.956 38.622 322.716 43.9403C322.183 44.7998 321.695 45.6773 321.253 46.5706C321.066 46.9546 320.668 47.8666 320.615 47.9626C320.516 48.1786 320.417 48.3514 320.3 48.5242C319.931 49.0714 319.387 49.585 317.93 50.7802C316.526 51.9322 314.912 52.3497 311.098 52.8585C310.039 53.0025 309.811 53.0313 309.343 53.1033C305.821 53.6313 303.727 54.3945 302.182 56.0169C300.094 58.22 297.561 59.6072 293.419 61.172C293.098 61.2872 292.776 61.412 292.366 61.556L291.325 61.94C289.771 62.4746 288.265 63.1002 286.821 63.812C285.317 64.5799 284.018 64.9399 281.31 65.4727C276.291 66.4615 274.126 67.2775 271.149 69.9655C268.154 72.6726 265.199 73.6326 261.42 73.1814C258.285 72.8022 255.202 71.7366 247.638 68.6311C243.952 67.1191 243.876 64.8967 246.76 62.1224C248.738 60.2312 248.82 60.1736 258.109 54.2313C262.859 51.193 265.697 49.1578 267.838 47.089C269.318 45.6587 270.295 44.3387 270.739 43.1051C273.957 34.3212 278.052 32.5549 284.065 35.6364C285.206 36.222 287.932 37.8204 288.266 37.9884C290.231 39.0204 292.08 39.4044 295.87 39.4044ZM295.87 40.3643C291.869 40.3643 289.804 39.9372 287.634 38.7996C287.265 38.6076 284.551 37.0188 283.445 36.4476C278.151 33.7357 274.869 35.1516 271.862 43.3835C271.359 44.7611 270.3 46.1914 268.733 47.7082C266.521 49.8442 263.643 51.9082 258.823 54.9897C249.662 60.8504 249.545 60.932 247.65 62.7464C245.21 65.0983 245.257 66.5863 248.164 67.7767C255.6 70.8246 258.63 71.8758 261.584 72.231C264.965 72.6342 267.539 71.799 270.283 69.3223C273.454 66.4615 275.811 65.5687 281.035 64.5415C283.627 64.028 284.837 63.6968 286.2 62.996C287.69 62.2619 289.242 61.617 290.845 61.0664L291.887 60.6824L292.928 60.2984C296.918 58.796 299.31 57.4809 301.258 55.4313C303.013 53.5737 305.353 52.7241 309.132 52.1577C309.618 52.0858 309.84 52.0569 310.91 51.913C314.479 51.433 315.941 51.0586 317.1 50.1034C318.48 48.9706 318.978 48.5002 319.276 48.0586C319.364 47.929 319.445 47.7898 319.533 47.6074C319.568 47.5354 319.972 46.6186 320.171 46.2155C320.545 45.4475 321.019 44.5835 321.674 43.5083C324.74 38.4732 325.067 35.4444 321.715 31.5181C320.311 29.8669 319.159 29.8477 317.48 31.0909C316.831 31.5709 316.468 31.9069 315.011 33.3229C313.116 35.1708 312.063 36.006 310.729 36.486C307.909 37.494 302.762 39.6204 301.937 39.8508C300.509 40.2539 299.135 40.3643 295.87 40.3643ZM288.438 44.4899C288.44 44.4915 288.442 44.4929 288.444 44.4942C291.643 46.3642 294.491 46.2774 299.105 44.9147C302.258 43.9835 302.569 43.9067 303.61 43.9067C305.072 43.9019 306.073 44.5595 306.675 46.0474C307.646 48.4378 305.318 50.137 299.48 52.1338C297.9 52.6761 289.974 55.1001 287.78 55.8441C283.182 57.3993 279.631 58.9256 276.741 60.716C269.125 65.4391 266.001 66.4423 262.871 65.3623C262.134 65.0946 261.426 64.7767 260.753 64.4119L259.589 63.7976C259.157 63.5683 258.72 63.3443 258.279 63.1256C256.331 62.1656 256.629 61.0712 258.776 59.6024C259.566 59.06 265.012 55.9497 266.691 54.8457C270.844 52.1145 273.658 49.3402 275.121 46.0427C276.917 41.9867 277.981 40.2347 279.099 39.6156C280.111 39.0588 281.064 39.3612 282.714 40.5275C283.082 40.7963 284.703 42.0059 285.118 42.3035C286.246 43.1187 287.287 43.8142 288.432 44.4856C288.434 44.4868 288.436 44.4883 288.438 44.4899ZM288.093 44.8787C288.091 44.8771 288.089 44.8756 288.087 44.8744C286.93 44.1934 285.872 43.4931 284.732 42.6683C284.305 42.3611 282.696 41.1515 282.334 40.8923C280.871 39.8556 280.14 39.6204 279.426 40.0139C278.455 40.5467 277.414 42.2699 275.671 46.2058C274.167 49.5994 271.283 52.4409 267.06 55.2201C265.357 56.3385 259.917 59.444 259.151 59.972C257.267 61.2584 257.068 61.9736 258.583 62.7176L259.905 63.3896L261.069 64.004C261.929 64.4503 262.52 64.7239 263.099 64.9207C265.966 65.9143 268.926 64.9543 276.39 60.332C279.327 58.5128 282.913 56.9721 287.564 55.3977C289.763 54.6537 297.684 52.2297 299.263 51.6922C304.821 49.7866 306.95 48.2362 306.125 46.2011C305.599 44.9003 304.809 44.3771 303.61 44.3819C302.674 44.3819 302.352 44.4635 299.304 45.3659C294.526 46.7766 291.502 46.873 288.099 44.883C288.097 44.8817 288.095 44.8803 288.093 44.8787Z\" fill=\"#A3A3A3\" fill-opacity=\"0.17\"/>\n                    <path d=\"M134.507 105.909V167H125.26V115.156H124.902L110.286 124.702V115.872L125.528 105.909H134.507ZM172.301 168.014C167.588 167.994 163.561 166.751 160.22 164.286C156.879 161.82 154.324 158.23 152.554 153.517C150.784 148.804 149.899 143.126 149.899 136.484C149.899 129.862 150.784 124.205 152.554 119.511C154.344 114.818 156.909 111.239 160.25 108.773C163.611 106.307 167.628 105.074 172.301 105.074C176.974 105.074 180.982 106.317 184.322 108.803C187.663 111.268 190.219 114.848 191.989 119.541C193.778 124.214 194.673 129.862 194.673 136.484C194.673 143.146 193.788 148.834 192.018 153.547C190.249 158.24 187.693 161.83 184.352 164.315C181.011 166.781 176.994 168.014 172.301 168.014ZM172.301 160.05C176.438 160.05 179.669 158.031 181.996 153.994C184.342 149.957 185.516 144.121 185.516 136.484C185.516 131.413 184.979 127.128 183.905 123.628C182.851 120.108 181.33 117.443 179.341 115.634C177.372 113.804 175.026 112.889 172.301 112.889C168.185 112.889 164.953 114.918 162.607 118.974C160.26 123.031 159.077 128.868 159.057 136.484C159.057 141.575 159.584 145.881 160.638 149.401C161.712 152.901 163.233 155.555 165.202 157.365C167.17 159.155 169.537 160.05 172.301 160.05ZM226.524 168.014C221.811 167.994 217.784 166.751 214.443 164.286C211.102 161.82 208.547 158.23 206.777 153.517C205.007 148.804 204.122 143.126 204.122 136.484C204.122 129.862 205.007 124.205 206.777 119.511C208.566 114.818 211.132 111.239 214.473 108.773C217.833 106.307 221.85 105.074 226.524 105.074C231.197 105.074 235.204 106.317 238.545 108.803C241.886 111.268 244.441 114.848 246.211 119.541C248.001 124.214 248.896 129.862 248.896 136.484C248.896 143.146 248.011 148.834 246.241 153.547C244.471 158.24 241.916 161.83 238.575 164.315C235.234 166.781 231.217 168.014 226.524 168.014ZM226.524 160.05C230.66 160.05 233.892 158.031 236.218 153.994C238.565 149.957 239.738 144.121 239.738 136.484C239.738 131.413 239.201 127.128 238.127 123.628C237.074 120.108 235.552 117.443 233.564 115.634C231.595 113.804 229.248 112.889 226.524 112.889C222.407 112.889 219.176 114.918 216.829 118.974C214.483 123.031 213.299 128.868 213.279 136.484C213.279 141.575 213.806 145.881 214.86 149.401C215.934 152.901 217.456 155.555 219.424 157.365C221.393 159.155 223.76 160.05 226.524 160.05ZM277.555 156.739V116.409H285.579V156.739H277.555ZM261.417 140.571V132.577H301.746V140.571H261.417Z\" fill=\"url(#paint1_linear_211_511)\"/>\n                    <path d=\"M142.25 189.841C142.129 188.765 141.629 187.932 140.75 187.341C139.871 186.742 138.765 186.443 137.432 186.443C136.477 186.443 135.652 186.595 134.955 186.898C134.258 187.193 133.716 187.602 133.33 188.125C132.951 188.64 132.761 189.227 132.761 189.886C132.761 190.439 132.89 190.917 133.148 191.318C133.413 191.72 133.758 192.057 134.182 192.33C134.614 192.595 135.076 192.818 135.568 193C136.061 193.174 136.534 193.318 136.989 193.432L139.261 194.023C140.004 194.205 140.765 194.451 141.545 194.761C142.326 195.072 143.049 195.481 143.716 195.989C144.383 196.496 144.92 197.125 145.33 197.875C145.746 198.625 145.955 199.523 145.955 200.568C145.955 201.886 145.614 203.057 144.932 204.08C144.258 205.102 143.277 205.909 141.989 206.5C140.708 207.091 139.159 207.386 137.341 207.386C135.598 207.386 134.091 207.11 132.818 206.557C131.545 206.004 130.549 205.22 129.83 204.205C129.11 203.182 128.712 201.97 128.636 200.568H132.159C132.227 201.409 132.5 202.11 132.977 202.67C133.462 203.223 134.08 203.636 134.83 203.909C135.587 204.174 136.417 204.307 137.318 204.307C138.311 204.307 139.193 204.152 139.966 203.841C140.746 203.523 141.36 203.083 141.807 202.523C142.254 201.955 142.477 201.292 142.477 200.534C142.477 199.845 142.28 199.28 141.886 198.841C141.5 198.402 140.973 198.038 140.307 197.75C139.648 197.462 138.902 197.208 138.068 196.989L135.318 196.239C133.455 195.731 131.977 194.985 130.886 194C129.803 193.015 129.261 191.712 129.261 190.091C129.261 188.75 129.625 187.58 130.352 186.58C131.08 185.58 132.064 184.803 133.307 184.25C134.549 183.689 135.951 183.409 137.511 183.409C139.087 183.409 140.477 183.686 141.682 184.239C142.894 184.792 143.848 185.553 144.545 186.523C145.242 187.485 145.606 188.591 145.636 189.841H142.25ZM158.026 189.545V192.273H148.491V189.545H158.026ZM151.048 185.364H154.446V201.875C154.446 202.534 154.545 203.03 154.741 203.364C154.938 203.689 155.192 203.913 155.503 204.034C155.821 204.148 156.166 204.205 156.537 204.205C156.81 204.205 157.048 204.186 157.253 204.148C157.457 204.11 157.616 204.08 157.73 204.057L158.344 206.864C158.147 206.939 157.866 207.015 157.503 207.091C157.139 207.174 156.685 207.22 156.139 207.227C155.245 207.242 154.412 207.083 153.639 206.75C152.866 206.417 152.241 205.902 151.764 205.205C151.287 204.508 151.048 203.633 151.048 202.58V185.364ZM166.864 207.386C165.758 207.386 164.758 207.182 163.864 206.773C162.97 206.356 162.261 205.754 161.739 204.966C161.223 204.178 160.966 203.212 160.966 202.068C160.966 201.083 161.155 200.273 161.534 199.636C161.913 199 162.424 198.496 163.068 198.125C163.712 197.754 164.432 197.473 165.227 197.284C166.023 197.095 166.833 196.951 167.659 196.852C168.705 196.731 169.553 196.633 170.205 196.557C170.856 196.473 171.33 196.341 171.625 196.159C171.92 195.977 172.068 195.682 172.068 195.273V195.193C172.068 194.201 171.788 193.432 171.227 192.886C170.674 192.341 169.848 192.068 168.75 192.068C167.606 192.068 166.705 192.322 166.045 192.83C165.394 193.33 164.943 193.886 164.693 194.5L161.5 193.773C161.879 192.712 162.432 191.856 163.159 191.205C163.894 190.545 164.739 190.068 165.693 189.773C166.648 189.47 167.652 189.318 168.705 189.318C169.402 189.318 170.14 189.402 170.92 189.568C171.708 189.727 172.443 190.023 173.125 190.455C173.814 190.886 174.379 191.504 174.818 192.307C175.258 193.102 175.477 194.136 175.477 195.409V207H172.159V204.614H172.023C171.803 205.053 171.473 205.485 171.034 205.909C170.595 206.333 170.03 206.686 169.341 206.966C168.652 207.246 167.826 207.386 166.864 207.386ZM167.602 204.659C168.542 204.659 169.345 204.473 170.011 204.102C170.686 203.731 171.197 203.246 171.545 202.648C171.902 202.042 172.08 201.394 172.08 200.705V198.455C171.958 198.576 171.723 198.689 171.375 198.795C171.034 198.894 170.644 198.981 170.205 199.057C169.765 199.125 169.337 199.189 168.92 199.25C168.504 199.303 168.155 199.348 167.875 199.386C167.216 199.47 166.614 199.61 166.068 199.807C165.53 200.004 165.098 200.288 164.773 200.659C164.455 201.023 164.295 201.508 164.295 202.114C164.295 202.955 164.606 203.591 165.227 204.023C165.848 204.447 166.64 204.659 167.602 204.659ZM180.003 207V189.545H183.287V192.318H183.469C183.787 191.379 184.348 190.64 185.151 190.102C185.961 189.557 186.878 189.284 187.901 189.284C188.113 189.284 188.363 189.292 188.651 189.307C188.946 189.322 189.177 189.341 189.344 189.364V192.614C189.207 192.576 188.965 192.534 188.616 192.489C188.268 192.436 187.92 192.409 187.571 192.409C186.768 192.409 186.052 192.58 185.423 192.92C184.802 193.254 184.31 193.72 183.946 194.318C183.582 194.909 183.401 195.583 183.401 196.341V207H180.003ZM201.463 189.545V192.273H191.929V189.545H201.463ZM194.486 185.364H197.884V201.875C197.884 202.534 197.982 203.03 198.179 203.364C198.376 203.689 198.63 203.913 198.94 204.034C199.259 204.148 199.603 204.205 199.974 204.205C200.247 204.205 200.486 204.186 200.69 204.148C200.895 204.11 201.054 204.08 201.168 204.057L201.781 206.864C201.584 206.939 201.304 207.015 200.94 207.091C200.577 207.174 200.122 207.22 199.577 207.227C198.683 207.242 197.849 207.083 197.077 206.75C196.304 206.417 195.679 205.902 195.202 205.205C194.724 204.508 194.486 203.633 194.486 202.58V185.364ZM216.278 199.761V189.545H219.688V207H216.347V203.977H216.165C215.763 204.909 215.119 205.686 214.233 206.307C213.354 206.92 212.259 207.227 210.949 207.227C209.828 207.227 208.835 206.981 207.972 206.489C207.116 205.989 206.441 205.25 205.949 204.273C205.464 203.295 205.222 202.087 205.222 200.648V189.545H208.619V200.239C208.619 201.428 208.949 202.375 209.608 203.08C210.267 203.784 211.123 204.136 212.176 204.136C212.813 204.136 213.445 203.977 214.074 203.659C214.71 203.341 215.237 202.86 215.653 202.216C216.078 201.572 216.286 200.754 216.278 199.761ZM224.253 213.545V189.545H227.571V192.375H227.855C228.052 192.011 228.336 191.591 228.707 191.114C229.079 190.636 229.594 190.22 230.253 189.864C230.912 189.5 231.783 189.318 232.866 189.318C234.276 189.318 235.533 189.674 236.639 190.386C237.745 191.098 238.613 192.125 239.241 193.466C239.878 194.807 240.196 196.42 240.196 198.307C240.196 200.193 239.882 201.811 239.253 203.159C238.624 204.5 237.76 205.534 236.662 206.261C235.563 206.981 234.31 207.341 232.901 207.341C231.84 207.341 230.973 207.163 230.298 206.807C229.632 206.451 229.109 206.034 228.73 205.557C228.351 205.08 228.06 204.655 227.855 204.284H227.651V213.545H224.253ZM227.582 198.273C227.582 199.5 227.76 200.576 228.116 201.5C228.473 202.424 228.988 203.148 229.662 203.67C230.336 204.186 231.162 204.443 232.139 204.443C233.154 204.443 234.003 204.174 234.685 203.636C235.366 203.091 235.882 202.352 236.23 201.42C236.586 200.489 236.764 199.439 236.764 198.273C236.764 197.121 236.59 196.087 236.241 195.17C235.901 194.254 235.385 193.53 234.696 193C234.014 192.47 233.162 192.205 232.139 192.205C231.154 192.205 230.321 192.458 229.639 192.966C228.965 193.473 228.454 194.182 228.105 195.091C227.757 196 227.582 197.061 227.582 198.273ZM257.082 193.807L254.003 194.352C253.874 193.958 253.67 193.583 253.389 193.227C253.116 192.871 252.745 192.58 252.276 192.352C251.806 192.125 251.219 192.011 250.514 192.011C249.552 192.011 248.749 192.227 248.105 192.659C247.461 193.083 247.139 193.633 247.139 194.307C247.139 194.89 247.355 195.36 247.787 195.716C248.219 196.072 248.916 196.364 249.878 196.591L252.651 197.227C254.257 197.598 255.454 198.17 256.241 198.943C257.029 199.716 257.423 200.72 257.423 201.955C257.423 203 257.12 203.932 256.514 204.75C255.916 205.561 255.079 206.197 254.003 206.659C252.935 207.121 251.696 207.352 250.287 207.352C248.332 207.352 246.738 206.936 245.503 206.102C244.268 205.261 243.51 204.068 243.23 202.523L246.514 202.023C246.719 202.879 247.139 203.527 247.776 203.966C248.412 204.398 249.241 204.614 250.264 204.614C251.378 204.614 252.268 204.383 252.935 203.92C253.601 203.451 253.935 202.879 253.935 202.205C253.935 201.659 253.73 201.201 253.321 200.83C252.92 200.458 252.302 200.178 251.469 199.989L248.514 199.341C246.885 198.97 245.681 198.379 244.901 197.568C244.128 196.758 243.741 195.731 243.741 194.489C243.741 193.458 244.029 192.557 244.605 191.784C245.181 191.011 245.976 190.409 246.991 189.977C248.007 189.538 249.17 189.318 250.48 189.318C252.366 189.318 253.851 189.727 254.935 190.545C256.018 191.356 256.734 192.443 257.082 193.807Z\" fill=\"white\"/>\n                    </g>\n                    <defs>\n                    <filter id=\"filter0_bi_211_511\" x=\"-42\" y=\"-42\" width=\"471\" height=\"397\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n                    <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n                    <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"21\"/>\n                    <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_211_511\"/>\n                    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_211_511\" result=\"shape\"/>\n                    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n                    <feOffset dx=\"-5\" dy=\"-5\"/>\n                    <feGaussianBlur stdDeviation=\"125\"/>\n                    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\"/>\n                    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.02 0\"/>\n                    <feBlend mode=\"normal\" in2=\"shape\" result=\"effect2_innerShadow_211_511\"/>\n                    </filter>\n                    <radialGradient id=\"paint0_radial_211_511\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"rotate(38.9654) scale(497.733 338.2)\">\n                    <stop stop-color=\"white\" stop-opacity=\"0.4\"/>\n                    <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\"/>\n                    </radialGradient>\n                    <linearGradient id=\"paint1_linear_211_511\" x1=\"207.5\" y1=\"102\" x2=\"133.792\" y2=\"216.759\" gradientUnits=\"userSpaceOnUse\">\n                    <stop stop-color=\"#690C4C\"/>\n                    <stop offset=\"0.589386\" stop-color=\"#5B1166\"/>\n                    </linearGradient>\n                    </defs>\n                </svg>\n                <svg width=\"384\" height=\"313\" viewBox=\"0 0 384 313\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <g filter=\"url(#filter0_bi_211_527)\">\n                    <g clip-path=\"url(#clip0_211_527)\">\n                    <rect x=\"-1\" width=\"387\" height=\"313\" fill=\"url(#paint0_radial_211_527)\" fill-opacity=\"0.24\"/>\n                    <path d=\"M364.994 169.05C364.994 168.79 364.722 168.62 364.488 168.733C360.857 170.487 357.312 172.177 356.406 172.636C350.206 175.785 345.543 178.664 341.969 181.799C338.705 184.655 334.692 186.628 328.853 188.591C328.005 188.879 327.122 189.167 326.028 189.503L323.249 190.376C317.528 192.176 314.591 193.386 312.146 195.224C309.672 197.087 306.501 198.392 302.336 199.467C301.195 199.755 300.002 200.029 298.551 200.331L294.959 201.066C291.865 201.714 290.104 202.203 288.793 202.88C286.992 203.802 284.915 204.445 281.341 205.294C280.402 205.517 279.462 205.735 278.521 205.947C277.328 206.226 276.415 206.446 275.496 206.677C273.271 207.227 271.084 207.876 268.945 208.621C267.365 209.173 265.727 210.507 263.808 212.653C262.547 214.09 261.347 215.563 260.211 217.069C256.847 221.422 255.776 222.704 254.22 224.033C253.375 224.753 252.476 225.429 251.529 226.059C250.166 226.971 245.451 229.678 244.621 230.254C243.757 230.8 243.029 231.476 242.474 232.246C241.748 233.35 241.362 234.44 240.848 236.503C239.578 241.596 238.788 243.612 236.051 247.111C233.67 250.15 232.073 251.854 230.3 253.346C230.025 253.577 229.744 253.807 229.423 254.057L227.229 255.766C226.252 256.534 225.369 257.263 224.386 258.118C221.71 260.42 219.729 263.205 218.6 266.249C217.138 270.151 217.009 273.674 217.571 279.314C217.846 282.108 217.869 282.367 217.869 283.24C217.869 288.285 217.939 291.655 218.238 295.615C218.372 297.471 218.548 299.196 218.773 300.777C218.791 300.905 218.901 301 219.031 301C219.189 301 219.311 300.86 219.29 300.703C218.661 296.149 218.454 290.366 218.454 283.24C218.454 282.348 218.431 282.088 218.15 279.276C217.6 273.693 217.729 270.218 219.162 266.388C220.262 263.414 222.195 260.694 224.807 258.444C225.784 257.599 226.667 256.874 227.633 256.116C228.001 255.828 229.464 254.695 229.826 254.402C230.127 254.166 230.423 253.926 230.715 253.682C232.523 252.166 234.144 250.438 236.542 247.37C239.332 243.809 240.14 241.75 241.421 236.599C241.924 234.579 242.298 233.528 242.989 232.472C243.386 231.872 244.036 231.281 244.995 230.619C245.802 230.067 250.512 227.355 251.898 226.433C252.898 225.761 253.805 225.084 254.647 224.369C256.239 223.001 257.315 221.71 260.708 217.328C261.835 215.83 263.025 214.365 264.276 212.936C266.148 210.858 267.728 209.571 269.173 209.062C271.22 208.342 273.303 207.733 275.666 207.133C277.141 206.76 278.623 206.408 280.112 206.077L281.504 205.755C285.125 204.896 287.243 204.238 289.098 203.283C290.349 202.645 292.069 202.165 295.105 201.531L298.697 200.797C300.16 200.494 301.359 200.221 302.511 199.923C306.747 198.834 309.993 197.495 312.544 195.579C314.913 193.794 317.809 192.603 323.46 190.827L326.239 189.954C327.332 189.608 328.222 189.325 329.076 189.037C334.984 187.045 339.062 185.044 342.39 182.125C345.929 179.029 350.551 176.173 356.717 173.044C357.392 172.702 359.577 171.655 362.169 170.408C363.897 169.576 364.994 167.827 364.994 165.909V149.505C364.994 146.293 360.321 144.989 357.565 146.639C356.096 147.513 354.418 148.569 352.276 149.961C351.058 150.754 349.843 151.551 348.632 152.351L347.889 152.841C346.94 153.466 345.991 154.09 345.04 154.713C340.623 157.593 337.494 159.537 334.738 161.044C332.925 162.033 332.48 162.378 330.023 164.466C326.607 167.38 323.167 168.604 312.971 169.722C306.361 170.442 301.248 172.079 294.983 175.036C294.017 175.487 290.73 177.085 290.905 177.004C289.326 177.762 288.162 178.295 287.021 178.76C283.727 180.104 280.896 180.762 277.831 180.762C267.81 180.762 253.589 186.287 247.628 191.72C240.578 198.152 229.247 205.016 221.157 206.677C216.828 207.565 214.225 210.061 212.943 213.728C212.206 215.84 212.019 217.702 212.019 220.361C212.019 220.755 212.025 220.832 212.16 222.104C212.423 224.59 212.364 226.289 211.709 228.468C210.814 231.444 208.849 234.516 205.514 237.795C197.4 245.787 192.13 260.153 192.13 272.2C192.13 273.348 192.141 274.245 192.165 276.4C192.235 281.584 192.223 283.984 192.036 286.936C191.713 292.227 190.839 296.757 189.183 300.825C189.14 300.931 189.036 301 188.922 301C188.72 301 188.583 300.794 188.658 300.607C190.274 296.599 191.134 292.131 191.451 286.912C191.632 283.97 191.65 281.584 191.58 276.4C191.556 274.25 191.545 273.348 191.545 272.2C191.545 260.047 196.85 245.575 205.07 237.487C208.345 234.262 210.264 231.252 211.142 228.353C211.779 226.241 211.832 224.585 211.575 222.147C211.44 220.851 211.434 220.774 211.434 220.361C211.434 217.664 211.621 215.768 212.382 213.593C213.716 209.778 216.459 207.142 221.016 206.206C228.972 204.574 240.216 197.763 247.195 191.403C253.261 185.869 267.64 180.282 277.831 180.282C280.797 180.282 283.546 179.644 286.758 178.328C287.887 177.868 289.039 177.344 290.607 176.591C290.431 176.677 293.725 175.074 294.69 174.618C301.02 171.637 306.191 169.977 312.889 169.242C322.968 168.138 326.285 166.962 329.602 164.135C332.088 162.018 332.551 161.658 334.411 160.641C337.149 159.148 340.267 157.214 344.677 154.334C345.627 153.713 346.575 153.091 347.521 152.466L348.269 151.977C349.483 151.179 350.698 150.382 351.914 149.587C354.061 148.195 355.745 147.129 357.22 146.251C360.073 144.541 364.994 145.856 364.994 149.182V169.05ZM364.994 113.025C364.994 113.156 364.889 113.262 364.759 113.266C364.468 113.276 364.166 113.297 363.853 113.323C360.267 113.626 355.763 114.979 351.083 116.899C348.954 117.773 346.134 118.181 342.794 118.2C340.044 118.219 337.108 117.974 334.177 117.561C333.182 117.417 332.27 117.269 331.445 117.115C330.76 116.992 330.066 116.9 329.368 116.841C326.126 116.619 322.875 116.478 319.622 116.419C313.527 116.342 309.56 116.774 309.11 117.729C308.888 118.195 309.461 118.953 310.883 120.067C311.473 120.533 312.181 121.041 313.246 121.771C314.179 122.416 315.113 123.059 316.048 123.701C316.861 124.277 317.862 124.622 319.265 124.901C319.675 124.977 319.769 124.997 320.81 125.16C322.875 125.496 323.752 125.76 324.408 126.422C325.232 127.267 325.227 128.601 324.32 130.684C322.892 133.963 320.974 135.508 318.359 135.643C316.235 135.753 313.913 135.024 309.865 133.214C307.215 132.028 305.875 129.71 304.998 125.889C304.898 125.472 304.81 125.035 304.705 124.517L304.454 123.192C303.839 120.033 303.342 118.776 302.271 118.339C301.798 118.147 301.341 117.984 300.891 117.859C299.563 117.489 298.2 117.369 296.153 117.417C294.813 117.451 287.553 117.897 288.097 117.864C276.076 118.521 271.249 120.288 266.4 125.059C265.544 125.912 264.715 126.782 263.914 127.67L262.568 129.153L261.1 130.747C258.701 133.32 256.97 134.817 255.022 136.084C254.642 136.334 254.244 136.584 253.776 136.862L251.371 138.273C250.342 138.886 249.335 139.525 248.353 140.188C245.691 141.983 242.655 144.316 238.847 147.571C234.021 151.689 231.956 154.07 232.002 155.226C232.043 156.018 232.962 156.239 235.975 156.369C236.916 156.412 237.232 156.426 237.718 156.465C239.444 156.58 240.695 156.815 241.702 157.271C246.077 159.263 248.505 160.756 249.862 162.83C251.793 165.781 250.33 169.012 244.662 172.554C239.818 175.578 238.168 177.532 238.045 179.735C238.01 180.296 238.045 180.661 238.198 181.861C238.601 184.967 238.344 186.973 236.56 190.223C235.893 191.489 235.078 192.7 234.126 193.837C232.476 195.743 230.926 196.592 227.925 197.528C227.674 197.605 225.971 198.119 225.427 198.291C224.374 198.618 223.45 198.944 222.496 199.319C220.051 200.278 217.582 201.526 214.833 203.274C209.896 206.398 207.094 210.262 205.485 215.302C204.841 217.318 204.578 218.571 203.847 222.603C203.11 226.731 202.577 228.67 201.46 230.547C200.232 232.601 194.481 243.31 193.873 244.409C192.682 246.574 191.439 248.72 190.146 250.846C187.766 254.738 185.695 257.599 183.869 259.394C180.722 262.495 178.616 266.292 175.814 273.036C175.442 273.931 175.073 274.827 174.709 275.724C173.656 278.292 172.977 279.852 172.216 281.412C168.63 288.765 157.34 294.04 145.038 294.04C138.486 294.04 132.999 292.725 126.891 289.936C123.615 288.434 124.23 288.775 113.87 282.957C105.487 278.253 103.515 277.807 101.895 279.645C101.678 279.885 100.836 280.96 100.824 280.975C99.9471 281.976 98.9812 282.922 97.9344 283.807C97.5074 284.186 94.7053 286.624 93.857 287.383C92.4647 288.631 91.3416 289.691 90.3588 290.709C89.2198 291.849 88.2242 293.081 87.387 294.386C86.6324 295.619 86.2755 296.906 85.831 299.474C85.7561 299.903 85.6805 300.332 85.6043 300.762C85.5798 300.9 85.4599 301 85.3199 301C85.1407 301 85.0047 300.839 85.0352 300.662L85.2518 299.406C85.7023 296.79 86.0708 295.47 86.8605 294.175C87.717 292.839 88.7362 291.578 89.9025 290.411C90.897 289.384 92.026 288.309 93.43 287.061C94.2782 286.298 97.0803 283.855 97.5015 283.48C98.4938 282.641 99.4124 281.745 100.25 280.8C100.305 280.737 100.358 280.674 100.41 280.608C100.627 280.336 101.235 279.574 101.421 279.362C103.322 277.202 105.563 277.711 114.197 282.564C124.534 288.362 123.92 288.026 127.178 289.514C133.203 292.264 138.585 293.56 145.038 293.56C157.118 293.56 168.186 288.391 171.678 281.229C172.571 279.361 173.398 277.472 174.159 275.565C174.526 274.669 174.892 273.773 175.258 272.877C178.084 266.081 180.213 262.25 183.425 259.087C185.209 257.33 187.262 254.494 189.626 250.634C190.778 248.748 191.989 246.646 193.34 244.212C193.943 243.118 199.705 232.4 200.934 230.336C202.016 228.516 202.542 226.611 203.274 222.536C203.999 218.485 204.268 217.222 204.917 215.182C206.555 210.046 209.428 206.091 214.47 202.894C216.879 201.334 219.486 199.99 222.245 198.887C223.216 198.503 224.158 198.176 225.217 197.84C225.766 197.667 227.475 197.154 227.72 197.077C230.616 196.175 232.073 195.373 233.652 193.559C234.442 192.647 235.22 191.495 236.027 190.021C237.765 186.863 238.01 184.938 237.618 181.909C237.49 181.181 237.437 180.446 237.46 179.711C237.589 177.34 239.338 175.276 244.305 172.175C249.763 168.762 251.126 165.772 249.347 163.055C248.06 161.092 245.691 159.638 241.421 157.694C240.502 157.271 239.315 157.055 237.665 156.94C237.197 156.906 236.881 156.892 235.939 156.849C232.564 156.705 231.476 156.441 231.423 155.246C231.365 153.897 233.471 151.468 238.426 147.235C242.246 143.971 245.299 141.623 247.979 139.819C249.026 139.113 249.979 138.513 251.021 137.884L253.431 136.473C253.893 136.195 254.285 135.955 254.659 135.71C256.566 134.462 258.263 132.998 260.632 130.459C261.123 129.93 261.61 129.399 262.094 128.865L263.446 127.382C264.499 126.235 265.224 125.462 265.955 124.752C270.91 119.87 275.888 118.051 287.758 117.408C287.5 117.417 294.778 116.976 296.135 116.937C298.253 116.889 299.674 117.014 301.084 117.408C301.552 117.537 302.032 117.705 302.529 117.907C303.857 118.454 304.383 119.765 305.027 123.115L305.284 124.44C305.384 124.953 305.477 125.385 305.577 125.798C306.419 129.489 307.694 131.697 310.14 132.792C314.094 134.558 316.34 135.264 318.324 135.163C320.664 135.043 322.413 133.641 323.764 130.521C324.612 128.582 324.618 127.406 323.951 126.72C323.425 126.182 322.617 125.942 320.693 125.63C320.17 125.553 319.649 125.465 319.131 125.366C317.645 125.078 316.563 124.694 315.662 124.065C314.74 123.414 313.807 122.773 312.866 122.141C312.048 121.586 311.252 121.01 310.479 120.413C308.882 119.165 308.221 118.286 308.56 117.557C309.157 116.289 313.135 115.857 319.634 115.939C322.901 115.983 326.166 116.123 329.421 116.361C331.035 116.549 331.293 116.597 331.574 116.649C332.393 116.793 333.299 116.947 334.276 117.086C337.087 117.503 339.937 117.715 342.794 117.72C346.046 117.701 348.784 117.307 350.826 116.472C355.564 114.528 360.121 113.16 363.795 112.843C364.118 112.817 364.441 112.799 364.75 112.788C364.884 112.783 364.994 112.891 364.994 113.025ZM364.996 64.8103C364.995 64.8103 364.994 64.8112 364.994 64.8124V65.3649C364.994 65.4729 364.962 65.5788 364.903 65.669C359.891 73.3119 354.869 79.7325 351.159 82.7716C349.293 84.3076 346.702 85.1236 343.238 85.4404C340.635 85.6708 338.395 85.6324 332.018 85.3444C326.221 85.0804 323.056 85.1332 320.014 85.7188C317.132 86.2724 314.196 86.6114 311.239 86.7316L309.923 86.7988C302.617 87.1588 298.592 87.6532 290.782 89.5539C288.15 90.1923 285.359 90.7491 282.417 91.2243C276.119 92.2069 269.748 92.8435 263.346 93.1299C258.924 93.3459 255.619 93.4035 251.506 93.4035C248.347 93.4035 244.545 94.1762 240.976 95.8898C236.121 98.2274 232.166 102.067 229.551 107.65C228.814 109.273 227.922 110.846 226.884 112.354C224.778 115.329 222.836 116.669 219.057 118.2L216.699 119.141C213.473 120.426 210.487 122.083 207.831 124.061C203.034 127.579 199.805 132.043 194.645 141.148L193.428 143.303C189.158 150.839 186.701 154.487 183.279 157.641C178.774 161.798 171.433 164.562 159.698 167.279C157.141 167.869 148.559 169.717 148.442 169.741C144.394 170.639 141.61 171.345 139.299 172.103C133.127 174.129 128.354 177.152 118.017 184.832L117.023 185.572C112.003 189.296 109.178 191.283 106.019 193.194C103.708 194.586 101.339 195.915 98.4316 197.471C97.2266 198.114 92.4062 200.638 91.2187 201.282C84.4796 204.882 80.3788 207.541 76.8162 210.92C75.4103 212.242 74.1496 213.664 73.0489 215.168C70.6329 218.485 69.381 221.48 67.667 227.22L66.7661 230.225C66.4151 231.401 66.0934 232.404 65.7599 233.384C64.0225 238.519 61.7235 241.716 57.1138 246.3L54.7153 248.681C53.8749 249.514 53.0576 250.362 52.2642 251.225C51.4127 252.141 50.7343 253.157 50.2518 254.239C49.5733 255.79 49.3627 257.071 49.1579 259.97C48.8186 264.794 48.3272 267.189 46.4494 270.852C45.531 272.637 43.1384 277.581 42.6996 278.436C42.0848 279.651 41.3876 280.836 40.6112 281.988C38.9264 284.455 36.6859 286.845 32.9361 290.123C29.4496 293.176 27.7473 295.355 26.7294 297.803C26.419 298.564 26.1496 299.336 25.9221 300.117L25.7152 300.796C25.6783 300.917 25.5664 301 25.4395 301C25.246 301 25.1074 300.813 25.1639 300.628L25.3547 300.002C25.6589 298.998 25.8929 298.326 26.1736 297.65C27.2266 295.13 28.9699 292.898 32.5149 289.797C36.2296 286.543 38.4409 284.181 40.1023 281.748C40.8675 280.614 41.555 279.445 42.1614 278.248C42.6002 277.404 44.9928 272.46 45.9054 270.665C47.7598 267.065 48.2395 264.713 48.5729 259.946C48.7777 256.999 48.9941 255.684 49.702 254.076C50.2041 252.949 50.9101 251.891 51.7962 250.937C52.5392 250.121 53.3172 249.319 54.2649 248.374L56.6692 245.998C61.2321 241.457 63.4902 238.318 65.2042 233.259C65.5318 232.28 65.8477 231.281 66.2045 230.11L67.0996 227.105C68.8311 221.326 70.1006 218.293 72.5517 214.918C73.6281 213.44 74.8916 212.014 76.3775 210.603C79.9869 207.186 84.1228 204.507 90.9028 200.878C92.1021 200.24 96.9165 197.711 98.1157 197.067C101.017 195.522 103.381 194.197 105.674 192.81C108.815 190.914 111.635 188.931 116.637 185.216L117.631 184.477C128.02 176.754 132.829 173.711 139.083 171.661C141.423 170.893 144.231 170.178 148.296 169.281C148.419 169.252 156.995 167.409 159.54 166.818C171.181 164.125 178.447 161.39 182.852 157.324C186.221 154.214 188.661 150.595 192.902 143.097L194.124 140.937C199.313 131.784 202.572 127.276 207.445 123.705C210.139 121.699 213.169 120.018 216.442 118.713L218.805 117.768C222.491 116.28 224.345 114.998 226.387 112.118C227.408 110.63 228.284 109.078 229.007 107.477C231.675 101.794 235.717 97.8674 240.69 95.477C244.346 93.7203 248.254 92.9235 251.512 92.9235C255.613 92.9235 258.912 92.8659 263.311 92.6499C269.687 92.3637 276.033 91.7288 282.306 90.7491C285.231 90.2787 288.009 89.7267 290.624 89.0931C298.481 87.1828 302.546 86.6836 309.894 86.3188L311.204 86.2516C314.574 86.074 316.937 85.8196 319.891 85.2484C322.998 84.6484 326.203 84.6004 333.112 84.9124C338.401 85.1524 340.623 85.1908 343.18 84.9604C346.52 84.6628 348.995 83.8756 350.755 82.4356C354.522 79.3401 359.704 72.66 364.998 64.8135C364.999 64.8122 364.998 64.8103 364.996 64.8103ZM364.994 278.87C364.994 279.251 364.519 279.321 364.427 278.952C363.945 277.024 363.528 274.585 363.046 271.188L362.906 270.209L362.771 269.234C361.707 261.698 360.975 258.684 359.525 257.489C358.085 256.308 357.746 255.074 358.05 253.342C358.109 253.054 358.156 252.814 358.279 252.31C358.682 250.61 358.729 249.89 358.325 249.026C357.793 247.884 356.389 246.91 353.768 246.022C350.796 245.019 349.954 243.699 350.908 241.971C351.294 241.275 351.955 240.521 352.967 239.566C353.575 238.99 356.172 236.705 355.939 236.911C359.536 233.696 361.192 231.468 361.192 229.001C361.151 227.792 361.477 226.594 362.141 225.514C362.731 224.553 363.572 223.713 364.602 223.052C364.774 222.941 364.994 223.068 364.994 223.273C364.994 223.364 364.947 223.448 364.871 223.498C363.893 224.143 363.106 224.962 362.569 225.893C362.01 226.863 361.738 227.928 361.777 229.001C361.777 231.627 360.063 233.94 356.371 237.238C356.594 237.036 354.008 239.316 353.406 239.878C352.429 240.804 351.797 241.524 351.44 242.167C350.639 243.627 351.305 244.673 353.991 245.575C356.746 246.511 358.273 247.572 358.869 248.854C359.326 249.833 359.279 250.615 358.852 252.406C358.735 252.9 358.676 253.13 358.629 253.409C358.349 255.007 358.647 256.092 359.934 257.153C361.537 258.468 362.262 261.453 363.35 269.181L363.491 270.156L363.625 271.135C364.102 274.476 364.515 276.89 364.984 278.789C364.991 278.816 364.994 278.843 364.994 278.87ZM364.994 249.967C364.994 250.259 364.605 250.358 364.466 250.102C363.578 248.472 362.347 246.208 362.098 245.71C361.502 244.495 361.367 243.886 361.566 243.223C361.683 242.82 362.765 240.977 362.923 240.665C363.509 239.493 364.014 238.295 364.437 237.078C364.534 236.798 364.994 236.867 364.994 237.163C364.994 237.19 364.99 237.218 364.981 237.244C364.568 238.472 364.06 239.677 363.461 240.852C363.28 241.212 362.239 242.993 362.134 243.339C361.97 243.876 362.087 244.404 362.642 245.532C362.879 246.015 364.074 248.211 364.96 249.833C364.983 249.874 364.994 249.92 364.994 249.967ZM364.994 210.11C364.994 210.185 364.961 210.257 364.902 210.304C363.954 211.063 362.802 211.639 361.25 212.211C361.104 212.259 353.078 214.837 349.316 216.257C343.847 218.331 339.547 219.089 335.844 218.777C332.872 218.523 330.568 217.697 327.204 215.936L325.332 214.942C324.298 214.384 323.236 213.86 322.149 213.373C319.78 212.326 320.248 210.589 323.009 208.347C325.18 206.581 328.625 204.541 333.966 201.723L336.575 200.37C347.076 194.931 347.234 194.85 349.603 193.295C356.03 189.076 360.889 186.679 364.72 186.086C364.865 186.064 364.994 186.178 364.994 186.325C364.994 186.446 364.906 186.549 364.786 186.568C361.089 187.152 356.322 189.495 349.966 193.669C347.567 195.243 347.427 195.32 336.885 200.773C336.015 201.223 335.148 201.676 334.282 202.131C328.976 204.93 325.554 206.955 323.419 208.688C320.898 210.742 320.523 212.11 322.424 212.95C323.419 213.387 324.349 213.853 325.642 214.534L327.514 215.533C330.813 217.256 333.042 218.053 335.903 218.297C339.489 218.605 343.695 217.865 349.077 215.825C352.856 214.395 360.882 211.817 361.01 211.774C362.536 211.21 363.639 210.657 364.554 209.911C364.725 209.771 364.994 209.889 364.994 210.11ZM364.746 190.381C364.882 190.375 364.994 190.484 364.994 190.619C364.994 190.749 364.891 190.855 364.762 190.861C361.025 191.033 357.82 192.412 353.464 195.21L350.755 196.976C349.93 197.515 349.071 198.018 348.182 198.483C347.702 198.733 344.958 200.082 344.543 200.288C342.607 201.248 340.945 202.112 339.354 202.976C337.712 203.864 336.119 204.812 334.581 205.818C331.884 207.603 330.252 209.13 329.918 210.306C329.55 211.587 330.784 212.48 334.042 212.926C340.302 213.781 346.28 212.902 351.855 210.694C355.572 209.224 358.955 207.243 361.859 204.838C362.845 203.944 363.73 202.978 364.504 201.954C364.659 201.75 364.994 201.857 364.994 202.113C364.994 202.168 364.976 202.223 364.943 202.267C364.172 203.303 363.28 204.275 362.28 205.17C359.327 207.616 355.887 209.631 352.107 211.126C346.432 213.373 340.331 214.27 333.943 213.397C330.398 212.917 328.883 211.817 329.351 210.195C329.725 208.88 331.416 207.291 334.212 205.443C335.587 204.531 337.195 203.581 339.032 202.578C340.629 201.704 342.297 200.845 344.239 199.88C344.66 199.669 347.398 198.325 347.877 198.08C348.614 197.696 349.398 197.235 350.393 196.597C350.861 196.299 352.674 195.109 353.101 194.835C357.552 191.968 360.854 190.555 364.746 190.381ZM364.78 116.149C364.902 116.155 364.994 116.258 364.994 116.38C364.994 116.521 364.872 116.631 364.73 116.623C363.72 116.57 362.308 116.807 360.42 117.389C354.564 119.189 352.347 119.822 349.217 120.633C348.176 120.902 347.678 121.032 346.953 121.229C346.087 121.469 345.104 121.593 343.01 121.785C342.495 121.833 341.981 121.881 341.466 121.929C336.903 122.381 334.867 123.115 334.867 124.843C334.867 126.979 336.558 131.169 339.524 137.232C340.08 138.42 340.536 139.639 340.887 140.879C341.055 141.432 341.219 141.986 341.378 142.54C342.466 146.198 343.233 147.681 344.631 148.142C345.923 148.564 347.38 148.43 349 147.796C351.036 146.985 353.224 145.425 355.552 143.251C356.442 142.435 357.29 141.575 358.238 140.577L360.086 138.609C361.406 137.259 363.121 133.814 364.438 130.404C364.549 130.116 364.994 130.195 364.994 130.503C364.994 130.537 364.988 130.571 364.976 130.603C363.638 134.043 361.905 137.521 360.542 138.912C360.285 139.175 358.98 140.572 358.7 140.875C357.746 141.883 356.886 142.747 355.997 143.572C353.61 145.785 351.376 147.383 349.252 148.228C347.503 148.919 345.877 149.068 344.408 148.583C342.747 148.041 341.951 146.5 340.811 142.655C340.646 142.102 340.482 141.548 340.319 140.995C339.851 139.459 339.459 138.379 338.985 137.414C335.979 131.27 334.282 127.07 334.282 124.843C334.282 122.745 336.529 121.934 341.396 121.449C341.912 121.398 342.429 121.35 342.946 121.305C344.993 121.118 345.959 120.998 346.766 120.777C347.503 120.576 347.994 120.441 349.036 120.173C352.159 119.366 354.365 118.733 360.209 116.937C362.148 116.342 363.654 116.086 364.78 116.149ZM14 153.167C14 153.164 14.0013 153.161 14.0036 153.159C19.9278 147.731 24.6065 142.025 27.4957 136.176C29.4262 132.268 31.0583 128.438 33.8195 121.512L34.7496 119.189C38.5696 109.618 40.6639 104.875 43.3899 100.2C46.9408 94.0947 50.7315 90.0339 55.2477 87.9411C59.1437 86.1364 61.2146 84.1684 62.3962 81.6293C62.8527 80.5998 63.2164 79.5441 63.4843 78.4709C64.2039 75.9749 64.6836 74.8278 65.7833 73.4982C67.2166 71.7606 69.4512 70.3638 72.8617 69.1975C82.0929 66.0391 82.6486 65.8183 83.4208 64.8727C83.801 64.4023 83.9063 63.8408 83.8537 62.708C83.8361 62.3576 83.7191 60.8744 83.7133 60.788C83.6481 59.901 83.6149 59.0126 83.6138 58.1241C83.6138 53.3049 83.7191 52.6665 85.0003 51.8122C85.3045 51.6106 85.6613 51.4282 86.2112 51.1882C86.3691 51.121 87.4865 50.6506 87.8726 50.4778C89.739 49.6559 91.523 48.7138 93.2077 47.6602C94.4128 46.921 94.7521 46.633 97.8935 43.8539C100.105 41.8907 101.526 40.8011 103.135 39.9564C105.264 38.838 107.347 38.4588 109.511 38.9436C112.085 39.5196 115.835 39.9036 120.497 40.1243C124.534 40.3163 128.044 40.3643 133.338 40.3643C136.187 40.3643 138.585 40.5899 142.347 41.1179C146.892 41.7563 147.787 41.8571 149.589 41.8571C151.958 41.8571 153.936 41.4347 155.837 40.4411C158.797 38.8956 160.581 38.1996 162.389 37.9452C164.506 37.638 165.179 37.7244 172.07 38.934C182.167 40.7099 190.117 39.5868 196.09 34.278C199.073 31.6237 199.296 30.0061 198.126 27.1742C197.64 26.0126 197.523 25.6862 197.441 25.1102C197.272 23.9006 197.734 22.8494 199.027 21.7839C200.521 20.5578 201.7 17.6058 202.569 13.4738C202.626 13.2016 202.865 13.0048 203.144 13.0048C203.511 13.0048 203.787 13.3411 203.712 13.7007C202.808 17.9972 201.557 21.0706 199.857 22.4606C198.81 23.3246 198.477 24.0878 198.605 24.995C198.67 25.475 198.781 25.7774 199.231 26.867C200.53 30.0013 200.261 31.9837 196.95 34.9308C190.65 40.5275 182.284 41.7131 171.825 39.8748C165.144 38.6988 164.483 38.6172 162.593 38.886C160.973 39.1164 159.306 39.7692 156.469 41.2475C154.416 42.3199 152.021 42.8664 149.589 42.8171C147.688 42.8171 146.775 42.7115 142.142 42.0635C138.451 41.5451 136.105 41.3243 133.338 41.3243C128.015 41.3243 124.499 41.2763 120.427 41.0843C115.695 40.8587 111.875 40.4651 109.195 39.8652C105.908 39.1308 103.246 40.5275 98.7534 44.5019C95.5359 47.353 95.1966 47.6362 93.9097 48.4282C92.1768 49.5106 90.3419 50.4784 88.4225 51.3226C88.0247 51.5002 86.9132 51.9706 86.7611 52.0378C86.2697 52.2489 85.9714 52.4025 85.7374 52.5561C84.8774 53.1321 84.7838 53.7081 84.7838 58.1241C84.7838 59.012 84.8189 59.8232 84.8833 60.7352C84.8833 60.8168 85.0003 62.3096 85.0237 62.6696C85.0822 63.9896 84.9476 64.7287 84.3919 65.4103C83.4149 66.6103 83.0639 66.7543 73.3063 70.0854C70.1006 71.1846 68.0473 72.4662 66.7544 74.0406C65.7541 75.2454 65.3095 76.3109 64.6251 78.6965C64.1395 80.3765 63.9172 81.0581 63.4902 81.9749C62.2149 84.7252 59.951 86.866 55.8268 88.7811C51.5564 90.7587 47.9002 94.6754 44.4429 100.618C41.7519 105.245 39.6635 109.958 35.8611 119.491L34.9368 121.814C32.1581 128.76 30.526 132.604 28.5838 136.545C25.6664 142.443 20.9799 148.183 15.0565 153.635C14.6508 154.009 14 153.719 14 153.167ZM14 190.602C14 190.469 14.1071 190.361 14.24 190.36L14.585 190.357C18.2821 190.357 18.9549 192.853 17.2759 196.77C16.528 198.423 15.5978 200.016 14.4973 201.53C14.3386 201.748 14 201.634 14 201.364C14 201.304 14.0191 201.246 14.0543 201.197C15.1124 199.737 16.0048 198.201 16.7202 196.607C18.2938 192.959 17.7205 190.837 14.585 190.837C14.2666 190.837 14 190.58 14 190.262V171.65C14 169.717 15.1167 167.961 16.8518 167.109C18.5907 166.254 20.3137 165.378 22.0202 164.481C30.0112 159.94 39.4471 146.433 39.4471 138.758C39.4471 130.07 52.0653 103.891 58.3013 100.637C65.7365 96.7538 77.1614 87.2164 79.244 82.5172C80.373 79.9733 82.4614 79.0277 87.6795 78.0197C91.2772 77.3285 92.7338 76.8581 93.9214 75.7206C94.7989 74.8854 95.5125 73.4214 96.4544 70.7766C96.5889 70.4022 97.5659 67.5703 97.8759 66.7159C99.9936 60.9176 102.146 57.8409 105.756 56.9289C107.218 56.5641 107.528 56.4585 111.454 55.1529C115.835 53.6985 118.456 53.0265 121.469 52.7913C125.417 52.4793 129.149 53.1513 132.905 55.0329C136.082 56.6265 140.036 57.2985 144.704 57.2217C148.232 57.1641 151.841 56.7081 156.305 55.8777C157.369 55.6857 160.622 55.0425 161.137 54.9465C162.71 54.6585 163.676 54.5193 164.342 54.5193C167.25 54.5193 169.566 54.4953 172.649 54.3897C177.271 54.2361 181.752 53.9481 185.958 53.4873C190.93 52.9401 195.259 52.1769 198.757 51.1738C209.814 47.9962 217.852 42.3899 218.454 37.9308C218.624 36.702 218.688 36.51 220.086 32.5981C221.449 28.7821 221.964 26.3918 221.677 23.8478C221.56 22.7726 221.274 21.7455 220.812 20.7663C219.961 18.9424 219.314 16.415 218.849 13.2977C218.825 13.1407 218.947 13 219.106 13C219.235 13 219.345 13.0954 219.365 13.2235C219.814 16.2267 220.459 18.6729 221.362 20.5935C221.841 21.6246 222.144 22.7053 222.262 23.8046C222.555 26.4254 222.028 28.8637 220.642 32.7325C219.261 36.6012 219.197 36.798 219.039 37.9884C218.401 42.6683 210.206 48.3946 198.956 51.625C195.411 52.6425 191.047 53.4105 186.034 53.9625C181.81 54.4233 177.306 54.7161 172.679 54.8697C169.578 54.9705 167.256 54.9993 164.342 54.9993C163.734 54.9993 162.798 55.1289 161.265 55.4169C160.757 55.5129 157.504 56.1513 156.433 56.3481C151.941 57.1785 148.29 57.6441 144.716 57.7017C139.948 57.7833 135.883 57.0921 132.601 55.4457C128.956 53.6169 125.347 52.9689 121.527 53.2665C118.579 53.4969 116.005 54.1593 111.676 55.5993C107.727 56.9145 107.411 57.0153 105.931 57.3897C102.579 58.2344 100.503 61.2104 98.4375 66.8551C98.1274 67.7047 97.1505 70.5318 97.016 70.9158C96.0449 73.6278 95.3137 75.1302 94.366 76.0374C93.0673 77.2757 91.5346 77.7749 87.3402 78.5813C82.7773 79.4597 80.8293 80.3381 79.7939 82.6804C77.6586 87.4996 66.1519 97.109 58.6172 101.04C52.5743 104.203 40.0321 130.219 40.0321 138.763C40.0321 146.606 30.4967 160.257 22.3537 164.879C21.161 165.556 17.8656 167.174 14.5012 168.803C14.2694 168.915 14 168.746 14 168.489V190.611L14 190.602ZM14 107.227C14 106.904 14.1936 106.614 14.4886 106.482C18.6542 104.628 22.6719 101.626 26.7762 97.5842C28.9992 95.3954 35.0889 88.5699 36.0132 87.7204C37.0662 86.7412 38.3882 85.8196 40.3538 84.6244C40.9856 84.2404 43.232 82.9108 43.5654 82.7092C49.0409 79.4213 51.7553 76.9685 52.9135 73.4166C53.3815 71.9862 53.8144 70.1622 54.3526 67.5127C54.4872 66.8215 55.5226 61.532 55.8502 59.9336C57.5291 51.8842 59.2022 47.0746 61.7411 44.5259C68.0882 38.1708 73.3765 31.3069 73.3765 28.8445C73.3765 27.6254 73.5754 27.2366 76.9157 21.3039C77.3135 20.5887 77.6469 19.9887 77.9511 19.4175C79.3335 16.8087 80.141 14.826 80.3438 13.2708C80.3634 13.1205 80.4893 13.0048 80.6409 13.0048C80.8118 13.0048 80.9467 13.1506 80.9249 13.3201C80.7173 14.9388 79.8938 16.9574 78.4835 19.6095C78.1793 20.1855 77.8458 20.7855 77.4422 21.5055C74.2013 27.2702 73.9615 27.7406 73.9615 28.8445C73.9615 31.4701 68.6439 38.3676 62.1973 44.8331C59.7404 47.2906 58.0849 52.0617 56.4293 60.02C56.0959 61.6184 55.0663 66.8983 54.9259 67.5943C54.3877 70.2631 53.949 72.0966 53.4751 73.5462C52.2759 77.2325 49.4855 79.7525 43.9106 83.1028L40.699 85.0132C38.7685 86.1892 37.4757 87.0964 36.4461 88.042C35.551 88.8723 29.4613 95.6882 27.2266 97.8962C22.8304 102.223 18.5276 105.38 14.0089 107.233C14.0046 107.235 14 107.232 14 107.227ZM14 280.903C14 280.603 14.4827 280.536 14.5795 280.82C14.6931 281.153 14.8116 281.47 14.936 281.776C16.106 284.671 17.6269 285.741 19.7271 284.939C30.8243 280.692 39.4471 273.352 39.4471 265.961C39.4471 258.185 43.1735 250.606 49.4504 243.737C50.5502 242.537 51.5915 241.625 52.6854 240.857C53.1124 240.559 53.5336 240.291 54.0309 239.993L55.2009 239.307C57.3536 238.02 58.313 236.772 59.3426 233.264C59.7813 231.79 60.1499 230.854 61.7996 226.899L62.1681 225.996C64.0635 221.398 64.8357 218.811 64.6075 217.045C64.3267 214.918 62.3845 214.534 57.9971 216.257C56.2585 216.938 54.471 217.531 52.6445 218.033C44.5189 220.275 36.8731 220.817 27.6888 220.635L26.548 220.611L25.6998 220.601C22.6806 220.602 19.6904 221.085 16.8957 222.022C16.0105 222.329 15.1709 222.716 14.3925 223.177C14.221 223.278 14 223.157 14 222.958C14 222.869 14.0469 222.786 14.124 222.742C14.9175 222.282 15.7681 221.893 16.6617 221.581C19.798 220.526 23.1723 220.032 26.5597 220.131L27.7005 220.155C36.8263 220.337 44.4136 219.795 52.4573 217.577C54.2617 217.082 56.0278 216.497 57.7456 215.825C62.4489 213.982 64.8591 214.457 65.1866 216.992C65.4323 218.859 64.6485 221.475 62.7238 226.15L62.3494 227.052C60.7115 230.988 60.3429 231.924 59.9159 233.379C58.8512 236.988 57.8158 238.342 55.546 239.695L54.376 240.382C53.8846 240.67 53.4751 240.934 53.0598 241.222C51.8881 242.057 50.8344 242.997 49.9184 244.025C43.7117 250.817 40.0321 258.3 40.0321 265.961C40.0321 273.583 31.2572 281.056 19.9728 285.376C17.4573 286.341 15.6497 285.059 14.3802 281.93C14.2463 281.605 14.1239 281.266 14.0016 280.912C14.0005 280.909 14 280.906 14 280.903ZM14 251.066C14 250.756 14.4138 250.651 14.5621 250.923L14.8541 251.46C16.0826 253.764 16.8782 256.418 17.3461 259.509C17.7322 262.053 17.8375 263.973 17.9545 268.389C18.0715 272.863 18.247 274.509 18.9081 275.613C19.6569 276.861 21.055 276.741 23.7576 274.893C33.7844 268.029 36.5221 263.901 36.5221 256.356C36.5221 252.914 37.1656 250.409 38.6866 247.87C40.0145 245.628 40.8218 244.692 46.5255 238.452C47.8619 236.947 49.3491 235.536 50.9714 234.233C51.63 233.714 52.3212 233.224 53.0423 232.764C53.2645 232.62 53.4166 232.515 53.5629 232.409C54.2027 231.97 54.7262 231.427 55.1014 230.816C55.6443 229.899 56.0867 228.945 56.4235 227.964L56.6399 227.388L56.8505 226.836C57.0202 226.4 57.1313 226.092 57.2366 225.8C57.4999 225.065 57.6695 224.513 57.769 224.043C57.9913 222.987 57.8392 222.368 57.2717 222.051C55.897 221.278 51.843 221.936 43.349 224.422C37.7682 226.054 33.9189 226.424 27.057 226.467C22.5467 226.496 20.9555 226.659 19.3059 227.484C17.2701 228.502 15.8895 230.556 14.8716 234.329C14.7676 234.705 14.6643 235.068 14.5612 235.418C14.4624 235.754 14 235.681 14 235.332C14 235.303 14.0039 235.275 14.0115 235.248L14.2983 234.224C15.3513 230.336 16.8021 228.176 19.0017 227.072C20.78 226.184 22.4297 226.016 27.057 225.987C33.8487 225.944 37.6453 225.584 43.1501 223.971C51.884 221.417 55.9906 220.75 57.5993 221.653C58.4066 222.104 58.5997 222.901 58.3481 224.124C58.2076 224.737 58.024 225.343 57.7982 225.939L57.4121 226.98L57.2015 227.532L56.9851 228.108C56.6379 229.116 56.1817 230.096 55.6221 231.036C55.1541 231.771 54.6802 232.246 53.949 232.769L53.4108 233.139L52.8141 233.537C52.2876 233.892 51.8489 234.209 51.3692 234.584C49.7725 235.867 48.3089 237.257 46.9935 238.74C41.319 244.947 40.5176 245.878 39.2072 248.081C37.7331 250.553 37.1071 252.986 37.1071 256.356C37.1071 264.055 34.2875 268.313 24.132 275.258C21.1837 277.274 19.3468 277.442 18.3816 275.824C17.6679 274.624 17.4924 272.973 17.3695 268.399C17.2525 264.002 17.1472 262.087 16.767 259.567C16.3049 256.524 15.5268 253.903 14.3159 251.652L14.0023 251.075C14.0008 251.073 14 251.07 14 251.066ZM236.001 13.3865C235.937 13.1996 236.075 13.0048 236.273 13.0048C236.396 13.0048 236.505 13.0823 236.545 13.198L237.355 15.5296C239.274 21.0783 240.216 24.8078 240.432 28.8733C240.719 34.158 239.543 39.078 236.554 43.8347C231.991 51.097 224.579 56.5545 215.365 60.2024C208.123 63.0632 200.085 64.6039 194.177 64.6039C190.176 64.6039 184.092 65.2663 172.374 66.8215L171.046 66.9991C156.714 68.9143 152.532 69.3991 149.133 69.3991C147.091 69.3991 146.746 69.3607 137.702 68.0551C135.619 67.7479 134.005 67.5271 132.437 67.3351C120.603 65.9143 114.302 66.7591 113.741 71.1078C113.682 71.5158 113.636 71.9334 113.571 72.4566L113.413 73.767C112.77 78.9989 112.232 81.3173 110.892 83.3476C109.195 85.9108 106.347 87.1636 101.749 87.1636C95.7816 87.1636 94.1905 87.4516 92.6812 88.6851C92.9854 88.4403 89.7387 91.4931 87.9077 92.8611C86.2989 94.061 79.5306 98.885 78.6824 99.4994C77.3922 100.433 76.1168 101.38 74.8565 102.341C70.7792 105.456 67.9478 107.986 66.3157 110.093C62.8525 114.557 60.185 118.752 59.4771 121.651C58.5061 125.635 61.6241 126.23 70.6037 122.232C79.1161 118.447 87.8081 114.94 96.6591 111.72C98.7066 110.971 104.872 108.744 105.832 108.384C108.786 107.304 110.687 106.56 112.138 105.912L113.279 105.398L114.554 104.832C115.584 104.381 116.531 103.987 117.479 103.608C128.067 99.4226 137.649 98.5874 146.921 103.032C160.312 109.435 169.315 120.801 169.315 130.123C169.315 139.3 168.888 142.185 166.285 146.059C165.457 147.271 164.489 148.415 163.395 149.476C159.61 153.206 156.486 157.252 155.93 159.686C155.228 162.729 158.674 163.06 167.73 159.662C175.516 156.743 180.833 152.486 184.402 147.028C185.888 144.713 187.084 142.28 187.97 139.766C188.497 138.336 189.825 134.174 189.965 133.776C190.222 132.979 190.565 132.204 190.989 131.457C195.359 124.291 203.326 116.817 212.195 113.582C216.646 111.96 219.8 108.95 223.544 103.603C224.035 102.893 226.036 99.9361 226.55 99.2018C228.61 96.2738 230.189 94.5458 232.032 93.4515C237.969 89.8995 248.821 88.1236 261.451 88.1236C265.85 88.1236 271.127 87.5284 277.544 86.4052C280.473 85.8858 283.391 85.3225 286.295 84.7156C285.535 84.874 295.386 82.8052 297.656 82.3684C305.934 80.7701 321.681 79.9637 335.16 79.9637C345.315 79.9637 351.434 75.5334 357.699 61.4024C361.572 52.6617 361.572 48.745 359.273 44.9147L358.583 43.7771C358.002 42.8724 357.693 41.8669 357.682 40.8443C357.682 38.91 357.682 38.9196 359.144 29.0557C359.413 27.2654 359.612 25.8206 359.799 24.4286C360.326 20.3727 360.607 17.1327 360.607 14.4448C360.607 14.0835 360.599 13.7038 360.59 13.3056C360.587 13.1406 360.719 13.0048 360.884 13.0048C361.043 13.0048 361.173 13.1304 361.177 13.2887C361.188 13.6931 361.192 14.0784 361.192 14.4448C361.192 17.1567 360.911 20.4111 360.379 24.4766C360.203 25.8734 359.992 27.323 359.729 29.1133C358.267 38.9292 358.267 38.9388 358.267 40.8443C358.267 41.7899 358.53 42.5579 359.115 43.5707C359.161 43.651 359.25 43.8 359.349 43.9642C359.644 44.455 359.959 44.9502 360.222 45.4587C362.159 49.1921 361.925 53.2717 358.249 61.5656C351.908 75.8694 345.596 80.4437 335.16 80.4437C321.728 80.4437 306.01 81.2501 297.785 82.8388C295.527 83.2708 285.681 85.3348 286.436 85.1812C283.526 85.7898 280.602 86.3547 277.667 86.8756C271.208 88.0035 265.903 88.6035 261.451 88.6035C248.932 88.6035 238.192 90.3651 232.377 93.8355C230.622 94.8866 229.078 96.5714 227.053 99.4418C226.545 100.171 224.544 103.128 224.047 103.843C220.25 109.267 217.027 112.344 212.429 114.019C203.712 117.201 195.827 124.593 191.515 131.668C191.106 132.39 190.775 133.14 190.527 133.91C190.392 134.294 189.064 138.465 188.538 139.91C187.637 142.452 186.423 144.913 184.917 147.254C181.29 152.802 175.884 157.132 167.975 160.098C158.557 163.631 154.521 163.242 155.351 159.599C155.936 157.06 159.095 152.961 162.95 149.169C164.018 148.132 164.962 147.013 165.77 145.828C168.315 142.046 168.73 139.219 168.73 130.123C168.73 120.984 159.844 109.771 146.664 103.459C137.556 99.101 128.167 99.917 117.736 104.04C116.322 104.599 114.93 105.193 113.559 105.821L112.419 106.334C110.342 107.23 108.225 108.061 106.072 108.826C105.106 109.181 98.9464 111.408 96.8931 112.162C88.058 115.376 79.3817 118.876 70.8845 122.654C61.5539 126.811 57.7982 126.091 58.9039 121.555C59.6292 118.579 62.3143 114.346 65.8184 109.834C67.4857 107.683 70.3463 105.13 74.4587 101.991C75.617 101.103 76.8689 100.171 78.2963 99.1394C79.1504 98.5202 85.9128 93.7011 87.5099 92.5059C89.3175 91.1619 92.5408 88.1187 92.2717 88.3443C93.9214 86.9908 95.6354 86.6836 101.749 86.6836C106.136 86.6836 108.792 85.5172 110.377 83.122C111.664 81.1685 112.196 78.8789 112.834 73.719L112.986 72.4086L113.162 71.0598C113.489 68.4583 115.777 66.9799 119.731 66.4519C122.913 66.0295 127.049 66.2071 132.519 66.8647C134.099 67.0567 135.719 67.2775 137.807 67.5799C146.775 68.8759 147.144 68.9239 149.133 68.9239C152.485 68.9239 156.679 68.4295 170.953 66.5239L172.281 66.3511C184.039 64.7863 190.135 64.124 194.177 64.124C199.998 64.124 207.948 62.5976 215.108 59.7656C224.216 56.1657 231.54 50.7754 236.039 43.6139C238.976 38.934 240.134 34.1004 239.847 28.8925C239.631 24.875 238.701 21.1743 236.788 15.6592L236.001 13.3865ZM243.963 13.3636C243.917 13.1816 244.054 13.0048 244.242 13.0048C244.375 13.0048 244.491 13.0954 244.523 13.2244C244.977 15.0564 245.628 17.2957 246.522 20.1471C248.645 26.891 248.312 33.1213 246.083 38.7564C244.678 42.3881 242.423 45.7599 239.444 48.6826C236.042 51.9802 232.257 54.9977 228.142 57.6921C221.519 62.0216 214.476 65.1271 207.111 66.5191C202.747 67.3302 198.342 67.982 193.908 68.4727C192.053 68.6839 190.187 68.8807 187.882 69.1063L182.389 69.6439C175.645 70.3206 172.181 70.8678 169.73 71.7846C164.302 73.8054 153.146 74.6838 140.943 74.6838C140.141 74.6838 139.305 74.6262 138.427 74.5158C136.895 74.319 135.502 74.0214 133.081 73.4166C128.787 72.3558 127.447 72.0966 125.692 72.1878C123.411 72.2982 121.814 73.287 120.737 75.495C119.649 77.7317 119.322 79.1093 118.783 82.6852C118.14 86.9956 117.105 88.5027 112.951 89.5491C111.581 89.8746 110.249 90.302 108.973 90.8259C108.605 90.9843 108.295 91.1331 107.944 91.3155L107.16 91.7283C106.048 92.2755 104.902 92.4435 101.749 92.4435C99.8766 92.4435 96.5831 92.1795 96.1853 92.2563C95.4716 92.3907 95.7465 92.1891 92.0085 95.2514C91.131 95.9714 89.9668 96.7778 88.3113 97.829C87.4221 98.3954 84.1228 100.435 83.6665 100.723C80.7649 102.538 78.7935 103.891 77.1965 105.226C74.3417 107.616 73.1893 109.618 73.944 111.322C74.7278 113.083 76.3249 113.443 79.1504 112.675C80.7152 112.214 82.2347 111.656 83.6957 111.005C84.5732 110.635 88.247 109.022 89.1771 108.624C91.5111 107.602 93.9156 106.691 96.3783 105.898C98.5654 105.189 100.72 104.414 102.837 103.574C104.03 103.109 109.119 101.098 110.441 100.589C113.021 99.581 115.18 98.7746 117.257 98.0498C127.283 94.5458 134.409 93.2979 139.293 94.8578L142.47 95.8658C143.815 96.2882 144.909 96.6434 145.991 97.0082C148.594 97.8679 151.146 98.829 153.637 99.8882C164.366 104.51 171.392 110.51 173.989 119.025C178.061 132.393 176.095 140.879 169.262 148.977C166.94 151.737 167.203 153.393 169.297 153.282C171.719 153.148 175.27 150.907 178.137 147.273C179.95 144.969 181.12 142.257 182.846 136.939L183.834 133.891C184.22 132.705 184.56 131.721 184.905 130.771C187.789 122.822 191.34 117.677 197.517 114.086C201.7 111.658 211.399 106.646 212.423 106.046C216.366 103.738 218.583 101.515 220.812 97.4066C225.339 89.0355 233.149 85.7236 246.826 85.7236C252.302 85.7236 257.303 85.1812 264.101 84.0484C265.311 83.8486 266.52 83.6438 267.728 83.434C269.132 83.194 270.109 83.0308 271.039 82.8916C273.396 82.5364 275.157 82.3636 276.661 82.3636C279.258 82.3636 282.154 81.8837 295.023 79.4885L296.749 79.1717C306.308 77.4101 311.748 76.6037 315.27 76.6037C316.171 76.6037 316.674 76.6085 319.014 76.6517C323.577 76.7237 326.192 76.7141 329.152 76.5557C338.751 76.0469 344.789 73.983 346.585 69.5671C347.182 68.1243 347.875 66.7094 348.661 65.3287C348.573 65.4775 350.001 62.948 350.358 62.2664C353.505 56.3625 353.616 51.745 349.515 43.3355C347.992 40.1376 346.958 36.7969 346.438 33.3901C345.496 27.6398 345.631 22.283 346.497 14.0224L346.584 13.2628C346.601 13.1158 346.725 13.0048 346.873 13.0048C347.047 13.0048 347.182 13.1556 347.163 13.3281L347.082 14.0608C346.216 22.2926 346.087 27.6158 347.017 33.3277C347.532 36.6935 348.554 39.9938 350.059 43.1531C354.213 51.6874 354.102 56.4345 350.896 62.4584C350.533 63.1448 349.106 65.6839 349.194 65.5303C348.415 66.8953 347.727 68.2941 347.134 69.7207C345.245 74.3862 339.003 76.5125 329.187 77.0357C326.203 77.1941 323.583 77.2037 318.996 77.1317C316.668 77.0885 316.165 77.0837 315.27 77.0837C311.813 77.0837 306.39 77.8853 296.878 79.6373L295.152 79.9589C282.189 82.3684 279.328 82.8436 276.661 82.8436C275.198 82.8436 273.472 83.0164 271.144 83.3668C270.22 83.506 269.243 83.6644 267.845 83.8996C266.636 84.1054 265.427 84.3118 264.218 84.5188C257.385 85.6564 252.343 86.2036 246.826 86.2036C233.36 86.2036 225.766 89.4243 221.362 97.5602C219.08 101.784 216.787 104.078 212.762 106.44C211.721 107.05 202.022 112.056 197.857 114.48C191.808 117.993 188.321 123.057 185.461 130.91C185.121 131.851 184.788 132.83 184.396 134.016L183.407 137.064C181.664 142.43 180.482 145.175 178.628 147.532C175.674 151.281 171.977 153.618 169.332 153.762C166.583 153.911 166.232 151.732 168.783 148.708C175.522 140.721 177.452 132.374 173.416 119.141C170.871 110.779 163.962 104.875 153.368 100.315C151.028 99.3074 148.571 98.3954 145.769 97.4498C144.693 97.0898 143.605 96.7346 142.259 96.3074L139.083 95.309C134.385 93.8115 127.371 95.0306 117.485 98.4914C115.426 99.2114 113.267 100.023 110.693 101.021L103.088 104.006C100.333 105.072 98.3146 105.806 96.5889 106.349C94.1463 107.135 91.7613 108.038 89.4462 109.051C88.5219 109.45 84.8482 111.058 83.9648 111.432C82.4795 112.094 80.9345 112.662 79.3434 113.131C76.243 113.971 74.3008 113.539 73.3941 111.485C72.54 109.555 73.7802 107.405 76.787 104.89C78.3957 103.536 80.3905 102.173 83.3096 100.339C83.7718 100.051 87.0711 98.0114 87.9545 97.4498C89.231 96.6666 90.4481 95.8203 91.599 94.9154C95.5418 91.6803 95.1674 91.9587 96.0507 91.7907C96.5597 91.6947 99.9643 91.9635 101.749 91.9635C104.802 91.9635 105.861 91.8099 106.861 91.3155L107.628 90.9123C107.99 90.7203 108.318 90.5667 108.704 90.3987C110.01 89.8629 111.373 89.4259 112.776 89.0931C116.66 88.1139 117.584 86.77 118.204 82.6276C118.748 79.0133 119.082 77.6021 120.193 75.3126C121.357 72.9366 123.142 71.8278 125.657 71.7078C127.512 71.6118 128.875 71.8758 133.244 72.9558C134.969 73.4227 136.732 73.7852 138.521 74.0406C139.369 74.1462 140.177 74.2038 140.943 74.2038C153.058 74.2038 164.167 73.3302 169.49 71.343C172.018 70.4022 175.51 69.8551 182.319 69.1687L187.818 68.6311C190.111 68.4007 191.977 68.2087 193.826 67.9975C198.6 67.4503 202.835 66.8311 206.982 66.0487C214.248 64.6759 221.215 61.604 227.779 57.3129C231.865 54.637 235.622 51.6404 238.999 48.3658C241.925 45.4933 244.14 42.1804 245.522 38.6124C247.721 33.0589 248.049 26.9198 245.96 20.2623C245.222 17.9772 244.556 15.6769 243.963 13.3636ZM310.415 13.0048C310.696 13.0048 310.843 13.3399 310.648 13.5433C310.58 13.6148 310.519 13.6772 310.467 13.7296C308.156 16.1103 306.431 17.5311 304.723 18.3231C303.843 18.755 302.84 18.99 301.815 19.0047C300.423 19.0047 299.335 19.3263 297.89 20.0655L296.34 20.8863C293.777 22.2302 291.654 22.8446 288.36 22.8446C285.085 22.8446 282.516 22.2398 278.954 20.9007C278.504 20.7334 278.056 20.5638 277.608 20.3919L276.333 19.9215C275.397 19.5855 274.625 19.3599 273.894 19.2111C273.269 19.078 272.626 19.0087 271.981 19.0047C270.635 19.0047 269.465 18.6783 265.546 17.3871L264.633 17.0895C261.708 16.1439 259.895 15.736 258.479 15.8128C256.765 15.9088 255.893 16.7871 255.893 18.7647C255.893 28.7293 252.846 42.9659 248.786 46.2922C244.352 49.9354 233.254 57.6681 228.861 60.2408C221.163 64.7527 210.627 69.9367 203.057 72.2694C200.514 73.0524 197.911 73.6986 195.265 74.2038C193.346 74.5782 191.404 74.8902 188.684 75.279C188.374 75.327 183.536 75.9989 181.957 76.2341C179.113 76.6517 176.516 77.0693 173.767 77.5589C161.704 79.7093 159.101 79.9637 151.473 79.9637C150.016 79.9637 149.776 79.9301 143.254 79.0037C141.838 78.8021 140.732 78.6533 139.656 78.5237C134.912 77.9525 131.565 77.8709 129.337 78.4277C126.681 79.0997 125.868 80.6597 127.172 83.4772C128.354 86.0116 130.004 87.61 132.344 88.6323C134.251 89.4675 136.292 89.8803 140.428 90.4131C145.939 91.1235 146.828 91.2531 149.495 91.8147C153.296 92.606 156.957 93.7949 160.388 95.3522C165.243 97.5506 168.917 100.872 172.076 105.379C173.673 107.65 177.61 114.658 178.242 115.55C180.231 118.358 181.904 118.733 184.612 116.51C187.508 114.139 190.667 112.493 196.973 109.762C197.147 109.686 197.582 109.495 197.887 109.363C198.104 109.269 198.323 109.176 198.54 109.082C202.99 107.151 205.241 106.065 207.497 104.645C210.487 102.773 212.563 100.757 213.798 98.3522C218.782 88.6371 225.936 82.3636 232.786 82.3636L236.004 82.378C242.164 82.4164 246.153 82.3876 250.57 82.2292C258.561 81.9316 264.481 81.2261 267.763 79.9877C271.185 78.6917 275.613 77.3525 281.908 75.6581C283.932 75.111 285.588 74.6742 289.337 73.6902C293.842 72.5142 295.819 71.991 298.212 71.3382C300.417 70.7328 302.626 70.1376 304.84 69.5527C306.987 68.9767 308.326 68.5927 309.537 68.2183C310.869 67.8132 312.171 67.3419 313.433 66.8071C314.527 66.3367 315.633 65.7991 316.861 65.1271C318.897 64.0088 320.459 63.6248 323.904 63.1448L324.577 63.0488C327.917 62.564 329.842 61.9448 332.042 60.3464C336.616 57.0057 337.061 49.2202 334.288 38.9772C333.294 35.2956 333.06 29.7229 333.37 21.9519C333.485 19.0593 333.639 16.1679 333.831 13.2782C333.841 13.1243 333.969 13.0048 334.123 13.0048C334.292 13.0048 334.426 13.1469 334.416 13.3153L334.346 14.4736C334.159 17.5551 334.036 19.7631 333.949 21.9711C333.65 29.6989 333.879 35.2428 334.861 38.8716C337.681 49.2778 337.225 57.2073 332.428 60.7016C330.14 62.372 328.116 63.0248 324.682 63.5192L324.004 63.6152C320.634 64.0904 319.137 64.4551 317.189 65.5255C316.065 66.1467 314.901 66.7171 313.702 67.2343C312.419 67.7782 311.096 68.2574 309.742 68.6695C308.519 69.0487 307.174 69.4279 305.021 70.0087C302.814 70.6042 300.607 71.1978 298.399 71.7894C296 72.447 294.023 72.9702 289.519 74.151C285.763 75.1302 284.113 75.567 282.089 76.1093C275.812 77.8037 271.402 79.1333 268.009 80.4197C264.639 81.6964 258.666 82.4068 250.593 82.7092C246.171 82.8676 242.17 82.8964 235.998 82.858L232.786 82.8436C226.24 82.8436 219.238 88.9827 214.336 98.5394C213.055 101.031 210.919 103.109 207.854 105.029C205.502 106.502 203.18 107.616 198.488 109.646L197.248 110.184C190.989 112.896 187.865 114.523 185.022 116.856C182.015 119.323 179.903 118.848 177.739 115.79C177.084 114.869 173.147 107.87 171.573 105.614C168.455 101.179 164.857 97.925 160.107 95.7746C156.717 94.2358 153.099 93.0614 149.343 92.2803C146.711 91.7187 145.822 91.5939 140.334 90.8883C136.14 90.3507 134.052 89.9283 132.069 89.0595C129.6 87.9795 127.857 86.29 126.628 83.65C125.207 80.5829 126.172 78.7253 129.167 77.9717C131.507 77.3861 134.912 77.4677 139.744 78.0533C140.82 78.1829 141.932 78.3317 143.353 78.5333C149.8 79.4453 150.069 79.4837 151.473 79.4837C159.054 79.4837 161.622 79.2341 173.644 77.0885C176.399 76.5989 179.002 76.1765 181.851 75.7589C183.437 75.5286 188.274 74.847 188.579 74.8086C191.293 74.4198 193.229 74.1078 195.131 73.7382C197.792 73.2246 200.255 72.615 202.852 71.8182C210.358 69.5095 220.864 64.3351 228.522 59.8472C232.892 57.2889 243.966 49.5754 248.376 45.9563C252.267 42.7547 255.308 28.5997 255.308 18.7647C255.308 16.5519 256.397 15.4528 258.438 15.3328C259.977 15.2464 261.831 15.6688 264.85 16.6431L265.762 16.9407C269.582 18.1983 270.752 18.5247 271.981 18.5247C272.648 18.5247 273.326 18.6015 274.028 18.7455C274.8 18.9039 275.596 19.1391 276.567 19.4799C277.224 19.7123 277.876 19.9555 278.521 20.2095L279.194 20.4687C282.692 21.7791 285.178 22.3646 288.36 22.3646C291.525 22.3646 293.549 21.7839 296.024 20.4831C296.141 20.4207 297.252 19.8207 297.58 19.6575C299.113 18.8751 300.294 18.5247 301.815 18.5247C302.675 18.5247 303.535 18.3183 304.43 17.9007C306.056 17.1519 307.747 15.7648 310.011 13.432L310.416 13.009C310.418 13.0074 310.417 13.0048 310.415 13.0048ZM203.943 300.531C203.892 300.804 203.653 301 203.375 301C203.008 301 202.733 300.664 202.801 300.303C203.03 299.076 203.232 297.757 203.414 296.363C203.671 294.395 203.859 292.403 203.987 290.503C204.031 289.877 204.065 289.306 203.832 287.399C203.8 287.136 203.744 286.876 203.672 286.621C203.435 285.786 203.205 284.861 202.987 283.864C201.811 278.46 201.431 272.872 202.32 267.65C202.783 264.667 203.805 261.761 205.35 259.034C207.233 255.82 209.72 252.868 212.721 250.289C214.698 248.561 215.956 247.649 219.642 245.11C222.274 243.295 223.356 242.441 224.041 241.51C224.415 240.996 224.596 240.521 224.596 240.041C224.596 239.201 224.596 239.206 224.158 235.611C223.947 233.835 223.824 232.587 223.76 231.31C223.467 225.502 224.708 221.902 228.504 220.865C237.806 218.321 243.65 215.057 248.072 208.606C253.612 200.514 263.118 193.482 269.056 193.482C276.286 193.482 280.756 192.541 286.26 189.258C290.215 186.896 291.818 186.09 293.555 185.677C294.854 185.37 295.778 185.322 298.89 185.322C299.978 185.322 300.955 184.924 302.149 184.064C302.78 183.604 305.138 181.607 305.425 181.376C308.958 178.568 312.433 177.162 317.61 177.162C319.043 177.162 320.266 177.181 321.892 177.22C326.285 177.33 327.081 177.301 328.485 176.884C330.257 176.356 331.72 175.429 337.114 171.522C341.793 168.133 343.385 167.241 350.492 163.617C351.335 163.185 352.007 162.834 352.651 162.479C354.619 161.413 356.471 160.209 358.185 158.879C360.263 157.274 362.245 155.636 364.109 153.97C364.449 153.665 364.994 153.905 364.994 154.362C364.994 154.512 364.93 154.655 364.818 154.754C362.944 156.418 360.999 158.028 358.986 159.58C357.126 161.02 355.359 162.148 353.3 163.276C352.645 163.641 351.966 163.996 351.107 164.428C344.057 168.028 342.501 168.901 337.886 172.242C332.352 176.25 330.86 177.196 328.883 177.786C327.28 178.266 326.432 178.295 321.857 178.18C320.242 178.141 319.031 178.122 317.61 178.122C312.772 178.122 309.566 179.418 306.244 182.068C305.986 182.274 303.599 184.295 302.921 184.784C301.534 185.788 300.312 186.282 298.89 186.282C295.907 186.282 295.029 186.33 293.883 186.599C292.321 186.973 290.788 187.736 286.951 190.031C281.218 193.453 276.509 194.442 269.056 194.442C263.662 194.442 254.454 201.258 249.09 209.077C244.504 215.768 238.42 219.166 228.879 221.777C225.772 222.627 224.661 225.862 224.93 231.272C224.988 232.52 225.111 233.763 225.328 235.515C225.766 239.172 225.766 239.153 225.766 240.041C225.766 240.703 225.521 241.351 225.041 242.004C224.263 243.06 223.134 243.958 220.396 245.844C216.74 248.359 215.506 249.262 213.569 250.946C210.652 253.454 208.233 256.322 206.403 259.447C204.911 262.084 203.924 264.895 203.478 267.78C202.607 272.896 202.981 278.383 204.139 283.691C204.391 284.829 204.654 285.866 204.917 286.783C205 287.061 205.073 287.314 205.209 288.288C205.25 288.583 205.261 288.881 205.246 289.177C205.116 291.613 204.895 294.044 204.584 296.469C204.392 297.907 204.181 299.266 203.943 300.531ZM196.014 301H195.551C195.482 301 195.438 300.927 195.47 300.866C197.266 297.429 197.979 295.187 197.979 291.88C197.979 290.167 197.938 289.514 197.535 284.368C197.084 278.589 196.95 274.941 197.213 270.784C197.552 265.265 198.617 260.177 200.612 255.348C201.372 253.524 202.25 251.748 203.274 250.02C205.298 246.593 207.269 244.073 209.369 242.052C210.169 241.286 211.019 240.555 211.914 239.863C212.165 239.671 213.669 238.519 214.061 238.207C217.407 235.52 218.454 232.678 218.454 224.201C218.454 215.158 220.151 212.792 227.709 210.646C228.346 210.469 228.832 210.325 229.329 210.176C230.552 209.808 231.744 209.375 232.898 208.88C235.793 207.632 238.537 205.894 241.345 203.398C256.262 190.136 263.077 186.522 274.321 186.522C279.164 186.522 282.826 185.586 287.19 183.498C288.232 183.004 295.275 179.264 297.814 178.088C299.469 177.325 301.125 176.634 302.862 175.981C307.495 174.253 311.035 173.845 318.423 173.677C322.828 173.581 324.682 173.442 326.765 172.919C329.427 172.247 331.48 170.999 333.159 168.873C334.446 167.236 337.166 165.474 341.735 163.084C342.677 162.59 343.648 162.1 345.04 161.404C350.615 158.596 351.803 157.982 353.704 156.81C356.828 154.89 359.144 152.793 361.707 149.721C362.67 148.557 363.602 147.376 364.503 146.179C364.66 145.971 364.994 146.081 364.994 146.342C364.994 146.401 364.975 146.459 364.939 146.506C363.815 147.989 362.992 149.031 362.186 149.995C359.601 153.105 357.237 155.236 354.055 157.194C352.13 158.375 350.943 158.994 345.344 161.807C344.24 162.359 343.143 162.919 342.051 163.487C337.546 165.839 334.879 167.577 333.65 169.132C331.895 171.354 329.731 172.679 326.935 173.38C324.782 173.917 322.898 174.061 318.435 174.162C311.122 174.325 307.648 174.729 303.108 176.418C301.403 177.055 299.732 177.751 298.101 178.506C295.585 179.672 288.542 183.412 287.483 183.916C283.037 186.042 279.276 187.002 274.321 187.002C263.282 187.002 256.595 190.554 241.778 203.725C238.923 206.259 236.121 208.03 233.178 209.302C232.008 209.806 230.838 210.224 229.534 210.622C229.031 210.776 228.539 210.92 226.392 211.52C223.421 212.365 222.04 213.08 220.964 214.577C219.659 216.392 219.039 219.349 219.039 224.201C219.039 232.793 217.945 235.755 214.476 238.548C214.073 238.87 212.563 240.017 212.318 240.209C211.437 240.89 210.601 241.61 209.814 242.364C207.749 244.351 205.801 246.838 203.8 250.226C202.79 251.938 201.91 253.7 201.168 255.502C199.19 260.287 198.137 265.332 197.798 270.813C197.541 274.941 197.669 278.575 198.12 284.335C198.523 289.499 198.564 290.152 198.564 291.88C198.564 294.927 197.968 297.096 196.022 300.995C196.021 300.998 196.017 301 196.014 301ZM210.683 300.704C210.684 300.867 210.553 301 210.39 301C210.23 301 210.099 300.871 210.098 300.711C210.082 298.539 210.141 296.378 210.264 293.79C210.416 290.714 210.03 288.131 208.784 282.093L208.603 281.2C207.363 275.176 206.988 271.913 207.45 268.495C208.053 264.055 210.229 260.489 214.47 257.614C227.363 248.878 231.909 243.127 231.909 236.201C231.909 234.953 231.733 233.892 231.336 232.28C230.768 229.98 230.692 229.553 230.768 228.646C230.885 227.417 231.511 226.39 232.851 225.42C234.413 224.292 236.975 223.213 240.877 222.056C246.563 220.376 249.956 217.649 255.092 211.702L256.133 210.502C258.754 207.464 260.287 205.88 262.235 204.368C264.756 202.414 267.488 201.118 270.741 200.447C278.521 198.853 282.657 197.821 285.564 196.779C286.624 196.398 287.656 195.966 288.653 195.483C289.296 195.171 289.677 194.984 291.133 194.235C292.713 193.429 294.187 193.237 297.79 193.141C300.973 193.055 302.412 192.935 304.208 192.464C306.362 191.899 308.29 190.868 309.789 189.479C312.638 186.935 315.656 185.826 320.196 185.207C320.822 185.12 321.295 185.063 322.454 184.928C326.49 184.463 328.268 184.117 330.339 183.191C332.972 182.015 334.311 181.06 344.063 173.745L345.9 172.377C351.545 168.196 355.33 165.738 358.431 164.466C360.746 163.519 362.604 162.384 364.559 160.717C364.729 160.572 364.994 160.691 364.994 160.915C364.994 160.991 364.961 161.063 364.903 161.112C362.935 162.783 361.044 163.929 358.688 164.898C355.658 166.141 351.896 168.58 346.286 172.732L344.461 174.1C334.633 181.468 333.317 182.404 330.62 183.613C328.467 184.573 326.642 184.933 322.536 185.404C321.383 185.538 320.909 185.596 320.289 185.677C315.867 186.282 312.965 187.348 310.222 189.805C308.655 191.256 306.64 192.334 304.389 192.925C302.517 193.405 301.043 193.535 297.808 193.621C294.31 193.717 292.9 193.895 291.437 194.643C290.618 195.073 289.789 195.49 288.951 195.896C287.933 196.387 286.88 196.828 285.798 197.216C282.85 198.272 278.691 199.314 270.881 200.912C265.183 202.083 261.954 204.584 256.607 210.781L255.572 211.981C250.365 218 246.902 220.784 241.076 222.507C237.232 223.64 234.729 224.7 233.237 225.78C232.008 226.673 231.453 227.576 231.353 228.68C231.277 229.524 231.353 229.942 231.909 232.184C232.318 233.825 232.494 234.92 232.494 236.201C232.494 243.3 227.855 249.161 214.839 257.988C210.726 260.772 208.615 264.228 208.03 268.548C207.573 271.908 207.948 275.138 209.176 281.124L209.363 282.012C210.621 288.083 211.001 290.685 210.849 293.81C210.726 296.368 210.667 298.514 210.683 300.704ZM70.1006 301C69.487 301 69.0291 300.433 69.1316 299.828C69.4129 298.168 69.6291 296.087 69.849 293.33C69.966 291.837 70.007 291.381 70.0772 290.642C70.8377 282.223 72.4405 277.615 76.8046 274.706C79.5248 272.896 81.0282 270.424 81.8764 267.026C82.1748 265.817 82.2859 265.169 82.6545 262.625C83.0406 259.985 83.333 258.756 83.9648 257.652C84.8131 256.169 86.1995 255.401 88.2879 255.401C96.6416 255.401 110.798 259.778 119.643 265.097C124.709 268.145 132.08 271.49 138.211 273.309C145.833 275.57 151.016 275.426 152.689 272.479C153.684 270.732 153.813 270.506 154.24 269.709C155.954 266.508 156.983 263.853 157.311 261.309C157.445 260.268 157.451 259.279 157.323 258.334C157.135 257.014 156.492 256.15 154.936 254.806L154.164 254.148C153.661 253.725 153.191 253.278 152.754 252.809C152.205 252.19 151.716 251.537 151.291 250.855L150.63 249.828C149.683 248.34 149.063 247.62 148.22 247.159C145.143 245.479 139.562 244.519 131.519 243.881C129.758 243.743 127.995 243.63 126.23 243.54L124.955 243.459C119.357 243.108 116.11 242.71 113.805 241.923C105.592 239.115 93.5587 229.241 93.5587 224.201C93.5587 221.638 94.5766 219.627 96.7586 217.419C97.9169 216.248 103.264 211.798 104.241 210.92C106.885 208.534 110.184 206.341 114.583 203.883C116.221 202.971 123.229 199.275 124.815 198.368C126.136 197.585 127.377 196.713 128.524 195.762C129.419 195.042 132.595 192.339 132.689 192.258C136.889 188.754 140.118 186.709 144.236 185.356C146.202 184.712 148.992 184.016 154.444 182.773C156.741 182.247 159.038 181.722 161.336 181.199C163.814 180.629 166.285 180.037 168.747 179.423C180.681 176.428 188.637 173.625 192.609 170.572C197.722 166.636 199.5 163.929 201.811 158.082C202.993 155.097 203.619 153.743 204.777 151.977C210.358 143.476 221.572 133.08 230.224 130.161C238.502 127.363 241.561 124.526 241.561 121.483C241.561 120.096 243.158 117.451 245.557 114.893C248.341 111.917 251.787 109.44 255.355 108.086C262.668 105.317 274.952 103.243 283.096 103.243C286.208 103.243 288.846 102.523 292.701 100.896C298.083 98.6354 298.609 98.4434 300.645 98.4434C306.741 98.4434 319.4 97.2194 327.414 95.5778L329.684 95.1074L331.714 94.6802C333.235 94.3634 334.247 94.1618 335.183 93.9938C337.465 93.581 339.138 93.4035 340.787 93.4323C342.39 93.4611 343.987 93.6818 345.859 94.1426C348.527 94.8002 353.879 93.7107 359.238 91.4163C360.98 90.6778 362.654 89.8349 364.245 88.8945C364.574 88.7 364.994 88.9346 364.994 89.3168C364.994 89.4878 364.905 89.6461 364.758 89.7333C358.3 93.5629 349.872 96.1359 345.52 95.0642C343.98 94.6599 342.38 94.4337 340.764 94.3922C339.225 94.3682 337.628 94.5362 335.435 94.9298C333.606 95.2676 331.787 95.6357 329.977 96.0338L327.695 96.509C319.587 98.1698 306.834 99.4034 300.645 99.4034C298.896 99.4034 298.358 99.5954 293.233 101.751C289.226 103.435 286.442 104.203 283.096 104.203C275.11 104.203 263.001 106.248 255.847 108.955C252.465 110.237 249.166 112.613 246.487 115.473C244.235 117.883 242.731 120.369 242.731 121.483C242.731 124.973 239.338 128.116 230.669 131.044C222.321 133.867 211.27 144.105 205.807 152.428C204.695 154.132 204.081 155.442 202.923 158.38C200.553 164.365 198.693 167.207 193.405 171.273C189.263 174.46 181.196 177.306 169.087 180.34C166.618 180.955 164.142 181.549 161.657 182.12C159.359 182.653 157.058 183.178 154.755 183.695C149.349 184.933 146.582 185.62 144.669 186.248C140.732 187.54 137.62 189.512 133.525 192.93C133.437 193.002 130.249 195.714 129.343 196.443C128.149 197.433 126.858 198.341 125.482 199.155C123.879 200.077 116.853 203.778 115.244 204.675C110.915 207.094 107.674 209.245 105.106 211.563C104.1 212.475 98.7885 216.896 97.6712 218.024C95.6412 220.069 94.7287 221.878 94.7287 224.201C94.7287 228.761 106.428 238.361 114.256 241.039C116.403 241.774 119.579 242.163 125.049 242.503C125.895 242.557 126.741 242.608 127.588 242.657C129.483 242.767 130.553 242.835 131.642 242.921C139.878 243.579 145.576 244.553 148.87 246.363C149.934 246.939 150.636 247.759 151.677 249.382L152.327 250.404C152.724 251.042 153.182 251.654 153.696 252.233C154.058 252.631 154.456 253.001 155.018 253.486C155.152 253.601 155.661 254.042 155.79 254.143C157.504 255.626 158.27 256.654 158.487 258.223C158.627 259.241 158.621 260.301 158.481 261.41C158.136 264.074 157.077 266.81 155.316 270.098C154.883 270.9 154.755 271.13 153.76 272.882C151.718 276.468 145.962 276.626 137.819 274.212C131.577 272.359 124.113 268.97 118.953 265.869C110.301 260.661 96.3783 256.361 88.2938 256.361C85.3688 256.361 84.5498 257.81 83.8244 262.74C83.646 264.242 83.3806 265.737 83.0289 267.218C82.1338 270.818 80.5134 273.477 77.5475 275.455C73.5286 278.133 71.9901 282.549 71.2471 290.719C71.1828 291.448 71.1419 291.904 71.0249 293.392C70.756 296.753 70.4931 299.142 70.1076 300.994C70.1069 300.998 70.104 301 70.1006 301ZM74.8097 301C74.5067 301 74.2843 300.715 74.3553 300.421C74.4786 299.909 74.6045 299.368 74.7395 298.797L75.3538 296.099C76.8163 289.715 77.8107 286.538 79.2615 284.555C80.256 283.192 81.4143 281.916 83.9707 279.261C88.7735 274.288 90.3354 272.277 90.3354 270.281L90.3237 269.469C90.312 268.615 90.312 268.173 90.3354 267.66C90.4582 265.236 91.1953 263.724 93.0497 263.148C95.3429 262.428 99.1278 263.359 104.82 266.234C110.412 269.057 115.075 271.37 119.977 273.751C120.743 274.125 128.325 277.788 130.314 278.767C131.569 279.385 132.821 280.009 134.069 280.639C142.154 284.719 156.849 283.063 161.154 276.88C163.26 273.866 163.81 272.791 165.706 268.567C165.924 268.072 166.154 267.581 166.396 267.093C167.033 265.808 167.828 264.579 168.771 263.426C174.229 256.716 177.499 250.898 177.499 245.801C177.499 244.044 177.938 242.623 179.464 238.673C179.769 237.886 179.95 237.396 180.137 236.883C182.267 231.012 181.916 227.705 177.628 225.363C175.881 224.392 173.881 223.771 171.789 223.549C167.577 223.102 163.313 224.11 157.802 226.371C156.896 226.745 153.918 228.022 153.356 228.257C152.532 228.6 151.725 228.968 150.935 229.361L148.361 230.638C141.563 233.96 136.427 235.044 129.167 233.556C127.225 233.153 125.517 232.884 121.504 232.289C113.753 231.142 110.564 230.489 107.856 229.188C104.211 227.427 103.492 224.859 106.171 221.197C108.526 217.986 111.364 215.032 114.618 212.403C116.186 211.13 117.81 209.904 119.485 208.726C119.444 208.75 123.089 206.182 124.06 205.477C125.392 204.52 126.662 203.506 127.863 202.438C132.367 198.378 135.339 196.026 139.609 193.525C145.424 190.117 152.128 187.592 160.189 186.047C181.851 181.9 190.024 179.951 194.604 177.44C199.635 174.69 207.064 165.551 216.155 151.132C219.209 146.284 223.333 142.3 228.516 138.792C231.517 136.756 234.108 135.312 238.783 132.921C243.123 130.704 244.41 129.974 245.44 129.004C246.141 128.293 246.721 127.506 247.165 126.667C247.522 126.043 248.844 123.561 248.92 123.417C249.716 121.977 250.418 120.825 251.231 119.707C255.051 114.442 260.609 111.067 269.6 109.723C277.047 108.619 281.212 108.427 286.962 108.619C288.864 108.682 289.378 108.696 290.238 108.686C293.251 108.653 295.919 108.187 299.955 106.862C312.088 102.878 322.623 101.083 334.581 101.083C336.365 101.083 338.108 101.155 340.711 101.314L341.934 101.391C349.217 101.851 352.51 101.851 356.757 101.088C359.518 100.59 362.175 99.7645 364.644 98.6374C364.81 98.5616 365 98.6822 365 98.8647C365 98.9619 364.944 99.0503 364.855 99.0904C362.356 100.225 359.67 101.056 356.88 101.559C352.563 102.331 349.229 102.331 341.887 101.871L340.67 101.794C338.079 101.635 336.347 101.563 334.581 101.563C322.705 101.563 312.234 103.349 300.177 107.304C296.076 108.648 293.333 109.128 290.25 109.166C289.372 109.176 288.852 109.162 286.939 109.099C281.229 108.907 277.111 109.094 269.699 110.203C260.889 111.514 255.472 114.801 251.734 119.952C250.887 121.135 250.125 122.358 249.453 123.614C249.383 123.749 248.055 126.24 247.692 126.873C247.226 127.753 246.616 128.577 245.878 129.321C244.79 130.344 243.498 131.078 239.093 133.329C234.442 135.71 231.868 137.145 228.89 139.161C223.766 142.631 219.688 146.567 216.67 151.353C207.538 165.849 200.08 175.026 194.932 177.844C190.263 180.397 182.079 182.351 160.318 186.517C152.333 188.043 145.705 190.544 139.948 193.919C135.725 196.395 132.771 198.723 128.295 202.765C127.082 203.844 125.799 204.87 124.452 205.837C123.475 206.547 119.825 209.115 119.866 209.086C117.953 210.45 116.473 211.563 115.034 212.744C111.817 215.346 109.013 218.27 106.686 221.446C104.17 224.883 104.802 227.153 108.166 228.771C110.781 230.033 113.946 230.686 121.761 231.838C124.298 232.18 126.819 232.597 129.319 233.086C136.403 234.54 141.393 233.489 148.074 230.225L150.648 228.953C151.619 228.473 152.379 228.123 153.105 227.825C153.661 227.595 156.638 226.318 157.551 225.944C163.161 223.64 167.519 222.613 171.877 223.073C174.057 223.304 176.14 223.95 177.961 224.96C182.536 227.46 182.904 230.969 180.711 237.022C180.523 237.535 180.336 238.03 180.032 238.817C178.529 242.715 178.096 244.116 178.096 245.801C178.096 251.023 174.785 256.908 169.274 263.695C168.353 264.82 167.574 266.02 166.952 267.276C166.735 267.708 166.525 268.149 166.261 268.735C164.36 272.983 163.798 274.077 161.675 277.12C157.188 283.562 142.119 285.256 133.771 281.047C132.528 280.418 131.28 279.795 130.027 279.18C128.038 278.2 120.457 274.538 119.69 274.164C114.788 271.778 110.12 269.469 104.527 266.647C98.9698 263.839 95.3429 262.951 93.272 263.594C91.7042 264.084 91.0491 265.428 90.9321 267.679C90.9061 268.274 90.9022 268.869 90.9204 269.465L90.9321 270.281C90.9321 272.44 89.3585 274.471 84.193 279.818C81.8998 282.194 80.7591 283.461 79.7763 284.805C78.3782 286.711 77.3895 289.874 75.9388 296.19L75.3245 298.888L74.8242 300.989C74.8226 300.995 74.8166 301 74.8097 301ZM80.9521 301H80.8479C80.5911 301 80.3905 300.777 80.3905 300.52C80.3905 294.573 85.3513 284.407 91.599 279.703C92.3991 279.1 93.1188 278.429 93.7459 277.701C94.3825 276.955 94.9459 276.169 95.4306 275.349C95.6412 275.004 96.4544 273.592 96.6591 273.256C98.5428 270.237 100.66 270.117 106.586 273.444C107.37 273.876 110.137 275.44 110.33 275.546C111.863 276.41 113.062 277.082 114.25 277.735C117.192 279.362 119.731 280.711 122.153 281.911C130.536 286.072 137.064 288.28 142.107 288.28C151.97 288.28 161.242 285.424 165.273 281.176C166.203 280.197 167.145 278.695 168.233 276.554C168.701 275.632 169.192 274.605 169.795 273.29L171.397 269.772C174.124 263.801 175.937 260.623 178.16 258.602C182.781 254.383 186.859 241.323 186.859 233.321C186.859 232.409 186.958 231.828 187.455 229.352C187.672 228.296 187.795 227.624 187.888 226.918C188.257 224.273 188.011 222.377 186.906 220.971C184.215 217.563 175.381 216.541 164.407 218.677C160.601 219.381 156.889 220.394 153.327 221.701C150.303 222.838 143.318 226.376 143.675 226.212C139.744 227.96 136.087 228.204 129.167 226.836C111.881 223.409 111.366 222.699 120.24 213.968C130.442 203.922 147.805 191.802 153.222 191.802C159.025 191.802 184.718 186.052 191.702 183.186C197.236 180.916 205.929 173.02 213.242 165.018C213.657 164.562 221.139 154.65 224.474 150.811C229.943 144.508 235.132 139.987 240.239 137.596C244.504 135.595 247.938 132.662 251.237 128.606C252.366 127.214 257.391 120.134 258.684 118.809C259.585 117.883 260.439 117.269 261.328 116.942C269.559 113.942 275.497 112.603 284.26 112.603H301.224C303.594 112.603 305.53 112.411 314.638 111.403L317.154 111.13C322.957 110.506 326.847 110.203 329.889 110.203C330.86 110.203 331.615 110.208 333.416 110.222C344.303 110.314 350.118 109.992 359.659 108.288C361.353 107.988 363.012 107.503 364.644 106.841C364.808 106.775 364.988 106.895 364.988 107.072C364.988 107.172 364.928 107.262 364.835 107.299C363.229 107.951 361.532 108.441 359.782 108.758C350.188 110.467 344.338 110.794 333.411 110.702C331.609 110.688 330.86 110.683 329.889 110.683C326.876 110.683 323.009 110.986 317.23 111.605L314.714 111.883C305.565 112.896 303.635 113.083 301.224 113.083H284.26C275.596 113.083 269.729 114.403 261.562 117.384C260.778 117.672 259.988 118.238 259.14 119.112C257.877 120.398 252.869 127.459 251.722 128.87C248.376 132.984 244.878 135.974 240.532 138.009C235.518 140.361 230.376 144.839 224.953 151.084C221.631 154.91 214.149 164.831 213.71 165.306C206.339 173.37 197.611 181.3 191.96 183.618C184.905 186.512 159.119 192.282 153.222 192.282C148.062 192.282 130.764 204.354 120.685 214.275C112.144 222.685 112.384 223.016 129.307 226.371C136.093 227.715 139.603 227.475 143.4 225.795C143.008 225.963 150.016 222.421 153.087 221.264C156.252 220.073 159.873 219.061 164.266 218.206C175.457 216.032 184.536 217.078 187.397 220.712C188.596 222.233 188.848 224.225 188.473 226.971C188.354 227.795 188.208 228.616 188.035 229.433C187.543 231.872 187.444 232.452 187.444 233.321C187.444 241.433 183.331 254.599 178.593 258.919C176.44 260.882 174.638 264.031 171.942 269.94C171.737 270.386 170.655 272.791 170.345 273.458C169.736 274.783 169.245 275.81 168.777 276.741C167.665 278.916 166.7 280.452 165.735 281.469C161.581 285.851 152.134 288.76 142.107 288.76C136.924 288.76 130.319 286.528 121.849 282.319C119.421 281.114 116.876 279.765 113.922 278.133C112.61 277.409 111.301 276.679 109.997 275.944L106.253 273.837C100.59 270.655 98.8762 270.756 97.1856 273.477C96.9809 273.804 96.1677 275.215 95.9571 275.565C95.4588 276.406 94.8798 277.214 94.2256 277.98C93.5704 278.733 92.8391 279.42 91.9967 280.058C85.8719 284.666 80.9755 294.703 80.9755 300.52L80.9582 300.994C80.9581 300.997 80.9554 301 80.9521 301ZM63.6027 300.996C63.6042 300.998 63.6033 301 63.6013 301H63.2079C63.0988 301 63.03 300.882 63.0811 300.786C63.6895 299.639 64.0108 298.425 64.0108 297.16C64.0108 287.56 66.8363 276.981 71.1185 273.472C74.1429 270.986 75.6638 269.45 76.9099 267.357C78.4542 264.761 79.2206 261.597 79.2206 257.321C79.2206 254.047 79.8875 251.758 81.192 250.087C82.2099 248.791 83.2979 248.066 86.4042 246.478C87.2049 246.079 87.9676 245.632 88.6857 245.139C91.3825 243.238 92.5349 242.163 93.2018 240.622C94.0384 238.692 93.7459 236.283 92.1137 232.932C91.4393 231.601 90.6596 230.307 89.7796 229.059L89.2356 228.243C88.6845 227.459 88.1693 226.658 87.6912 225.843C84.6727 220.702 85.4858 216.771 92.1839 211.549C97.0476 207.745 102.294 204.284 107.868 201.205C110.184 199.914 117.695 196.021 119.123 195.205C120.599 194.353 126.711 189.975 128.098 188.985C128.55 188.662 128.94 188.385 129.208 188.197C132.115 186.152 134.526 184.597 136.842 183.325C139.603 181.813 142.089 180.791 144.371 180.292C151.847 178.655 153.497 178.285 157.106 177.426C164.448 175.679 169.953 174.114 173.568 172.626C174.974 172.076 176.436 171.628 177.938 171.287C183.004 170.01 184.969 169.319 187.865 167.399C191.831 164.778 195.511 160.559 199.173 154.022C208.515 137.332 210.334 135.115 217.98 130.411C219.817 129.278 221.707 128.443 224.667 127.339L226.03 126.84C233.009 124.272 235.898 122.553 238.373 118.497C239.473 116.688 239.824 115.478 240.344 112.608C240.801 110.117 241.21 108.979 242.409 107.688C243.913 106.056 246.522 104.678 250.81 103.363C252.781 102.758 255.115 102.163 257.859 101.573C267.412 99.509 272.648 99.0002 281.025 98.7842C285.061 98.6786 286.582 98.5154 288.431 97.8242C289.127 97.565 289.811 97.2338 290.525 96.8114C292.689 95.5154 295.287 94.6322 298.27 94.0898C301.61 93.4802 304.524 93.3507 309.209 93.3939L310.584 93.4035C312.234 93.4035 314.562 92.9235 322.109 91.1523C328.444 89.6739 331.439 89.0835 333.399 89.0835C333.879 89.0835 334.51 89.1459 335.476 89.2803L338.406 89.7123C344.151 90.5187 348.609 90.6195 353.119 89.6115C357.565 88.6149 361.396 86.5689 364.525 83.2787C364.69 83.105 364.988 83.2199 364.988 83.4596C364.988 83.5264 364.963 83.5909 364.916 83.6392C361.729 86.9741 357.811 89.0528 353.271 90.0675C348.661 91.0995 344.128 90.9987 338.307 90.1779L335.382 89.7459C334.446 89.6211 333.838 89.5587 333.399 89.5587C331.527 89.5587 328.532 90.1443 321.851 91.7091C314.626 93.4035 312.316 93.8787 310.584 93.8787L309.204 93.869C304.559 93.8211 301.686 93.9507 298.399 94.5506C295.491 95.0834 292.958 95.9426 290.864 97.1906C290.179 97.6061 289.444 97.9632 288.67 98.2562C286.728 98.9762 285.161 99.1538 281.042 99.2594C272.706 99.4706 267.511 99.9794 258.011 102.029C255.646 102.525 253.313 103.118 251.021 103.805C246.826 105.101 244.299 106.426 242.872 107.971C241.76 109.181 241.362 110.256 240.924 112.675C240.397 115.593 240.029 116.841 238.894 118.704C237.594 120.892 235.652 122.78 233.243 124.2C231.417 125.285 229.762 125.99 226.264 127.272L224.912 127.771C221.982 128.86 220.127 129.686 218.331 130.79C210.785 135.436 209.012 137.592 199.699 154.214C196.008 160.818 192.27 165.1 188.234 167.773C185.262 169.741 183.244 170.447 178.113 171.743C176.64 172.076 175.205 172.514 173.825 173.053C170.175 174.551 164.641 176.125 157.27 177.882C153.034 178.883 148.783 179.838 144.517 180.748C142.312 181.232 139.878 182.236 137.17 183.719C134.529 185.205 132 186.819 129.594 188.552C128.336 189.437 124.383 192.294 124.068 192.522C124.053 192.533 124.041 192.542 124.026 192.553C122.569 193.63 121.046 194.645 119.462 195.594C118.023 196.419 110.5 200.312 108.195 201.594C102.647 204.659 97.4235 208.103 92.5817 211.889C86.0708 216.968 85.3103 220.673 88.2119 225.632C88.6863 226.439 89.1975 227.232 89.7445 228.008L90.2944 228.824C91.1834 230.087 91.971 231.397 92.6519 232.745C94.3367 236.201 94.6409 238.726 93.7576 240.775C93.0439 242.422 91.8388 243.545 89.066 245.499C88.3991 245.964 87.7088 246.363 85.9655 247.26C83.6723 248.436 82.6369 249.127 81.6892 250.342C80.4432 251.926 79.8056 254.129 79.8056 257.316C79.8056 261.66 79.0217 264.895 77.4363 267.559C76.1552 269.714 74.5991 271.289 71.5279 273.804C67.3921 277.197 64.5958 287.675 64.5958 297.155C64.5958 298.499 64.2568 299.785 63.6021 300.994C63.6017 300.995 63.6019 300.996 63.6027 300.996ZM228.89 301C228.544 301 228.244 300.761 228.166 300.424L227.656 298.216C225.854 290.411 225.287 285.64 226.053 280.332C226.463 277.548 226.504 275.685 226.375 272.988C226.27 270.852 226.275 270.261 226.486 269.325C226.942 267.261 228.498 265.231 232.564 261.482C237.87 256.586 239.736 254.086 244.147 247.01C244.937 245.743 245.51 244.865 246.124 243.987C246.651 243.228 247.189 242.518 247.745 241.827C249.581 239.571 251.857 237.785 257.596 233.758C264.159 229.15 266.663 227.105 268.202 224.576C268.611 223.904 268.962 223.232 269.331 222.464C269.63 221.818 269.92 221.17 270.202 220.52C272.326 215.749 274.888 213.833 283.599 211.971C286.518 211.347 295.62 209.509 296.106 209.408C305.577 207.44 310.923 205.875 315.691 203.36C319.119 201.55 319.108 201.555 331.872 195.426L333.393 194.696C339.377 191.816 343.396 189.8 346.69 188C348.45 187.044 350.167 186.035 351.838 184.976C353.085 184.169 354.328 183.356 355.564 182.538C358.38 180.687 361.426 179.084 364.652 177.758C364.815 177.69 364.994 177.811 364.994 177.988C364.994 178.089 364.933 178.181 364.839 178.219C361.677 179.52 358.692 181.091 355.933 182.908C356.038 182.84 353.148 184.751 352.2 185.356C350.52 186.423 348.793 187.439 347.023 188.403C343.718 190.208 339.693 192.224 333.697 195.109L332.176 195.843C319.423 201.963 319.435 201.958 316.013 203.763C311.175 206.317 305.781 207.896 296.252 209.874C295.766 209.974 286.664 211.813 283.757 212.432C279.059 213.44 276.064 214.592 274.133 216.032C272.577 217.193 271.794 218.365 270.758 220.688L269.881 222.641C269.54 223.371 269.158 224.087 268.734 224.787C267.143 227.403 264.616 229.467 257.982 234.123C252.29 238.116 250.026 239.892 248.242 242.091C247.678 242.788 247.144 243.5 246.639 244.227C246.025 245.095 245.463 245.969 244.679 247.227C240.245 254.335 238.35 256.865 233.003 261.799C229.007 265.495 227.504 267.453 227.065 269.412C226.866 270.3 226.866 270.871 226.966 272.964C227.094 275.69 227.048 277.572 226.644 280.389C225.883 285.631 226.445 290.368 228.241 298.125L228.895 300.994C228.896 300.997 228.893 301 228.89 301ZM184.086 301C183.496 301 183.092 300.406 183.308 299.857L183.671 298.936C184.279 297.352 184.8 295.682 185.238 293.944C186.789 287.834 187.151 282.602 187.151 274.12C187.151 271.38 186.063 269.441 184.735 269.441C183.015 269.441 180.664 272.133 178.341 277.639C172.614 291.247 165.103 297.64 153.228 297.64C140.112 297.64 136.111 296.992 124.902 292.797C123.007 292.083 121.167 291.275 119.392 290.378C117.666 289.514 111.916 286.264 110.711 285.712C108.254 284.579 106.616 284.411 105.024 285.237C104.656 285.429 104.287 285.674 103.913 285.981C103.111 286.633 102.269 287.251 101.392 287.834C100.801 288.231 100.205 288.621 99.6016 289.005L99.0166 289.389C94.1495 292.567 92.3887 294.846 92.3887 299.56C92.3887 299.862 92.3843 300.158 92.374 300.452C92.3633 300.76 92.1072 301 91.7987 301C91.4621 301 91.1958 300.716 91.2064 300.38C91.215 300.109 91.2187 299.837 91.2187 299.56C91.2187 294.51 93.1667 291.986 98.2912 288.635C98.6797 288.378 99.0697 288.122 99.4612 287.867C99.9468 287.56 100.298 287.325 100.649 287.095C101.498 286.53 102.312 285.931 103.088 285.299C103.521 284.949 103.954 284.656 104.399 284.426C106.428 283.37 108.493 283.586 111.284 284.872C112.542 285.453 118.321 288.712 120 289.557C121.738 290.435 123.539 291.225 125.394 291.923C136.433 296.056 140.27 296.68 153.228 296.68C164.489 296.68 171.649 290.584 177.247 277.322C179.728 271.442 182.313 268.481 184.741 268.481C186.964 268.481 188.327 270.909 188.327 274.12C188.327 282.664 187.959 287.944 186.397 294.136C185.946 295.912 185.414 297.606 184.788 299.224C184.555 299.846 184.321 300.435 184.094 300.995C184.093 300.998 184.089 301 184.086 301ZM97.2892 301C97.0681 301 96.9349 300.755 97.0552 300.569L97.0686 300.549C98.4607 298.477 99.7354 296.353 100.889 294.184C102.486 291.165 104.27 289.557 106.294 289.135C108.482 288.679 110.477 289.49 113.641 291.597C116.818 293.709 117.192 293.93 118.163 294.045C119.099 294.151 120.667 294.592 123.346 295.461C124.107 295.701 129.653 297.549 131.449 298.125C133.244 298.701 134.871 299.205 136.415 299.651C137.505 299.969 138.548 300.258 139.546 300.519C139.812 300.588 139.762 301 139.487 301C139.467 301 139.447 300.997 139.428 300.992C138.407 300.726 137.34 300.431 136.216 300.102C134.547 299.614 132.887 299.104 131.238 298.571C129.436 297.995 123.885 296.152 123.13 295.907C120.497 295.053 118.947 294.621 118.081 294.515C116.947 294.386 116.601 294.179 113.273 291.971C110.248 289.955 108.382 289.197 106.434 289.6C104.621 289.975 102.959 291.482 101.427 294.376C100.249 296.592 98.9455 298.762 97.52 300.877C97.4683 300.954 97.3817 301 97.2892 301ZM164.525 301C164.279 301 164.223 300.599 164.456 300.52C166.262 299.908 167.936 299.054 169.409 297.99C170.315 297.338 171.351 296.33 172.532 294.971C173.147 294.271 173.79 293.483 174.527 292.552C175.02 291.931 175.507 291.307 175.99 290.68L176.265 290.32L176.809 289.615C177.411 288.82 178.045 288.042 178.71 287.282C179.324 286.595 179.775 286.211 180.137 286.101C180.734 285.923 181.009 286.331 181.009 287.08L181.015 288.093C181.044 291.41 180.968 293.527 180.605 295.931C180.382 297.597 179.939 299.238 179.286 300.825C179.242 300.931 179.138 301 179.023 301C178.818 301 178.679 300.789 178.757 300.598C179.385 299.066 179.809 297.482 180.02 295.874C180.383 293.493 180.459 291.395 180.43 288.098L180.424 287.08C180.424 286.615 180.377 286.543 180.336 286.552C180.126 286.619 179.722 286.96 179.184 287.56C178.525 288.314 177.897 289.086 177.3 289.874L176.762 290.575L176.481 290.935C175.995 291.562 175.507 292.19 175.019 292.816C174.281 293.752 173.626 294.544 173.006 295.255C171.801 296.637 170.742 297.674 169.789 298.35C168.251 299.466 166.494 300.359 164.591 300.989C164.57 300.996 164.548 301 164.525 301ZM55.4143 300.931C55.3677 300.975 55.3054 301 55.2408 301C55.0032 301 54.8898 300.696 55.0591 300.529C56.6975 298.915 57.5759 296.708 57.5759 293.8C57.5759 284.872 57.5525 285.472 58.1726 283.831C58.5236 282.904 59.0501 282.036 60.0855 280.648C60.3312 280.312 62.9637 276.904 64.0518 275.436C65.8301 273.05 70.5101 267.516 71.1945 266.527C73.2303 263.609 73.9557 260.738 73.9557 254.921C73.9557 251.153 75.4181 248.105 78.6941 243.67L80.3555 241.447C80.8707 240.757 81.3565 240.053 81.8121 239.335C82.7598 237.823 83.2628 236.561 83.3447 235.361C83.4617 233.547 82.5843 231.862 80.4783 230.129C77.4773 227.672 75.4474 227.523 73.9264 229.241C72.6862 230.643 71.8906 232.956 70.9664 237.147C70.9 237.427 70.0539 241.25 69.9843 241.529C69.7354 242.529 69.5113 243.275 69.2582 243.948C68.4684 246.07 67.0937 247.601 64.3677 249.833L62.4606 251.369C58.7284 254.436 56.7979 256.894 55.8151 260.729L55.1365 263.378C54.6276 265.346 54.2239 266.757 53.7735 268.149C51.6266 274.744 48.1283 280.615 40.5586 289.615C36.2544 294.737 34.2643 298.358 34.1717 300.7C34.1652 300.864 34.0339 301 33.8691 301C33.7112 301 33.5811 300.875 33.5864 300.717C33.6703 298.238 35.7145 294.535 40.0789 289.346C47.6077 280.384 51.0767 274.562 53.206 268.025C53.6565 266.642 54.0543 265.241 54.5632 263.277L55.2418 260.633C56.2538 256.687 58.2428 254.153 62.0511 251.033C62.4196 250.726 63.7125 249.689 63.9523 249.492C66.6257 247.313 67.942 245.835 68.7024 243.809C69.2158 242.313 69.6201 240.794 69.9134 239.259L70.3872 237.065C71.3349 232.793 72.1422 230.441 73.4526 228.958C75.2075 226.966 77.6645 227.144 80.8878 229.793C83.1107 231.617 84.0584 233.432 83.9297 235.39C83.842 236.667 83.3155 237.987 82.3327 239.556C81.8717 240.284 81.3801 240.998 80.8585 241.697L79.1972 243.919C75.968 248.287 74.5406 251.263 74.5406 254.921C74.5406 260.815 73.7919 263.767 71.7034 266.767C71.0014 267.775 66.3157 273.319 64.5549 275.685C63.4609 277.154 60.8285 280.572 60.5886 280.898C59.5766 282.252 59.0676 283.092 58.7342 283.97C58.1375 285.544 58.1609 284.978 58.1609 293.8C58.1609 296.888 57.1929 299.228 55.4143 300.931ZM195.4 13.0048C195.684 13.0048 195.869 13.3043 195.738 13.5572C195.604 13.8164 195.464 14.0825 195.318 14.3584C193.036 18.7071 192.13 21.6303 192.13 26.4446C192.13 30.1117 190.901 32.0125 188.245 32.7085C186.221 33.2365 184.899 33.1789 177.967 32.5021C171.409 31.8685 167.017 31.7504 161.956 32.3759C161.648 32.4139 161.349 32.4838 161.052 32.5728C156.994 33.7895 146.201 35.8044 142.698 35.8044C136.175 35.8044 121.194 34.422 111.038 32.4397C109.372 32.0861 107.637 32.0093 105.934 32.2137C104.231 32.4181 102.595 32.8997 101.123 33.6301C98.7534 34.7484 96.975 36.0444 92.9912 39.3756C89.3175 42.4427 87.4163 43.8059 84.9184 44.8955C80.7708 46.7146 78.3548 48.5674 77.0795 50.785C76.0148 52.6329 75.7165 54.5481 75.7165 58.1241C75.7165 60.236 74.1662 61.3352 70.1883 62.7992C70.2468 62.7752 68.4509 63.428 67.942 63.62C62.8057 65.5687 60.5067 67.5991 60.5067 71.5638C60.5067 77.5733 57.6637 80.7893 50.363 84.9844L47.6954 86.4916C46.584 87.1156 45.765 87.5956 44.9635 88.0755C44.4253 88.4019 43.9164 88.7187 43.4309 89.0355C39.2423 91.7331 36.996 96.0146 34.3284 105.01C33.9599 106.243 32.3979 111.73 31.9475 113.237C31.0414 116.353 30.027 119.447 28.9056 122.515C28.1041 124.675 26.2731 129.748 26.004 130.449C25.3898 132.081 25.0446 132.82 24.5649 133.483C24.0852 134.155 20.5577 137.841 17.1706 142.252L14.495 145.78C14.3355 145.991 14 145.878 14 145.614C14 145.554 14.0197 145.495 14.0561 145.447L16.6793 141.993C18.9916 138.995 21.4526 136.076 24.056 133.243C23.8805 133.483 24.8457 131.899 25.4483 130.305C25.7115 129.614 27.5425 124.541 28.344 122.371C29.4145 119.477 30.3563 116.568 31.3801 113.122C31.8247 111.619 33.3924 106.133 33.7551 104.894C36.4578 95.7986 38.7392 91.4451 43.0682 88.6563C43.5596 88.3347 44.0744 88.018 44.6184 87.6916C45.4257 87.202 46.2564 86.7268 47.3678 86.098L50.0237 84.5908C57.1898 80.4773 59.9217 77.3861 59.9217 71.5638C59.9217 67.3687 62.3787 65.1991 67.6963 63.188C68.211 62.9912 70.0128 62.3384 69.9485 62.3576C73.7275 60.9656 75.1315 59.972 75.1315 58.1241C75.1315 54.4761 75.4415 52.5081 76.5472 50.5834C77.8868 48.2602 80.3905 46.3354 84.6434 44.4731C87.0711 43.4123 88.9431 42.0731 92.921 38.7468C96.5948 35.6748 98.3965 34.3644 100.83 33.2125C102.367 32.4507 104.075 31.9484 105.852 31.7349C107.629 31.5214 109.44 31.6011 111.179 31.9693C121.281 33.9468 136.216 35.3244 142.698 35.3244C146.132 35.3244 156.896 33.3107 160.929 32.1024C161.226 32.0134 161.525 31.9436 161.833 31.9055C166.969 31.27 171.414 31.3837 178.037 32.0269C184.841 32.6893 186.168 32.7469 188.07 32.2525C190.445 31.6285 191.545 29.9245 191.545 26.4446C191.545 21.5982 192.457 18.6226 195.403 13.0101C195.404 13.0077 195.402 13.0048 195.4 13.0048ZM210.098 13.3001C210.096 13.1374 210.227 13.0048 210.39 13.0048C210.55 13.0048 210.681 13.1339 210.683 13.2943C210.718 15.9045 210.84 18.6509 211.06 22.3166C211.335 26.9726 211.434 29.3101 211.434 32.6845C211.434 37.3932 208.696 41.0651 203.771 43.8011C199.951 45.9275 195.031 47.3818 189.538 48.2794C187.35 48.5386 184.027 48.5482 176.27 48.3898C172.328 48.3082 170.801 48.2842 169.022 48.2842C167.402 48.2842 166.115 48.4906 164.559 48.937C164.044 49.081 161.897 49.7722 161.295 49.9498C157.463 51.0778 153.345 51.6442 146.793 51.6442C142.054 51.6442 138.849 50.9818 133.654 49.2922L131.794 48.6922C124.452 46.3546 119.351 46.2202 110.044 49.2298C103.521 51.337 99.4378 53.6457 97.0101 56.3385C95.1674 58.3832 94.4771 60.0824 93.5353 63.9224C92.8216 66.8455 92.4062 68.1175 91.4878 69.7447C90.5226 71.439 89.1654 72.5334 87.3519 73.2102C85.9889 73.7238 84.8072 73.9302 81.8998 74.2614C76.6115 74.871 74.4295 75.7445 72.7681 78.8597C70.5978 82.93 68.252 85.5172 64.4496 88.3443C63.0456 89.3907 56.7628 93.6339 55.1424 94.7858C50.3454 98.1938 47.0403 103.123 44.203 110.131C43.5204 111.832 42.8826 113.544 42.2901 115.267C42.2843 115.291 40.9681 119.093 40.6054 120.115C35.6388 133.963 30.1457 145.531 25.3196 149.491C23.6816 150.835 22.3595 152.198 19.2357 155.711C17.4391 157.74 15.9146 159.335 14.4639 160.632C14.2833 160.794 14 160.664 14 160.422C14 160.341 14.0343 160.265 14.0943 160.211C15.6715 158.792 17.3949 156.973 19.5457 154.55C21.9032 151.9 23.2428 150.518 24.9101 149.155C29.6309 145.276 35.1123 133.728 40.0438 119.971C40.4065 118.963 41.7168 115.157 41.7285 115.133C42.4364 113.098 43.0214 111.518 43.6473 109.978C46.5138 102.898 49.8658 97.901 54.7621 94.4258C56.3884 93.2643 62.6595 89.0259 64.0576 87.9939C67.8016 85.21 70.0947 82.6708 72.2299 78.6677C73.2127 76.8293 74.5991 75.639 76.4419 74.895C77.8458 74.3334 79.1562 74.0934 82.0168 73.7622C84.6727 73.4598 85.8193 73.2582 87.1062 72.7734C88.7969 72.1446 90.0487 71.1318 90.9555 69.5431C91.8505 67.9591 92.26 66.7111 92.962 63.8312C93.9214 59.924 94.6292 58.1721 96.5363 56.0553C99.04 53.2761 103.211 50.9194 109.833 48.7786C119.281 45.7259 124.534 45.8651 132.004 48.2458L133.87 48.8506C139.001 50.5162 142.136 51.1642 146.793 51.1642C153.28 51.1642 157.334 50.6074 161.102 49.4986C161.687 49.3258 163.839 48.6346 164.366 48.4858C165.855 48.0298 167.433 47.7988 169.022 47.8042C170.807 47.8042 172.339 47.8282 177.253 47.929C183.998 48.0682 187.315 48.0586 189.439 47.809C194.85 46.921 199.699 45.4907 203.443 43.4075C208.217 40.7483 210.849 37.2252 210.849 32.6845C210.849 29.3245 210.75 26.9918 210.44 21.7887C210.243 18.4345 210.127 15.8318 210.098 13.3001ZM68.8162 13.4755C68.8782 13.2041 69.1153 13.0048 69.3937 13.0048C69.7606 13.0048 70.0351 13.3432 69.9467 13.6994C69.5591 15.262 69.0607 16.4374 68.3339 17.5503C66.9709 19.6527 66.6667 20.3103 65.2568 23.8046C64.9444 24.6292 64.5653 25.4358 64.122 26.219C62.8116 28.4557 60.6588 30.4429 56.4761 33.0637C51.7904 36.006 48.1283 41.0075 44.7588 48.2074C43.3548 51.1978 39.6401 60.5096 39.1195 61.652C37.5459 65.0887 35.2819 67.7479 29.9761 73.0182L28.4083 74.5734C24.8867 78.0965 22.9387 80.3669 21.5522 82.8052C20.307 84.9997 17.799 87.2025 14.7472 89.1357C14.4211 89.3422 14 89.1052 14 88.7192C14 88.5486 14.0879 88.3902 14.2316 88.2982C17.1257 86.4459 19.3536 84.4079 20.4934 82.3972C21.9325 79.8677 23.9273 77.5493 27.5016 73.9686L29.0693 72.4038C34.2992 67.2199 36.5104 64.6183 38.0197 61.316C38.5345 60.1976 42.255 50.881 43.6649 47.8618C47.1105 40.5131 50.8602 35.382 55.7625 32.3053C59.8106 29.7613 61.8464 27.8894 63.0631 25.8014C63.4434 25.1534 63.7417 24.5054 64.1454 23.5022C65.5786 19.9503 65.9003 19.2639 67.3043 17.0991C68.0194 15.9568 68.5284 14.7362 68.8162 13.4755ZM74.1641 13.2268C74.1962 13.0972 74.3128 13.0048 74.4463 13.0048C74.6343 13.0048 74.7726 13.1811 74.7275 13.3636C73.7998 17.1157 73.0842 19.1242 72.1597 20.3295C71.2371 21.5901 70.4352 22.9076 69.7613 24.2702C69.0183 25.7102 68.3339 27.2462 67.7138 28.7821C67.5291 29.2289 67.3686 29.6491 66.7456 30.668C66.4596 31.1358 66.0841 31.5423 65.6563 31.8851C63.2948 33.7775 61.0114 35.7346 58.8103 37.7532C56.7745 39.654 55.3296 41.2427 54.6276 42.3899C54.0718 43.3019 53.4225 45.2651 52.5158 48.6154C52.1414 50.0074 50.3805 56.8473 49.8775 58.7288C47.7539 66.6247 45.999 71.5398 44.0861 74.0886C39.605 80.0645 37.8618 81.6293 22.3946 93.8163C19.9798 95.7633 17.2795 97.456 14.3562 98.8556C14.1907 98.9348 14 98.8136 14 98.6301C14 98.5336 14.0555 98.4457 14.1424 98.4037C16.9916 97.0276 19.6253 95.3711 21.9851 93.4706C37.4289 81.3125 39.137 79.7669 43.583 73.839C45.4549 71.3526 47.1982 66.4615 49.3042 58.6232C49.8073 56.7465 51.5681 49.9066 51.9425 48.5146C52.8609 45.1115 53.5219 43.1387 54.1069 42.1787C54.8323 40.9787 56.3065 39.366 58.3715 37.4316C58.898 36.9372 59.4596 36.4236 60.0446 35.9052C61.4486 34.6572 62.9461 33.3997 64.4496 32.1805C64.7479 31.9412 65.033 31.7111 65.3987 31.4081C66.0726 30.8499 66.5715 30.1131 66.8869 29.2969C67.5683 27.533 68.3459 25.7949 69.2172 24.0878C69.9062 22.7017 70.7257 21.3616 71.6683 20.0799C72.5403 18.9314 73.2435 16.9382 74.1641 13.2268ZM62.9695 13.0048C63.2605 13.0048 63.4441 13.3142 63.2895 13.5607C62.0055 15.6074 59.8262 17.4198 56.9324 18.9087C52.7205 21.0783 47.2801 22.3646 42.6645 22.3646C37.4581 22.3646 35.7616 25.7246 35.7967 32.6941C35.7967 33.5101 35.8201 34.2156 35.8669 35.5692C35.9254 37.1532 35.9371 37.7052 35.9371 38.4444C35.9371 41.1947 35.4925 43.8683 34.7613 46.3642C34.4168 47.4974 33.9969 48.6143 33.5036 49.7098C32.1489 52.2511 30.7839 54.7887 29.4086 57.3225C25.5765 64.3594 21.696 71.3786 17.7673 78.3797C16.8649 80.0273 15.7577 81.5935 14.4637 83.0535C14.3002 83.238 14 83.1208 14 82.8743C14 82.8081 14.0242 82.7443 14.0678 82.6945C15.3069 81.2791 16.3717 79.7662 17.2467 78.1781C22.2288 69.2776 27.1331 60.3479 31.9592 51.3898C32.2692 50.8138 32.5383 50.3194 33.3866 48.5578C34.6748 45.2903 35.3378 41.8786 35.3521 38.4444C35.3521 37.7148 35.3346 37.1676 35.2819 35.5884C35.2351 34.23 35.2117 33.5197 35.2117 32.7037C35.1942 29.4445 35.5218 27.1262 36.4227 25.3406C37.5576 23.0942 39.5758 21.8895 42.6645 21.8895C47.1689 21.8895 52.4982 20.6271 56.6224 18.5055C59.5859 16.9756 61.7668 15.1102 62.9608 13.0099C62.9626 13.0067 62.9659 13.0048 62.9695 13.0048ZM228.385 13.3582C228.344 13.1779 228.481 13.0048 228.666 13.0048C228.801 13.0048 228.918 13.1006 228.947 13.232C229.99 17.8552 230.173 19.1294 230.253 21.7887C230.939 26.2204 231.012 30.7017 230.47 35.1468C229.908 39.3612 228.656 42.8315 226.591 45.2987C219.958 53.2185 203.309 59.324 187.742 59.324C184.764 59.324 181.617 59.4584 178.201 59.7224C173.432 60.1121 168.677 60.6179 163.945 61.2392C151.332 62.804 147.764 63.164 142.698 63.164C138.65 63.164 135.561 62.66 130.009 61.292L128.383 60.8936C127.57 60.6968 126.897 60.5384 126.248 60.404C121.568 59.42 117.929 59.4248 113.554 60.7496C111.21 61.4349 109.286 62.8437 108.189 64.6759C107.253 66.1399 106.727 67.5847 105.838 70.8342C104.96 74.0214 104.469 75.4038 103.504 76.9013C102.931 77.8594 102.124 78.7103 101.132 79.4007C100.141 80.0912 98.9865 80.6064 97.7413 80.9141C95.8578 81.3877 94.0032 81.9355 92.1839 82.5556C88.3523 83.8996 86.2756 85.2292 84.1111 87.5812C83.333 88.4211 83.5085 88.2051 80.9346 91.3731C79.7763 92.7987 78.2085 94.1571 75.9739 95.7602C74.798 96.605 69.7086 99.9985 68.4392 100.896C64.1278 103.944 61.08 106.723 58.7108 110.083C56.2421 113.587 54.1479 118.867 52.1121 126.048C51.6032 127.838 51.1059 129.715 50.5677 131.875L49.8775 134.659L49.2398 137.275C48.1868 141.575 47.6194 143.649 47.0344 145.079C43.0565 154.89 36.9375 165.316 31.1636 169.655C28.1743 171.911 26.4252 173.049 24.6702 173.908C24.1437 174.167 23.5938 174.407 22.9621 174.661C22.7047 174.767 17.3461 176.773 14.7137 177.858L14.346 178.011C14.1814 178.08 14 177.959 14 177.781C14 177.679 14.0612 177.588 14.155 177.55L14.4563 177.426C17.1004 176.341 22.4531 174.335 22.7047 174.234C23.27 174.006 23.8242 173.759 24.366 173.495C26.0859 172.655 27.8058 171.532 30.7658 169.305C36.4461 165.033 42.5241 154.66 46.4845 144.926C47.0519 143.524 47.6194 141.46 48.6665 137.184L49.31 134.563C49.9893 131.678 50.7343 128.804 51.5447 125.942C53.5921 118.713 55.6981 113.395 58.2077 109.843C60.612 106.43 63.7066 103.613 68.0531 100.531C69.3342 99.629 74.4178 96.2354 75.5878 95.3954C77.7932 93.8211 79.3259 92.4915 80.4432 91.1091C83.0347 87.922 82.8534 88.1427 83.6431 87.2884C85.8661 84.874 88.0305 83.4916 91.9558 82.114C93.4826 81.5765 95.3137 81.0389 97.5659 80.4533C98.7379 80.1651 99.8247 79.6812 100.758 79.032C101.691 78.3827 102.451 77.5822 102.989 76.6805C103.919 75.231 104.404 73.8726 105.346 70.4454C106.171 67.4359 106.703 65.9671 107.674 64.4551C108.836 62.5171 110.871 61.0263 113.349 60.2984C117.853 58.94 121.597 58.9352 126.394 59.9384C127.049 60.0776 127.728 60.2312 128.547 60.4328L130.729 60.9656C135.684 62.1848 138.72 62.684 142.698 62.684C147.723 62.684 151.28 62.324 163.863 60.764C168.603 60.141 173.365 59.6336 178.142 59.2424C181.582 58.9832 184.747 58.844 187.742 58.844C203.127 58.844 219.595 52.8057 226.112 45.0299C228.112 42.6395 229.329 39.2412 229.891 35.094C230.382 31.3789 230.318 27.4046 229.902 23.6222C229.825 22.9321 229.734 22.2429 229.63 21.5552C229.59 21.2951 229.57 21.0325 229.567 20.7695C229.544 18.906 229.336 17.6001 228.385 13.3582ZM24.9813 13.2093C25.0187 13.0886 25.1308 13.0048 25.2571 13.0048C25.4509 13.0048 25.5893 13.193 25.5319 13.3782C24.4937 16.7281 23.9774 17.9924 22.459 20.7807C21.3182 22.8782 20.897 25.1918 21.0433 27.9278C21.1603 30.0061 21.4586 31.6237 22.3771 35.67C23.0147 38.4924 23.2955 39.8796 23.5119 41.5259C24.0735 45.7979 23.6523 49.2442 21.874 52.4649C19.5734 56.6197 17.1175 60.7153 14.5099 64.746C14.3595 64.9785 14 64.8717 14 64.5948C14 64.5412 14.0155 64.4888 14.0445 64.4438C16.6248 60.4452 19.0564 56.3832 21.3358 52.2633C23.0732 49.1338 23.4827 45.7691 22.927 41.5739C22.7164 39.9419 22.4356 38.5692 21.7979 35.7564C20.8795 31.6909 20.5694 30.0541 20.4583 27.947C20.3062 25.1438 20.7391 22.7582 21.9208 20.5887C23.4348 17.8123 23.9368 16.5722 24.9813 13.2093ZM188.688 13.0048C188.893 13.0048 189.031 13.2122 188.951 13.4002C188.214 15.1236 187.309 16.7956 186.245 18.3999C184.747 20.6559 183.899 22.4558 183.401 24.1502L183.167 25.0142L183.004 25.7102C182.946 26.0626 182.798 26.4012 182.571 26.7038C182.138 27.1982 181.442 27.3182 179.57 27.3038C180.108 27.3038 173.808 27.1646 170.777 27.1646C164.811 27.1646 159.984 27.5582 153.544 28.3933C143.675 29.6701 143.172 29.7229 139.703 29.6029C138.126 29.5506 136.559 29.3754 135.023 29.0797C124.668 27.083 108.008 26.267 103.012 27.635C101.421 28.0669 99.5724 28.9789 97.443 30.3181C96.1276 31.1548 94.8514 32.0323 93.6172 32.9485C92.7982 33.5485 88.2528 37.0284 87.311 37.6716C86.4627 38.2476 82.5258 41.2331 82.1338 41.5211C81.2666 42.164 80.3791 42.7882 79.4721 43.3931C76.553 45.3275 74.2657 46.369 72.499 46.369C70.4399 46.393 69.9719 46.369 69.4922 46.177C68.8311 45.9083 68.6147 45.3515 68.8311 44.4635C69.264 42.7211 71.446 39.2604 76.3424 32.5597C79.671 28.0093 81.853 23.9198 83.2336 19.9839C84.0616 17.6225 84.3545 16.4868 84.9284 13.2466C84.953 13.1075 85.0741 13.0048 85.2154 13.0048C85.3962 13.0048 85.5332 13.1684 85.5017 13.3464C84.9279 16.5867 84.6324 17.7424 83.801 20.1183C82.4029 24.0926 80.1975 28.2253 76.8396 32.8093C71.9842 39.4524 69.8198 42.8939 69.4103 44.5595C69.2348 45.2555 69.3635 45.5867 69.7554 45.7451C70.1064 45.8891 70.5452 45.9131 71.7912 45.8891C74.0844 45.8891 76.2898 44.8811 79.1036 43.0187C79.9225 42.4763 80.7825 41.8715 81.7419 41.1659C82.128 40.8827 86.0767 37.8876 86.9366 37.302C87.8667 36.6636 92.4004 33.1981 93.2252 32.5885C94.6292 31.5565 95.8869 30.6877 97.0862 29.9341C99.2623 28.5661 101.164 27.6302 102.825 27.179C107.949 25.7774 124.709 26.5934 135.157 28.6141C136.661 28.9021 138.164 29.0701 139.726 29.1229C143.142 29.2429 143.646 29.1901 153.456 27.9182C159.92 27.0782 164.781 26.6846 170.772 26.6846C173.813 26.6846 180.126 26.8286 179.576 26.8238C181.255 26.8382 181.822 26.7422 182.091 26.4254C182.226 26.2718 182.325 26.0414 182.43 25.6094L182.594 24.923L182.828 24.035C183.343 22.307 184.209 20.4639 185.73 18.1695C186.788 16.5768 187.682 14.9213 188.422 13.1811C188.468 13.0745 188.572 13.0048 188.688 13.0048ZM183.248 13.0048C183.652 13.0048 183.928 13.4132 183.774 13.7866C180.499 21.7348 178.32 23.5646 172.532 23.5646C169.9 23.5646 166.554 23.7182 155.749 24.2846L154.854 24.3326C145.728 24.8078 141.124 25.0046 138.018 25.0046C134.888 25.0046 130.273 24.5438 121.135 23.4302L120.234 23.3198C109.459 22.0047 106.118 21.6447 103.504 21.6447C100.9 21.6447 99.2331 22.1294 97.092 23.2478C97.0335 23.2766 96.039 23.8094 95.7465 23.9534C94.325 24.6734 93.2194 25.0046 91.8037 25.0046C90.1657 25.0046 89.3994 24.3038 89.3994 22.979C89.3994 22.4798 89.493 21.8799 89.6919 21.0111C89.7855 20.6175 90.2184 18.8991 90.3178 18.4575C90.737 16.6905 91.0154 15.1315 91.1404 13.5562C91.1649 13.2471 91.4203 13.0048 91.7305 13.0048C92.0658 13.0048 92.3331 13.2864 92.3067 13.6207C92.179 15.2387 91.8961 16.8339 91.4703 18.6447C91.3591 19.0959 90.9321 20.8047 90.8443 21.1935C90.6881 21.7808 90.5961 22.3783 90.5694 22.979C90.5694 23.795 90.8385 24.0446 91.8037 24.0446C92.9678 24.0446 93.8804 23.771 95.1381 23.1326C95.4131 22.9982 96.3959 22.475 96.4602 22.4414C98.7768 21.2319 100.649 20.6847 103.504 20.6847C106.206 20.6847 109.529 21.0399 120.41 22.3694L121.305 22.4798C130.372 23.5838 134.976 24.0446 138.018 24.0446C141.089 24.0446 145.687 23.8478 154.778 23.3726L155.679 23.3246C166.525 22.7582 169.859 22.6046 172.532 22.6046C177.688 22.6046 179.582 21.0221 182.717 13.3653C182.805 13.1502 183.015 13.0048 183.248 13.0048ZM96.6998 13.1318C96.7507 13.0529 96.8386 13.0048 96.9325 13.0048C97.1523 13.0048 97.284 13.2494 97.165 13.4341C96.1852 14.9543 95.8978 15.4955 95.8226 15.976C95.7348 16.5135 96.0683 16.7631 97.1798 16.9167C98.2327 17.0607 99.432 17.0847 103.504 17.0847C107.025 17.0847 111.108 17.3535 115.993 17.8623C118.304 18.1023 120.691 18.3903 123.674 18.7695C137.714 20.5455 136.836 20.4447 139.369 20.4447C153.421 20.4447 169.689 19.3695 174.732 17.1135C176.369 16.3814 177.613 15.0377 178.514 13.1705C178.563 13.0698 178.664 13.0048 178.776 13.0048C178.984 13.0048 179.123 13.219 179.031 13.4059C178.084 15.3436 176.771 16.7492 175.007 17.5359C169.841 19.8495 153.555 20.9247 139.369 20.9247C136.789 20.9247 137.708 21.0303 123.586 19.2447C120.603 18.8607 118.222 18.5823 115.923 18.3423C111.062 17.8335 106.996 17.5647 103.504 17.5647C99.3852 17.5647 98.1801 17.5407 97.0862 17.3871C95.6939 17.1951 95.1089 16.7535 95.2434 15.9136C95.3347 15.3423 95.632 14.7848 96.6998 13.1318ZM141.481 13.0048C141.48 13.0048 141.48 13.006 141.481 13.0062C144.807 13.7925 147.543 14.2048 149.718 14.2048C155.309 14.2048 159.459 13.8663 162.788 13.0135C162.81 13.0077 162.833 13.0048 162.856 13.0048C163.17 13.0048 163.229 13.4051 162.926 13.4822C159.534 14.3432 155.329 14.6848 149.718 14.6848C147.506 14.6848 144.748 14.2747 141.422 13.4915C141.126 13.422 141.178 13.0048 141.481 13.0048ZM55.3413 13.0048C55.3455 13.0048 55.3475 13.0099 55.3444 13.0128C53.666 14.5778 51.2823 15.5929 48.3214 16.1391C45.9931 16.5663 43.934 16.6575 40.7633 16.6191C40.4221 16.6118 40.0809 16.607 39.7396 16.6047C36.5982 16.6047 34.5566 16.0095 33.8312 14.2192C33.7159 13.9201 33.6427 13.6115 33.6126 13.2995C33.5971 13.1376 33.7298 13.0048 33.8923 13.0048C34.0505 13.0048 34.1786 13.1308 34.1955 13.2881C34.2261 13.5707 34.2898 13.8315 34.3869 14.0704C35.007 15.592 36.8263 16.1247 39.7396 16.1247L40.7692 16.1343C43.8989 16.1775 45.9171 16.0863 48.1927 15.6688C50.4847 15.2467 52.413 14.5371 53.9044 13.4926C54.3283 13.1957 54.8237 13.0048 55.3413 13.0048ZM14 113.016C14 112.885 14.106 112.779 14.2367 112.778C18.3666 112.767 20.7274 114.449 20.7274 118.123C20.7274 123.346 18.0404 130.984 14.5186 137.155C14.3756 137.405 14 137.302 14 137.014C14 136.965 14.0127 136.916 14.0369 136.874C17.4879 130.78 20.1424 123.255 20.1424 118.123C20.1424 114.748 18.067 113.242 14.2458 113.258C14.1115 113.258 14 113.15 14 113.016ZM14 116.429C14 116.287 14.1223 116.175 14.2627 116.197C14.8564 116.287 15.3258 116.487 15.6789 116.793C16.4979 117.504 16.6149 118.579 16.3575 120.432L16.2639 121.056C16.1406 121.673 16.0682 122.297 16.0475 122.923C16.0475 124.206 15.4436 126.533 14.5561 129.049C14.446 129.362 14 129.281 14 128.95C14 128.916 14.0058 128.882 14.0172 128.85C14.8794 126.407 15.4625 124.153 15.4625 122.923C15.4625 122.453 15.5093 122.083 15.6789 120.993L15.7725 120.374C16.0182 118.665 15.9129 117.691 15.2577 117.125C15.0043 116.904 14.6587 116.752 14.2132 116.675C14.0923 116.654 14 116.552 14 116.429ZM14.4382 209.835C14.2706 209.996 14 209.873 14 209.641C14 209.569 14.0291 209.499 14.0801 209.448C14.7398 208.782 15.2965 208.051 15.7374 207.272C16.5096 205.976 17.3052 204.258 18.405 201.565C22.9972 190.261 22.9854 188.797 18.5512 186.973C17.3059 186.464 15.9035 186.304 14.2796 186.499C14.1319 186.517 14 186.403 14 186.254C14 186.135 14.0868 186.032 14.2054 186.016C15.768 185.797 17.3766 185.982 18.8086 186.546C23.6289 188.523 23.6406 190.194 18.9549 201.714C17.8551 204.43 17.0536 206.163 16.2639 207.483C15.7918 208.334 15.177 209.126 14.4382 209.835ZM33.6791 229.961C34.6619 229.961 35.4574 229.851 38.5579 229.332L39.9502 229.107C44.7822 228.353 47.3912 228.483 48.4501 230.225C49.2574 231.545 48.1751 233.038 45.6714 234.872C44.7154 235.557 43.7239 236.209 42.6996 236.825C42.1497 237.161 39.839 238.548 39.3125 238.875C38.2244 239.547 37.5751 240.012 37.2826 240.329C36.5471 241.127 35.976 242.019 35.592 242.969C35.6329 242.873 33.2403 249.521 31.5205 253.634C29.941 257.402 28.2679 258.78 26.3608 257.758C25.1265 257.086 24.2198 255.722 22.4999 252.463C21.3416 250.246 21.0374 249.698 20.5109 248.911C17.8492 244.985 18.2295 237.439 20.4817 233.134C20.817 232.415 21.3664 231.777 22.0796 231.277C22.7929 230.778 23.6473 230.432 24.5649 230.273C26.08 229.956 27.408 229.913 31.4561 229.952L33.6791 229.961ZM33.6791 230.921C33.018 230.921 32.4564 230.921 31.4444 230.912C24.3836 230.849 22.769 231.185 21.5581 233.508C19.4346 237.574 19.066 244.812 21.5288 248.446C22.0904 249.276 22.3946 249.828 23.5763 252.084C25.1675 255.108 26.0566 256.442 27.0043 256.951C27.9637 257.47 29.0518 256.567 30.409 253.327C31.842 249.788 33.2013 246.229 34.4864 242.652C34.9099 241.609 35.5383 240.63 36.3466 239.753C36.7269 239.335 37.4289 238.841 38.6047 238.107C39.1429 237.771 41.4536 236.393 41.9976 236.057C43.1793 235.337 44.1036 234.728 44.8933 234.152C47.0168 232.601 47.8709 231.416 47.4088 230.657C46.701 229.496 44.4429 229.385 40.1666 230.048L38.7919 230.273C35.5803 230.806 34.7789 230.921 33.6791 230.921ZM236.075 301C235.952 301 235.841 300.919 235.802 300.802C233.847 295.095 233.664 294.191 233.664 291.88C233.664 290.282 233.588 288.871 233.412 286.437C233.044 281.479 233.032 279.957 233.564 278.244C234.272 275.968 236.027 274.836 239.221 274.836H254.431C256.818 274.836 257.467 275.724 257.9 278.248C257.958 278.628 257.976 278.714 258.011 278.882C258.503 281.45 259.649 282.52 263.206 282.52C265.335 282.52 266.447 282.712 266.967 283.178C267.412 283.576 267.412 283.869 267.178 285.064C266.681 287.589 267.47 289.312 271.565 291.688C275.263 293.824 278.369 294.261 281.247 293.306C283.47 292.567 285.184 291.309 288.22 288.506L288.864 287.915L289.501 287.325C290.013 286.856 290.54 286.399 291.081 285.952C292.718 284.631 294.61 283.54 296.679 282.722C297.568 282.357 297.685 282.309 299.99 281.46C303.559 280.149 305.261 279.3 306.858 277.802C308.396 276.362 309.59 275.474 310.777 274.903C312.638 274.015 313.971 273.88 318.78 273.88C322.278 273.88 324.957 271.807 329.31 266.685L330.959 264.751C331.58 264.031 332.094 263.455 332.592 262.932C337.195 258.074 343.929 257.94 350.574 263.393C353.815 266.047 356.523 272.719 358.553 281.877C359.987 288.346 360.959 295.718 361.157 300.699C361.164 300.865 361.031 301 360.866 301C360.708 301 360.579 300.877 360.573 300.72C360.371 295.766 359.41 288.412 357.98 281.964C355.974 272.906 353.289 266.292 350.165 263.729C343.759 258.473 337.435 258.602 333.048 263.229C332.562 263.743 332.053 264.314 331.439 265.029L329.795 266.959C325.32 272.215 322.553 274.36 318.78 274.36C314.077 274.36 312.807 274.485 311.076 275.32C309.952 275.858 308.794 276.712 307.302 278.119C305.629 279.684 303.869 280.562 300.23 281.901C299.119 282.29 298.023 282.706 296.942 283.149C294.927 283.943 293.085 285.004 291.49 286.288C290.73 286.914 289.998 287.562 289.296 288.232L288.653 288.827C285.564 291.683 283.803 292.975 281.469 293.747C278.392 294.77 275.081 294.309 271.232 292.077C266.944 289.595 266.072 287.685 266.599 284.987C266.798 283.97 266.798 283.739 266.54 283.499C266.166 283.168 265.171 283 263.206 283C259.327 283 257.964 281.738 257.432 278.959L257.315 278.316C256.923 276.002 256.42 275.32 254.431 275.32H239.221C236.296 275.32 234.775 276.3 234.132 278.364C233.617 280.01 233.635 281.517 233.997 286.408C234.153 288.23 234.237 290.054 234.249 291.88C234.249 294.124 234.428 295.023 236.346 300.616C236.41 300.803 236.272 301 236.075 301ZM244.1 301C243.966 301 243.849 300.908 243.819 300.778C243.097 297.748 242.934 295.812 243.076 293.877C243.1 293.541 243.135 293.186 243.182 292.735L243.316 291.506C243.515 289.677 243.609 288.16 243.609 286.12C243.609 283.749 244.463 282.396 246.071 282.079C247.464 281.8 249.324 282.338 251.453 283.519C255.338 285.688 259.637 289.792 261.135 292.749C263.925 298.24 269.395 300.28 280.756 300.28C285.786 300.28 289.133 299.152 292.847 296.498C293.696 295.893 301.657 289.298 305.132 286.898C309.35 283.984 312.017 283.255 317.195 282.904C320.424 282.688 321.863 282.472 323.887 281.772C326.566 280.836 329.362 279.141 332.603 276.352C336.95 272.628 340.354 272.071 342.823 274.288C344.765 276.031 346.017 279.367 346.813 284.004C347.24 286.485 347.363 287.719 347.737 292.346C347.881 294.119 347.838 294.877 347.226 300.736C347.211 300.884 347.086 301 346.937 301C346.764 301 346.63 300.847 346.648 300.675C347.253 294.876 347.296 294.114 347.152 292.375C346.778 287.767 346.655 286.538 346.234 284.071C345.455 279.525 344.227 276.261 342.396 274.615C340.196 272.642 337.172 273.136 333.036 276.688C329.731 279.52 326.87 281.248 324.115 282.208C322.021 282.943 320.529 283.163 317.329 283.379C312.181 283.725 309.625 284.426 305.512 287.267C302.061 289.648 294.105 296.243 293.228 296.862C289.413 299.589 285.933 300.76 280.756 300.76C269.184 300.76 263.498 298.638 260.597 292.936C259.14 290.071 254.917 286.034 251.12 283.917C249.119 282.803 247.399 282.309 246.206 282.544C244.919 282.799 244.194 283.946 244.194 286.12C244.194 288.175 244.1 289.706 243.901 291.549L243.767 292.778C243.714 293.224 243.685 293.57 243.655 293.906C243.52 295.789 243.678 297.681 244.382 300.641C244.425 300.823 244.287 301 244.1 301ZM311.035 301C310.8 301 310.678 300.72 310.838 300.548C312.509 298.758 315.737 295.238 316.791 294.136C319.997 290.786 324.425 288.194 328.14 287.445C332.241 286.624 334.867 288.141 334.867 291.88C334.867 293.782 334.844 294.341 334.451 300.722C334.442 300.876 334.314 301 334.16 301C333.991 301 333.858 300.854 333.869 300.686C334.26 294.334 334.282 293.769 334.282 291.88C334.282 288.463 332.024 287.162 328.28 287.915C324.706 288.635 320.383 291.165 317.253 294.429C316.182 295.544 312.884 299.146 311.23 300.916C311.179 300.971 311.11 301 311.035 301ZM304.65 138.302C304.649 138.302 304.648 138.303 304.649 138.304C306.661 139.604 308.743 140.75 311.339 142.022C311.959 142.329 316.264 144.374 317.393 144.95C323.986 148.31 326.168 151.358 324.618 157.108C323.77 160.238 321.968 162.436 319.125 164.039C316.885 165.301 314.404 166.084 309.718 167.188C302.716 168.844 301.716 169.103 298.709 170.202C297.128 170.778 295.601 171.449 294.14 172.209C287.641 175.602 282.967 175.904 277.784 173.783C276.487 173.254 272.905 171.337 270.386 169.964C268.745 169.071 266.687 167.944 264.989 167.165C264.886 167.118 264.783 167.071 264.68 167.025C255.297 162.786 244.632 155.428 244.486 151.737C244.422 150.076 245.65 148.583 248.16 146.812C248.762 146.38 249.435 145.943 250.313 145.396C250.734 145.132 252.29 144.167 252.618 143.956C255.232 142.324 256.818 141.177 258.07 139.9C264.575 133.267 273.601 126.134 278.17 124.406C285.225 121.747 289.776 121.637 294.181 124.464C296.082 125.683 297.486 127.603 299.2 130.872C299.37 131.184 300.546 133.488 300.885 134.107C301.833 135.859 302.582 136.891 303.365 137.438C303.786 137.725 304.212 138.013 304.65 138.3C304.651 138.301 304.65 138.302 304.65 138.302ZM302.605 138.168C301.651 137.5 300.832 136.372 299.815 134.496C299.475 133.872 298.294 131.558 298.13 131.251C296.486 128.131 295.158 126.307 293.462 125.222C289.466 122.654 285.359 122.75 278.661 125.28C274.303 126.921 265.382 133.977 258.982 140.505C257.654 141.859 256.01 143.049 253.325 144.724L251.021 146.155C250.304 146.599 249.604 147.06 248.92 147.537C246.656 149.135 245.604 150.417 245.656 151.708C245.779 154.895 256.268 162.134 265.242 166.18C266.271 166.645 267.289 167.14 268.342 167.682C268.412 167.721 276.304 172.108 278.304 172.924C283.113 174.892 287.348 174.613 293.514 171.397C295.024 170.614 296.602 169.922 298.235 169.329C301.306 168.201 302.33 167.937 309.397 166.266C313.96 165.191 316.358 164.433 318.464 163.242C321.061 161.783 322.694 159.796 323.472 156.897C324.899 151.607 322.986 148.929 316.773 145.761C315.662 145.195 311.374 143.159 310.736 142.843C308.104 141.551 305.98 140.385 303.927 139.051C303.477 138.763 303.038 138.47 302.605 138.168ZM65.3153 128.968C65.3153 128.97 65.3165 128.97 65.3175 128.97C67.832 127.54 69.9258 126.571 72.4171 125.635C72.9085 125.443 73.4292 125.261 74.0434 125.04L76.5998 124.137C80.1617 122.877 83.6272 121.441 86.9775 119.837C92.2702 117.299 97.7113 114.977 103.281 112.877C105.75 111.941 116.087 108.154 115.665 108.307C126.88 104.17 132.104 104.981 144.622 112.171C149.25 114.83 152.368 118.531 154.246 123.048C156.012 127.286 156.445 130.972 156.445 136.368C156.445 140.361 156.059 142.583 154.292 145.473C151.847 149.486 147.097 153.22 139.328 156.738C125.025 163.214 116.613 169.962 108.423 179.701C103.258 185.845 80.4841 200.922 70.3053 205.693C57.8977 211.505 42.6002 216.281 32.1347 216.281C26.2555 216.281 23.5529 213.987 23.5002 209.864C23.4593 206.83 24.7053 203.274 27.1857 198.191C28.9114 194.653 28.3674 191.999 25.9221 187.492C24.056 184.05 23.6523 183.104 23.6523 181.482C23.6523 179.874 24.7463 178.17 26.8815 176.168C28.4083 174.729 28.929 174.33 33.8429 170.649C36.8205 168.412 38.5696 167.001 40.1023 165.489C45.6363 160.036 47.4848 156.143 50.5736 143.995C52.3988 136.771 54.4521 134.26 59.4186 131.875C59.8866 131.649 61.7294 130.795 62.1681 130.588C63.2433 130.084 64.2926 129.543 65.3133 128.967C65.3142 128.967 65.3153 128.967 65.3153 128.968ZM65.6429 129.364C64.6103 129.949 63.5486 130.498 62.4606 131.011L59.7111 132.292C54.8967 134.606 52.9428 137.001 51.141 144.1C48.0406 156.316 46.1628 160.276 40.5527 165.801C38.9966 167.332 37.23 168.757 34.2348 171.004C29.3443 174.671 28.8295 175.074 27.3202 176.485C25.2728 178.41 24.2373 180.018 24.2373 181.487C24.2373 183.013 24.6351 183.935 26.4603 187.304C28.9582 191.912 29.5256 194.682 27.7239 198.378C25.2786 203.403 24.0443 206.912 24.0852 209.864C24.132 213.733 26.5773 215.806 32.1347 215.806C42.4715 215.806 57.6871 211.054 70.0128 205.28C80.1215 200.538 102.831 185.504 107.944 179.432C116.18 169.631 124.657 162.83 139.048 156.316C146.723 152.846 151.385 149.179 153.772 145.262C155.48 142.449 155.86 140.294 155.86 136.368C155.86 131.025 155.427 127.377 153.696 123.201C151.853 118.776 148.805 115.161 144.283 112.565C131.922 105.461 126.909 104.683 115.911 108.749C116.321 108.595 105.99 112.378 103.527 113.309C102.532 113.693 101.596 114.053 100.684 114.413C96.118 116.21 91.6431 118.159 87.27 120.254C83.8989 121.867 80.4118 123.312 76.828 124.579L74.2715 125.481C73.6632 125.697 73.1484 125.885 72.657 126.072C70.1998 126.989 67.8517 128.091 65.6429 129.364ZM61.197 135.22C65.7014 132.22 68.3924 131.299 75.0496 129.811C78.6297 129.009 80.3847 128.395 82.2508 127.065C84.4738 125.481 86.6207 124.896 91.5288 124.137C93.1375 123.888 93.6757 123.801 94.4888 123.648C97.6945 123.053 100.035 122.241 102.152 120.821C108.248 116.726 117.011 114.048 123.393 114.048C126.511 114.048 133.203 117.686 138.451 122.285C144.728 127.785 147.787 133.454 145.898 137.884C144.037 142.252 139.235 146.798 132.425 151.257C127.488 154.487 121.685 157.497 117.672 159.143C115.496 160.036 113.817 161.486 111.957 163.938C111.553 164.466 105.463 173.658 102.579 177.296C99.2916 181.448 93.5704 185.629 84.895 190.717C83.1138 191.759 81.3197 192.786 79.5131 193.799C79.437 193.842 75.5293 196.031 74.4821 196.626C70.6973 198.767 68.4275 200.154 66.848 201.344C60.0387 206.466 45.1215 208.803 41.2839 205.654C40.1374 204.714 39.997 203.706 40.1432 200.605C40.3597 196.083 39.8507 193.645 37.2475 190.76C36.0784 189.495 34.6911 188.376 33.1292 187.439C30.8302 186.023 29.5783 184.506 29.2916 182.884C28.7242 179.711 31.5556 176.615 37.581 172.473C38.5052 171.839 41.4828 169.861 41.7285 169.698C42.8156 168.998 43.8382 168.233 44.788 167.409C47.1865 165.186 48.2102 162.825 49.351 157.775C49.5107 157.077 49.6667 156.377 49.819 155.678C50.012 154.78 50.1699 154.094 50.3337 153.407C50.7666 151.593 51.2112 149.961 51.7377 148.305C52.3227 146.491 52.545 145.665 53.1183 143.327C53.4693 141.878 53.6623 141.307 54.0309 140.702C54.7446 139.526 54.7738 139.502 61.197 135.22ZM61.5714 135.595C55.2711 139.79 55.2067 139.838 54.5515 140.913C54.2122 141.47 54.0367 142.017 53.6916 143.419C53.1183 145.766 52.896 146.601 52.3052 148.43C51.7787 150.076 51.3399 151.694 50.907 153.498C50.6414 154.608 50.3898 155.72 50.1524 156.834L49.9243 157.866C48.766 162.993 47.7188 165.421 45.2209 167.725C44.2518 168.569 43.2076 169.352 42.0971 170.068C41.8514 170.231 38.8796 172.213 37.9612 172.842C32.0879 176.874 29.3501 179.874 29.8708 182.816C30.134 184.304 31.2982 185.711 33.4802 187.055C35.2351 188.135 36.6333 189.272 37.7155 190.472C40.424 193.467 40.9446 196.002 40.7282 200.624C40.582 203.571 40.7224 204.512 41.6993 205.318C45.2677 208.246 59.8457 205.957 66.4502 200.989C68.059 199.779 70.3463 198.383 74.1487 196.227L79.1796 193.4C81.3031 192.21 82.9528 191.269 84.5557 190.328C93.1726 185.269 98.8528 181.122 102.088 177.032C104.954 173.413 111.044 164.226 111.459 163.689C113.372 161.164 115.121 159.652 117.415 158.711C121.387 157.079 127.155 154.089 132.057 150.878C138.796 146.471 143.529 141.983 145.348 137.726C147.144 133.512 144.166 127.996 138.024 122.611C132.876 118.099 126.301 114.528 123.393 114.528C117.151 114.528 108.517 117.168 102.521 121.195C100.321 122.669 97.8993 123.504 94.6234 124.118C93.7985 124.272 93.2486 124.358 91.6341 124.608C86.8313 125.352 84.7546 125.918 82.6369 127.43C80.683 128.822 78.8637 129.456 75.2075 130.272C68.6205 131.745 65.9939 132.643 61.5714 135.595ZM138.018 133.891C138.018 137.52 137.667 139.132 136.497 140.755C135.853 141.638 132.016 145.579 131.466 146.179C127.98 149.99 126.008 151.113 121.369 152.783C120.585 153.062 120.082 153.263 119.597 153.503C119.275 153.662 118.895 153.82 118.427 153.993C118.011 154.151 115.818 154.905 115.197 155.14C111.658 156.474 109.938 157.924 109.938 160.29C109.938 165.556 98.8528 177.628 89.7504 181.828C84.9652 184.036 77.2901 186.32 70.5744 187.52C62.7765 188.912 57.418 188.711 56.1719 186.407C55.3998 184.981 53.598 184.362 49.1638 183.618L48.8128 183.56C45.9814 183.085 44.7529 182.816 43.5303 182.293C41.8221 181.573 40.9096 180.517 40.9096 179.01C40.9096 177.695 41.5413 176.24 42.8108 174.369C43.308 173.634 43.8755 172.866 44.7003 171.801C44.6067 171.921 46.3558 169.689 46.8472 169.036C50.7608 163.9 52.6094 160.156 52.6094 155.97C52.6094 147.134 59.1729 139.953 68.6966 135.398C71.7502 133.934 74.0961 133.809 77.5884 134.38C80.5368 134.86 81.1276 134.812 81.9349 133.651C84.5674 129.883 86.0533 129.091 91.2187 129.091C93.5177 129.091 95.2961 128.62 97.3436 127.574C98.2561 127.109 102.415 124.613 103.773 123.888C109.155 121.017 110.406 120.528 118.514 118.152C122.58 116.961 127.395 118.766 131.577 122.529C135.409 125.981 138.018 130.502 138.018 133.891ZM136.848 133.891C136.848 130.771 134.362 126.461 130.711 123.177C126.81 119.664 122.428 118.022 118.912 119.054C110.88 121.406 109.71 121.862 104.404 124.694C103.094 125.395 98.923 127.9 97.9637 128.39C95.7407 129.523 93.7517 130.051 91.2187 130.051C86.492 130.051 85.3805 130.641 82.9528 134.131C82.3093 135.048 81.4845 135.513 80.4081 135.614C79.6476 135.681 79.2966 135.638 77.3544 135.321C74.1194 134.793 72.0486 134.899 69.2816 136.224C60.0855 140.625 53.7793 147.527 53.7793 155.97C53.7793 160.386 51.8606 164.27 47.8417 169.545L45.6889 172.314C44.8758 173.365 44.3142 174.124 43.8345 174.834C42.6528 176.576 42.0795 177.896 42.0795 179.01C42.0795 181.021 43.7585 181.732 49.0409 182.62L49.3978 182.677C54.2356 183.493 56.2421 184.18 57.2366 186.013C59.0911 189.44 78.2963 186.013 89.1771 180.992C97.9402 176.946 108.768 165.157 108.768 160.29C108.768 157.458 110.798 155.74 114.712 154.266C115.355 154.026 117.549 153.268 117.941 153.124C118.374 152.961 118.713 152.817 118.994 152.678C119.532 152.414 120.076 152.198 120.895 151.9C125.37 150.292 127.184 149.26 130.53 145.603C131.127 144.95 134.9 141.081 135.485 140.27C136.532 138.825 136.848 137.361 136.848 133.886V133.891ZM115.098 123.137C115.098 123.138 115.099 123.139 115.1 123.138C115.201 123.083 116.504 122.413 116.824 122.256C117.385 121.982 117.818 121.805 118.245 121.694C119.749 121.296 121.205 121.646 124.704 123.192C133.397 127.032 136.07 134.169 130.074 141.772C127.71 144.767 124.592 146.092 119.123 147.105C118.626 147.201 118.421 147.235 117.292 147.431C113.758 148.051 112.156 148.43 110.506 149.183C108.382 150.153 106.943 151.574 106.118 153.714C101.515 165.681 94.5824 174.517 84.895 177.863C75.2719 181.189 72.5341 181.957 68.5269 182.13C65.6371 182.25 62.794 181.818 59.5181 180.743C58.3842 180.39 57.2817 179.973 56.2188 179.495C53.8671 178.376 53.2119 177.22 53.5863 175.026C53.7618 174.004 55.7917 167.572 56.4176 165.114C56.7862 163.65 57.1138 162.167 57.4414 160.463C57.7215 159.041 57.9847 157.617 58.2311 156.191C59.0618 151.674 59.6936 149.342 60.8577 147.239C62.2968 144.633 64.4437 142.905 67.7138 141.897C71.5689 140.711 73.8796 140.409 78.2612 140.203C81.0399 140.073 82.1689 139.895 83.5261 139.219C83.8829 139.041 84.2398 138.83 84.5908 138.58C85.2988 138.079 85.958 137.534 86.5622 136.948C86.9073 136.617 87.9545 135.556 88.1007 135.417C90.0663 133.497 91.7862 132.763 95.3137 132.763C97.6185 132.763 98.7651 132.321 100.099 131.15C99.9994 131.236 101.708 129.643 102.351 129.124C103.535 128.18 104.872 127.372 106.323 126.725C107.201 126.326 108.166 125.947 109.242 125.582C111.276 124.907 113.235 124.088 115.096 123.135C115.097 123.135 115.098 123.135 115.098 123.137ZM106.604 127.142C105.2 127.769 103.907 128.551 102.761 129.465C101.996 130.122 101.251 130.794 100.526 131.481C99.0868 132.744 97.7882 133.243 95.3137 133.243C91.9675 133.243 90.4056 133.91 88.5453 135.724C88.4108 135.859 87.3578 136.924 87.0068 137.26C86.3847 137.865 85.706 138.428 84.9769 138.945C84.5966 139.209 84.2164 139.439 83.8303 139.631C82.3678 140.356 81.1686 140.543 78.2904 140.683C73.9674 140.884 71.7093 141.182 67.9244 142.348C64.8006 143.308 62.7648 144.94 61.3901 147.436C60.261 149.486 59.6351 151.79 58.8103 156.263L58.43 158.346L58.0205 160.54C57.6871 162.249 57.3653 163.742 56.9909 165.21C56.3591 167.697 54.3351 174.105 54.1654 175.093C53.8203 177.095 54.3702 178.06 56.5112 179.077C57.301 179.447 58.3247 179.836 59.7404 180.301C62.9344 181.348 65.6956 181.765 68.4977 181.645C72.4113 181.482 75.1198 180.719 84.6727 177.421C94.1554 174.143 101.006 165.417 105.563 153.566C106.434 151.31 107.973 149.793 110.225 148.766C111.939 147.983 113.583 147.59 117.169 146.961C118.292 146.769 118.503 146.726 118.994 146.635C124.329 145.646 127.324 144.379 129.582 141.513C135.385 134.15 132.829 127.329 124.423 123.614C121.059 122.126 119.725 121.809 118.427 122.15C118.046 122.246 117.649 122.409 117.122 122.669C116.8 122.822 115.502 123.494 115.408 123.542C113.518 124.509 111.529 125.339 109.465 126.024C108.412 126.384 107.464 126.753 106.604 127.142ZM81.8062 142.847C91.2538 141.47 97.2266 142.382 100.801 145.804C103.773 148.651 101.462 156.086 97.3319 162.868C94.5298 167.466 91.131 170.649 83.7835 174.959C75.5059 179.807 63.0163 180.815 59.9685 176.807C58.8805 175.381 58.7401 172.9 59.3484 169.257C59.8047 166.53 60.4365 164.116 62.1154 158.226L62.1856 157.982C63.1158 154.718 63.5721 153.033 64.0225 151.195C64.8708 147.715 66.2104 145.689 68.2695 144.599C69.9134 143.735 71.5045 143.505 75.4825 143.342C78.6005 143.212 79.905 143.121 81.8062 142.847ZM81.9115 143.318C79.981 143.601 78.659 143.692 75.5117 143.822C71.6391 143.98 70.1123 144.196 68.5854 145.003C66.6842 146.011 65.4148 147.926 64.5958 151.29C64.1454 153.134 63.6832 154.818 62.7531 158.092L62.6829 158.332C61.0098 164.207 60.3839 166.617 59.9334 169.324C59.3309 172.857 59.4713 175.256 60.4599 176.557C63.2796 180.253 75.4006 179.279 83.4442 174.565C90.7156 170.303 94.0501 167.178 96.8054 162.657C100.818 156.071 103.094 148.737 100.356 146.121C96.9399 142.852 91.1719 141.969 81.9115 143.318ZM91.2187 145.723C95.3838 145.723 97.4547 147.201 97.7999 149.899C98.0456 151.828 97.5483 153.806 96.1794 157.55C94.6819 161.639 85.439 169.732 80.2677 172.564C76.1669 174.805 68.5562 175.285 64.7245 173.039C62.3904 171.671 62.6595 167.241 64.7362 160.338C65.134 159.018 65.5961 157.626 66.1226 156.134C66.692 154.505 67.2868 152.883 67.9069 151.266L68.1233 150.691C68.9891 148.387 71.1068 146.971 74.4002 146.241C76.9742 145.665 79.9811 145.521 84.6259 145.603L86.9015 145.651C89.1654 145.703 90.0721 145.723 91.2187 145.723ZM91.2187 146.203C90.0663 146.203 89.1537 146.183 86.8839 146.131L84.6142 146.083C80.022 146.001 77.0561 146.145 74.5523 146.707C71.4402 147.393 69.4805 148.703 68.6849 150.835C68.3751 151.669 68.0631 152.502 67.7489 153.335C67.3511 154.391 67.006 155.337 66.6842 156.263C66.1577 157.751 65.7014 159.138 65.3036 160.454C63.2971 167.116 63.0397 171.46 65.0697 172.645C68.679 174.767 76.0265 174.301 79.9401 172.165C85.0061 169.391 94.1729 161.37 95.6178 157.415C96.9633 153.734 97.4547 151.794 97.2149 149.947C96.9048 147.499 95.0855 146.203 91.2187 146.203ZM80.8117 149.563C82.5128 149.594 84.2001 149.82 85.8251 150.235C88.9958 151.089 90.9262 152.649 90.9262 155.082C90.9262 159.686 85.363 163.338 77.8575 165.388C72.1129 166.962 69.89 164.529 71.0365 157.449C71.5279 154.434 73.2712 152.327 75.8569 150.988C77.3589 150.217 79.0515 149.73 80.8117 149.563ZM80.4607 150.081C78.9357 150.274 77.4747 150.719 76.1669 151.391C73.7216 152.658 72.0837 154.646 71.6215 157.516C70.5159 164.289 72.4171 166.372 77.6703 164.937C84.9593 162.94 90.3412 159.402 90.3412 155.082C90.3412 152.894 88.598 151.483 85.6438 150.691C84.0929 150.28 82.4762 150.062 80.8468 150.043C80.7708 150.043 80.6421 150.057 80.4607 150.081ZM127.772 138.828C127.77 138.826 127.768 138.827 127.768 138.829C126.174 143.529 119.033 143.557 112.138 140.409C106.189 137.702 104.065 131.779 109.213 129.432C110.107 129.028 110.981 128.596 111.834 128.136L113.021 127.512C113.765 127.115 114.53 126.747 115.314 126.408C118.081 125.241 120.474 125.064 123.504 126.062C128.862 127.819 129.927 132.459 127.776 138.826C127.775 138.828 127.773 138.829 127.772 138.828ZM115.584 126.837C115.584 126.836 115.582 126.835 115.581 126.836C114.814 127.168 114.065 127.528 113.337 127.915L112.15 128.539C111.658 128.793 111.272 128.995 110.886 129.187C110.406 129.427 109.95 129.648 109.494 129.854C104.849 131.966 106.809 137.438 112.419 139.991C119.035 143.011 125.757 142.982 127.207 138.696C129.296 132.537 128.29 128.15 123.288 126.504C120.422 125.568 118.206 125.726 115.586 126.839C115.585 126.839 115.584 126.838 115.584 126.837ZM126.026 132.667C126.026 135.403 124.598 136.987 122.141 137.448C120.211 137.812 117.719 137.424 115.66 136.579L114.554 136.128C114.162 135.964 113.864 135.83 113.6 135.705C111.22 134.563 111.184 133.32 113.799 130.459C117.777 126.11 126.026 127.022 126.026 132.667ZM125.441 132.667C125.441 130.123 123.762 128.563 121.159 128.27C118.684 127.996 115.899 128.961 114.267 130.747C111.84 133.406 111.869 134.318 113.893 135.292C114.15 135.412 114.437 135.537 114.823 135.7L115.917 136.147C117.871 136.948 120.223 137.318 122.013 136.982C124.195 136.569 125.441 135.187 125.441 132.662V132.667ZM240.391 267.545C240.391 261.401 241.819 259.509 251.202 253.255C252.601 252.326 254.09 251.491 255.654 250.759C257.175 250.039 258.772 249.406 260.626 248.753C261.351 248.498 262.077 248.249 263.025 247.937L265.318 247.183C270.817 245.345 273.355 243.967 275.04 241.399C275.742 240.334 276.333 239.287 276.93 238.121C277.24 237.51 277.541 236.896 277.831 236.278L278.006 235.923L278.334 235.232C280.206 231.382 281.873 229.433 285.763 227.312C286.799 226.745 287.77 226.102 288.665 225.392C289.473 224.745 290.231 224.057 290.934 223.333C291.092 223.169 292.426 221.797 292.806 221.422C294.842 219.43 296.615 218.59 299.54 218.59C301.341 218.59 302.827 218.288 305.138 217.582C308.309 216.613 308.958 216.459 310.379 216.526C311.859 216.589 313.217 217.131 314.58 218.249C315.34 218.873 317.826 221.048 318.394 221.504C321.354 223.904 323.916 224.825 328.789 224.825C331.147 224.838 333.503 224.91 335.856 225.041C345.175 225.459 348.69 225.315 350.644 223.98C354.687 221.211 357.454 222.67 357.454 227.705C357.454 232.856 352.423 237.305 346.339 237.305C343.531 237.305 341.472 237.991 340.875 239.067C340.22 240.257 341.273 242.019 344.373 244.14C352.329 249.578 350.949 254.105 339.904 254.105C336.778 254.061 333.741 254.955 331.363 256.62C329.444 257.921 327.97 259.433 325.601 262.293L324.712 263.373C322.898 265.567 321.781 266.781 320.43 267.885C316.797 270.866 314.989 271.553 312.795 271.193L312.21 271.082C311.703 270.97 311.18 270.91 310.654 270.905C309.718 270.905 309.245 271.226 305.869 273.89C303.032 276.132 301.148 277.144 298.955 277.144C298.177 277.144 296.931 277.696 295.181 278.8C294.439 279.271 293.614 279.828 292.549 280.576L289.671 282.635C288.798 283.259 287.912 283.87 287.015 284.469C281.557 288.098 277.872 289.365 275.192 287.599C273.613 286.567 272.77 285.434 272.484 284.114C272.267 283.135 272.332 282.372 272.653 280.61C273.162 277.802 273.034 276.568 271.583 275.042C270.226 273.612 269.851 273.496 269.378 273.895C269.231 274.02 268.588 274.677 268.436 274.826C267.143 276.026 265.598 276.54 263.171 276.18C260.48 275.776 259.912 274.207 260.41 271.337L260.55 270.588C260.901 268.831 260.948 268.221 260.696 267.804C260.439 267.391 259.585 267.353 257.637 267.996L257.204 268.135C249.143 270.794 248.277 271.058 245.837 271.337C242.31 271.74 240.391 270.569 240.391 267.545ZM241.561 267.545C241.561 269.945 242.813 270.712 245.68 270.386C247.967 270.122 248.856 269.858 256.765 267.242L257.204 267.098C259.643 266.301 261.123 266.359 261.743 267.377C262.159 268.063 262.106 268.701 261.708 270.737L261.568 271.471C261.147 273.89 261.533 274.96 263.375 275.234C265.382 275.532 266.523 275.152 267.558 274.188C267.675 274.077 268.342 273.391 268.541 273.228C269.652 272.287 270.776 272.628 272.507 274.452C274.204 276.247 274.362 277.701 273.806 280.749C273.221 283.989 273.502 285.261 275.924 286.85C277.965 288.194 281.247 287.066 286.278 283.725C287.068 283.197 287.887 282.631 288.904 281.911L291.788 279.847C292.865 279.088 293.701 278.522 294.468 278.037C296.422 276.808 297.826 276.184 298.955 276.184C300.733 276.184 302.435 275.272 305.056 273.199L306.495 272.052C307.045 271.624 307.472 271.303 307.882 271.029C308.94 270.314 309.812 269.945 310.654 269.945C311.257 269.945 311.713 270.007 312.468 270.146C312.877 270.223 312.883 270.228 313.029 270.247C314.761 270.535 316.218 269.983 319.599 267.209C320.886 266.153 321.974 264.977 323.746 262.836L324.636 261.756C327.063 258.823 328.59 257.258 330.614 255.881C333.202 254.072 336.505 253.1 339.904 253.145C349.773 253.145 350.796 249.78 343.624 244.875C340.173 242.513 338.874 240.358 339.81 238.668C340.641 237.171 343.127 236.345 346.339 236.345C351.75 236.345 356.284 232.342 356.284 227.705C356.284 223.414 354.599 222.526 351.393 224.715C349.088 226.289 345.555 226.438 335.791 226.001L335.195 225.972C332.217 225.843 330.521 225.785 328.789 225.785C323.594 225.785 320.74 224.758 317.569 222.185C316.984 221.715 314.492 219.531 313.749 218.926C312.585 217.971 311.491 217.534 310.315 217.486C309.128 217.429 308.525 217.573 305.547 218.48C303.12 219.224 301.511 219.545 299.54 219.545C297.007 219.545 295.538 220.246 293.701 222.041C293.333 222.397 292.011 223.769 291.841 223.937C291.108 224.691 290.319 225.405 289.478 226.078C288.533 226.829 287.507 227.509 286.412 228.108C282.75 230.11 281.206 231.905 279.422 235.587L279.088 236.273L278.925 236.628C278.623 237.25 278.319 237.871 278.012 238.491C277.433 239.637 276.785 240.758 276.07 241.851C274.221 244.673 271.495 246.156 265.756 248.071L263.463 248.83C262.527 249.137 261.802 249.382 261.094 249.631C259.43 250.206 257.809 250.86 256.239 251.59C254.728 252.296 253.29 253.102 251.939 253.999C242.801 260.095 241.561 261.741 241.561 267.549V267.545ZM319.494 229.26C321.284 229.995 323.319 230.23 325.741 230.076C327.221 229.98 328.614 229.779 330.889 229.361C334.025 228.79 334.592 228.699 335.762 228.622C337.388 228.512 338.582 228.704 339.442 229.294C340.366 229.923 340.588 230.6 340.179 231.32C339.793 231.982 339.565 232.155 337.225 233.753C335.16 235.16 334.282 236.071 334.282 237.156C334.282 240.66 335.037 241.966 338.863 244.654C341.121 246.238 342.332 247.937 341.951 249.271C341.513 250.831 339.05 251.681 334.575 251.681C330.374 251.681 327.145 253.894 322.857 258.727C322.565 259.063 320.541 261.401 319.967 262.025C319.149 262.973 318.225 263.857 317.206 264.665C316.586 265.135 315.984 265.481 315.393 265.697C313.726 266.301 312.439 266.45 309.642 266.532C305.161 266.661 303.284 267.228 300.879 269.94C299.955 270.981 299.06 271.86 298.141 272.628C296.629 273.871 294.928 274.95 293.081 275.839C292.994 275.877 286.828 278.81 284.423 280.077C282.224 281.239 280.65 281.056 279.615 279.708C278.866 278.733 278.503 277.528 277.936 274.74C277.444 272.301 277.193 271.341 276.731 270.453C276.163 269.349 275.438 268.898 274.379 269.071C270.752 269.666 269.143 269.738 267.956 269.167C266.57 268.495 266.125 266.949 266.423 264.017C266.517 263.076 265.815 262.639 264.224 262.557C262.913 262.495 261.357 262.653 258.409 263.095L258.005 263.153C253.343 263.849 251.734 263.978 250.564 263.503C248.862 262.817 249.628 260.973 253.039 257.642C256.244 254.508 259.24 252.454 262.258 251.148C264.446 250.202 265.733 249.876 269.372 249.18C273.636 248.354 275.456 247.495 277.585 244.711C279.316 242.431 283.868 235.774 284.687 234.708C286.787 231.987 288.665 230.34 291.151 229.265C292.672 228.603 293.912 227.912 296.515 226.352L297.322 225.867C301.915 223.121 304.518 222.037 307.665 222.037C310.134 222.037 311.462 222.689 313.006 224.326C313.205 224.533 313.983 225.392 314.176 225.608C314.673 226.131 315.112 226.558 315.609 226.966C316.737 227.906 318.05 228.681 319.494 229.26ZM319.236 229.69C319.236 229.691 319.235 229.692 319.234 229.691C317.597 229.02 316.311 228.238 315.188 227.307C314.679 226.875 314.223 226.438 313.72 225.9C313.515 225.68 312.737 224.82 312.544 224.619C311.099 223.092 309.935 222.517 307.665 222.517C304.688 222.517 302.166 223.572 297.668 226.251L296.86 226.736C294.234 228.315 292.982 229.011 291.42 229.688C289.045 230.72 287.231 232.304 285.184 234.968C284.371 236.019 279.825 242.671 278.076 244.961C275.859 247.874 273.905 248.791 269.5 249.641C265.914 250.337 264.662 250.649 262.527 251.57C259.579 252.847 256.648 254.863 253.483 257.954C250.307 261.055 249.663 262.605 250.822 263.071C251.816 263.474 253.442 263.345 257.9 262.682L258.309 262.62C261.305 262.173 262.884 262.01 264.259 262.082C266.137 262.178 267.137 262.793 267.008 264.055C266.727 266.82 267.125 268.202 268.254 268.749C269.266 269.239 270.793 269.172 274.262 268.601C275.637 268.375 276.602 268.975 277.269 270.266C277.755 271.202 278.012 272.186 278.48 274.49L278.515 274.663C279.065 277.375 279.422 278.556 280.106 279.453C280.96 280.557 282.165 280.701 284.108 279.674C286.529 278.397 292.701 275.464 292.771 275.426C294.578 274.557 296.241 273.502 297.72 272.287C298.696 271.466 299.595 270.587 300.411 269.657C302.938 266.801 304.98 266.186 309.619 266.057C312.345 265.975 313.573 265.831 315.153 265.255C315.679 265.063 316.235 264.746 316.814 264.314C317.807 263.527 318.708 262.666 319.505 261.741C320.067 261.117 322.079 258.785 322.389 258.444C326.777 253.495 330.123 251.201 334.575 251.201C338.81 251.201 341.021 250.433 341.384 249.166C341.7 248.052 340.588 246.502 338.477 245.019C334.528 242.239 333.697 240.799 333.697 237.156C333.697 235.875 334.657 234.881 336.85 233.384C339.073 231.862 339.325 231.675 339.647 231.113C339.939 230.604 339.793 230.158 339.067 229.659C337.763 228.771 336.306 228.867 331.018 229.832C328.719 230.249 327.303 230.456 325.788 230.552C323.274 230.715 321.127 230.465 319.238 229.689C319.237 229.688 319.236 229.689 319.236 229.69ZM302.856 227.823C302.856 227.821 302.857 227.82 302.859 227.82C306.163 226.467 308.099 226.765 310.403 228.478C310.73 228.718 311.924 229.664 312.17 229.856C314.626 231.723 316.89 232.596 320.535 232.596C327.186 232.596 328.725 233.273 329.953 236.479C330.105 236.878 330.743 238.687 330.924 239.177C331.392 240.439 331.884 241.591 332.504 242.825C333.75 245.307 334.048 246.819 333.51 247.74C333.06 248.513 332.281 248.786 330.369 249.079C329.011 249.286 328.731 249.334 328.116 249.487C327.034 249.766 326.157 250.159 325.425 250.764C324.84 251.244 324.244 251.786 323.489 252.521C323.138 252.862 321.787 254.201 321.465 254.508C317.253 258.607 314.194 260.436 310.005 260.436C307.806 260.436 305.939 261.05 303.81 262.356C302.734 263.013 297.012 267.305 294.906 268.625C293.248 269.669 291.498 270.612 289.671 271.447C286.992 272.666 285.371 272.992 284.418 272.517C283.645 272.133 283.452 271.524 283.283 269.877C283.258 269.587 283.226 269.298 283.189 269.009C282.873 266.738 281.879 265.716 279.001 265.716C274.841 265.716 273.823 265.125 273.309 263.119C272.747 260.906 272.08 259.903 269.477 258.478C267.155 257.206 266.956 255.876 268.588 254.532C269.758 253.572 271.296 252.852 275.227 251.234C279.094 249.65 280.609 248.93 281.721 248.028C282.887 247.085 283.926 246.043 284.821 244.918C285.395 244.198 285.892 243.459 286.506 242.455L287.746 240.391C288.279 239.513 288.752 238.774 289.273 238.001C292.631 233.048 295.339 230.907 302.854 227.826C302.856 227.826 302.856 227.824 302.856 227.823ZM289.788 238.236C289.267 238.999 288.799 239.734 288.267 240.607L287.033 242.671C286.518 243.534 285.943 244.372 285.313 245.182C284.394 246.333 283.327 247.4 282.13 248.364C280.96 249.324 279.428 250.049 275.491 251.662C271.63 253.246 270.109 253.966 268.997 254.873C267.634 255.996 267.78 256.97 269.805 258.074C272.554 259.582 273.291 260.695 273.882 263.018C274.338 264.794 275.105 265.236 279.001 265.236C282.218 265.236 283.429 266.469 283.768 268.956C283.803 269.196 283.821 269.349 283.868 269.839C284.014 271.308 284.189 271.84 284.722 272.104C285.424 272.46 286.88 272.167 289.39 271.025C291.191 270.201 292.915 269.271 294.55 268.241C296.626 266.945 302.353 262.649 303.465 261.967C305.682 260.609 307.665 259.956 310.005 259.956C313.965 259.956 316.908 258.194 321.02 254.196L323.039 252.214C323.665 251.596 324.323 251 325.01 250.428C325.829 249.769 326.837 249.288 327.941 249.031C328.584 248.868 328.877 248.815 330.263 248.604C331.989 248.34 332.644 248.114 332.983 247.534C333.428 246.771 333.147 245.374 331.966 243.007C331.359 241.799 330.824 240.567 330.363 239.316C330.181 238.822 329.544 237.012 329.392 236.623C328.251 233.648 326.958 233.076 320.535 233.076C316.732 233.076 314.328 232.15 311.772 230.206C311.514 230.014 310.333 229.068 310.011 228.833C307.876 227.249 306.197 226.985 303.114 228.252C295.702 231.291 293.081 233.364 289.788 238.236ZM322.465 243.963C320.722 247.059 312.649 251.287 306.823 251.287C303.705 251.287 302.4 249.857 302.663 247.514C302.851 245.844 303.892 243.718 304.962 242.422L305.852 241.308C306.199 240.865 306.566 240.433 306.951 240.012C309.092 237.708 311.544 236.436 314.919 236.436C320.219 236.436 324.133 241.006 322.465 243.963ZM321.936 243.761C321.938 243.761 321.939 243.76 321.94 243.758C323.411 241.133 319.802 236.916 314.919 236.916C311.76 236.916 309.461 238.107 307.419 240.305C307.073 240.684 306.743 241.064 306.351 241.554C306.342 241.566 306.333 241.578 306.324 241.59C306.225 241.715 305.62 242.488 305.448 242.691C304.43 243.924 303.424 245.979 303.243 247.558C303.009 249.636 304.079 250.807 306.823 250.807C312.42 250.807 320.285 246.691 321.932 243.763C321.933 243.762 321.934 243.761 321.936 243.761ZM281.183 253.716C282.399 253.802 283.78 254.105 284.622 254.58C285.863 255.286 285.909 256.308 284.47 257.484C281.463 259.956 276.953 259.567 276.953 256.836C276.953 254.599 278.79 253.553 281.183 253.716ZM281.13 254.196C279.047 254.052 277.538 254.916 277.538 256.836C277.538 259.034 281.358 259.361 284.061 257.148C285.248 256.169 285.219 255.502 284.295 254.978C283.552 254.556 282.259 254.273 281.136 254.196H281.13ZM298.437 145.744C298.439 145.743 298.441 145.742 298.443 145.743C301.16 146.872 308.543 149.697 309.783 150.268C311.353 150.95 312.752 151.868 313.907 152.975C314.71 153.763 315.443 154.598 316.101 155.471C317.505 157.286 316.124 159.148 312.474 161.054C309.566 162.57 305.349 164.077 299.633 165.767C296.802 166.602 288.15 168.973 287.29 169.223C283.435 170.341 278.603 169.271 272.583 166.41C270.284 165.321 267.903 164.01 265.013 162.311C263.709 161.538 259.456 158.956 258.754 158.543C257.144 157.544 255.458 156.63 253.706 155.807C250.886 154.559 251.102 152.62 253.805 149.985C255.718 148.123 256.244 147.743 264.393 142.147C266.165 140.945 267.899 139.706 269.594 138.432C270.546 137.712 271.467 136.966 272.355 136.195C275.327 133.588 278.088 133.08 281.112 134.313C282.423 134.841 283.762 135.681 285.459 136.963C286.325 137.62 289.519 140.188 290.127 140.659C293.168 143.014 295.659 144.593 298.43 145.745C298.433 145.746 298.435 145.746 298.437 145.744ZM298.171 146.174C295.333 144.998 292.801 143.395 289.723 141.009C289.109 140.529 285.921 137.966 285.061 137.318C283.406 136.065 282.101 135.254 280.849 134.74C278.07 133.608 275.584 134.068 272.776 136.521C271.88 137.301 270.952 138.055 269.992 138.782C268.541 139.886 266.973 140.999 264.774 142.511C256.666 148.079 256.133 148.463 254.256 150.292C251.752 152.73 251.576 154.324 253.986 155.385C255.291 155.961 256.853 156.82 259.099 158.154C259.801 158.572 264.054 161.15 265.359 161.922C267.78 163.382 270.289 164.742 272.876 165.997C278.761 168.791 283.447 169.828 287.091 168.772C287.957 168.522 296.609 166.146 299.434 165.316C305.109 163.636 309.297 162.143 312.158 160.65C315.574 158.87 316.779 157.242 315.609 155.726C314.965 154.872 314.248 154.057 313.462 153.287C312.352 152.223 311.006 151.34 309.496 150.686C308.279 150.129 300.908 147.302 298.171 146.174ZM275.456 150.04C275.456 150.039 275.457 150.038 275.458 150.037C277.276 149.86 278.791 149.976 280.369 150.374C281.627 150.691 281.972 150.82 285.424 152.183C288.202 153.282 290.332 154.036 293.14 154.852C298.042 156.278 299.762 157.842 298.305 159.537C297.088 160.948 293.602 162.378 287.869 163.943C282.926 165.297 278.813 165.071 275.333 163.511C272.613 162.287 270.46 160.391 268.225 157.607C266.529 155.49 266.628 153.671 268.319 152.298C269.769 151.123 272.336 150.345 275.453 150.043C275.454 150.043 275.456 150.041 275.456 150.04ZM275.526 150.518C272.525 150.806 270.068 151.554 268.728 152.639C267.248 153.839 267.16 155.409 268.716 157.343C270.898 160.07 272.987 161.908 275.619 163.089C278.954 164.581 282.891 164.802 287.682 163.492C293.292 161.956 296.714 160.554 297.826 159.258C298.96 157.938 297.533 156.642 292.941 155.303C290.11 154.478 287.969 153.719 285.172 152.615C281.756 151.266 281.417 151.142 280.2 150.835C278.687 150.448 277.089 150.34 275.52 150.518H275.526ZM132.461 253.183C132.461 255.478 131.612 256.812 129.869 257.47C128.529 257.974 127.207 258.06 123.557 258.046L122.516 258.041C117.14 258.041 112.571 254.369 112.571 250.601C112.571 246.958 118.772 245.556 124.119 247.99C125.745 248.734 126.581 248.921 129.132 249.31C131.729 249.708 132.461 250.399 132.461 253.183ZM131.876 253.183C131.876 250.639 131.349 250.14 129.021 249.785C126.418 249.386 125.534 249.185 123.838 248.412C118.824 246.127 113.156 247.404 113.156 250.601C113.156 254.105 117.461 257.561 122.516 257.561H123.563C127.108 257.58 128.395 257.494 129.623 257.033C131.144 256.457 131.876 255.305 131.876 253.183ZM151.373 196.616C153.544 195.987 156.463 195.32 160.792 194.432C162.301 194.12 170.461 192.493 172.819 192.008C184.279 189.642 191.275 187.736 195.183 185.6C203.917 180.824 216.752 169.338 220.823 162.657C222.14 160.497 223.544 159.594 225.316 159.657C226.053 159.686 226.843 159.873 227.843 160.233C228.546 160.483 229.237 160.755 229.914 161.049L230.651 161.351C233.447 162.474 235.553 163.002 238.051 163.002C242.263 163.002 243.907 164.476 242.936 166.799C242.117 168.748 239.473 171.076 236.443 172.569C231.587 174.959 229.569 180.872 229.569 188.682C229.569 190.405 228.767 191.696 227.241 192.695C226.082 193.453 224.784 193.943 222.286 194.691L221.689 194.869C218.852 195.709 217.606 196.199 216.611 197.01C213.634 199.458 209.276 200.442 204.707 200.442C203.9 200.442 203.262 200.883 202.373 201.93C202.203 202.126 201.601 202.866 201.513 202.976C199.945 204.858 198.629 205.722 196.517 205.722C191.931 205.722 190.234 206.168 183.788 209.053C180.757 210.406 178.64 210.771 175.212 210.819C175.06 210.819 174.937 210.819 174.673 210.829C171.854 210.858 170.508 210.973 168.525 211.472C166.748 211.948 165.011 212.519 163.325 213.181C162.055 213.661 157.165 215.585 157.34 215.518C152.783 217.294 149.548 218.389 146.284 219.152C139.024 220.856 135.415 220.227 130.243 217.198C128.734 216.31 128.652 215.072 129.758 213.541C130.606 212.365 132.039 211.098 134.485 209.235L135.526 208.448C137.819 206.72 138.147 206.475 138.977 205.794C140.335 204.68 140.802 204.114 142.183 202.131C143.312 200.518 144.154 199.678 145.851 198.743C147.196 198.003 148.975 197.312 151.373 196.616ZM151.572 197.067C149.215 197.749 147.477 198.426 146.179 199.141C144.57 200.029 143.78 200.816 142.692 202.371C141.288 204.387 140.797 204.982 139.393 206.13C138.556 206.821 138.223 207.07 135.918 208.803L134.882 209.586C132.484 211.419 131.068 212.662 130.261 213.785C129.296 215.125 129.36 216.089 130.583 216.809C135.614 219.757 139.042 220.352 146.126 218.691C149.343 217.937 152.561 216.848 157.089 215.086C156.913 215.153 161.804 213.224 163.079 212.744C164.788 212.074 166.549 211.497 168.35 211.016C170.403 210.493 171.795 210.378 174.668 210.344H175.2C178.546 210.296 180.57 209.946 183.507 208.63C190.035 205.712 191.814 205.242 196.517 205.242C198.383 205.242 199.559 204.474 201.027 202.707L201.893 201.651C202.887 200.485 203.648 199.962 204.707 199.962C209.135 199.962 213.353 199.002 216.202 196.674C217.272 195.791 218.565 195.282 221.49 194.418L222.087 194.24C227.118 192.738 228.984 191.519 228.984 188.682C228.984 180.714 231.049 174.666 236.144 172.156C239.069 170.716 241.614 168.474 242.38 166.645C243.211 164.663 241.895 163.482 238.051 163.482C235.448 163.482 233.26 162.935 230.394 161.783C225.995 160.022 226.428 160.18 225.293 160.137C223.783 160.089 222.572 160.866 221.35 162.873C217.231 169.626 204.327 181.18 195.511 186.004C191.527 188.183 184.49 190.093 172.959 192.474C170.602 192.963 162.441 194.586 160.932 194.898C156.621 195.781 153.719 196.448 151.572 197.067ZM161.418 199.002C162.634 199.002 163.758 198.906 165.659 198.671C168.712 198.301 169.543 198.239 170.608 198.431C172.082 198.699 172.825 199.559 172.825 201.162C172.825 203.106 171.497 204.661 168.952 206.014C167.057 207.022 165.132 207.709 160.675 209.086L160.517 209.134L159.183 209.547C157.404 210.104 156.1 210.757 153.725 212.153L153.257 212.427C148.466 215.249 145.447 216.281 139.773 216.281C136.86 216.281 135.748 215.307 136.409 213.584C136.918 212.235 138.503 210.435 140.972 208.242C141.709 207.584 142.517 206.898 143.4 206.178C145.254 204.67 149.981 201.085 150.098 200.994C150.367 200.768 150.642 200.566 150.917 200.389C152.894 199.088 154.292 198.911 159.212 198.983C160.177 198.997 160.751 199.002 161.418 199.002ZM161.418 199.482C160.745 199.482 160.172 199.477 159.2 199.462C154.415 199.395 153.117 199.559 151.28 200.763C151.022 200.931 150.765 201.118 150.507 201.33C150.39 201.43 145.652 205.021 143.809 206.523C142.988 207.19 142.184 207.872 141.399 208.568C138.989 210.714 137.445 212.465 136.965 213.728C136.438 215.11 137.228 215.801 139.773 215.801C145.307 215.801 148.22 214.808 152.912 212.038L153.38 211.765C155.796 210.344 157.135 209.672 158.972 209.096L160.318 208.683L160.464 208.635C164.881 207.272 166.782 206.595 168.636 205.611C171.023 204.339 172.24 202.923 172.24 201.162C172.24 199.775 171.672 199.117 170.485 198.906C169.52 198.728 168.701 198.786 165.746 199.146C163.816 199.386 162.669 199.482 161.418 199.482ZM227.211 177.719C226.112 180.33 226.053 180.964 226.638 183.844C227.328 187.232 225.831 191.802 223.427 191.802C223.132 191.802 222.837 191.813 222.543 191.835L222.169 191.855C220.496 191.941 219.343 191.936 218.109 191.773C214.277 191.264 212.019 189.306 212.019 185.322C212.019 178.65 213.271 175.871 216.775 172.684C217.341 172.127 217.835 171.524 218.249 170.884C218.594 170.389 219.876 168.421 219.841 168.479C222.438 164.572 224.351 162.945 227.007 163.487C227.691 163.631 228.294 163.857 229.101 164.25L229.914 164.653C230.49 164.952 231.097 165.209 231.728 165.421C232.137 165.551 232.781 165.575 234.506 165.546L234.927 165.541C236.776 165.517 237.724 165.58 238.338 165.858C239.28 166.285 239.04 167.087 237.671 168.21C236.928 168.819 236.175 169.421 235.413 170.015C229.212 174.863 227.954 175.967 227.211 177.719ZM226.661 177.565C227.445 175.693 228.686 174.604 235.009 169.665C235.916 168.959 236.606 168.407 237.262 167.874C238.396 166.938 238.531 166.492 238.051 166.276C237.572 166.06 236.665 165.997 234.939 166.021L234.518 166.026C232.681 166.055 232.026 166.036 231.511 165.863C230.891 165.666 230.359 165.431 229.61 165.061L228.803 164.663C228.204 164.35 227.551 164.112 226.866 163.957C224.596 163.492 222.818 164.999 220.355 168.709C220.396 168.647 219.103 170.62 218.758 171.119C218.323 171.789 217.803 172.419 217.208 173.001C213.809 176.106 212.604 178.76 212.604 185.322C212.604 189.061 214.64 190.827 218.203 191.298C219.378 191.456 220.496 191.461 222.128 191.375C222.368 191.364 222.608 191.353 222.847 191.341C223.093 191.327 223.274 191.322 223.427 191.322C225.298 191.322 226.702 187.05 226.059 183.92C225.462 180.964 225.527 180.253 226.661 177.565ZM221.244 183.527C221.584 183.776 222.707 184.439 222.736 184.453C223.883 185.207 223.93 186.042 222.742 187.506C220.554 190.213 217.577 188.989 217.577 185.322C217.577 183.493 217.875 182.6 218.788 182.432C219.478 182.308 219.958 182.576 221.244 183.527ZM220.461 184.24C220.461 184.238 220.46 184.237 220.459 184.236C219.583 183.589 219.156 183.349 219.039 183.373C218.94 183.388 218.747 183.964 218.747 185.322C218.747 188.139 220.309 188.783 221.771 186.978C222.648 185.893 222.631 185.615 222.005 185.202C222.023 185.216 220.868 184.532 220.462 184.243C220.461 184.242 220.461 184.241 220.461 184.24ZM350.855 121.747C352.142 121.219 353.002 120.95 354.295 120.614L354.458 120.571C356.236 120.141 357.958 119.57 359.601 118.867C362.04 117.869 363.315 117.965 363.672 119.27C363.929 120.23 363.789 121.195 362.941 125.366C361.613 131.904 357.582 137.913 350.557 142.79C348.041 144.532 346.222 144.897 344.853 143.961C343.753 143.207 343.039 141.767 342.156 138.931C341.981 138.379 341.32 136.132 341.15 135.59C340.697 134.097 340.169 132.621 339.565 131.164C338.161 127.891 337.792 125.99 338.336 124.953C338.787 124.075 339.553 123.878 341.612 123.777C342.484 123.734 342.835 123.71 343.35 123.643L344.49 123.485C344.911 123.427 345.204 123.389 345.473 123.345C346.117 123.249 346.596 123.163 347.058 123.057C348.053 122.822 349.059 122.481 350.855 121.747ZM351.112 122.179C349.293 122.918 348.258 123.278 347.222 123.518C346.731 123.629 346.234 123.72 345.578 123.821C344.838 123.932 344.095 124.033 343.35 124.123C342.899 124.185 342.536 124.214 341.641 124.257C339.81 124.344 339.202 124.502 338.868 125.145C338.412 126.029 338.751 127.843 340.115 131.001C340.725 132.472 341.26 133.963 341.717 135.47L342.724 138.811C343.578 141.547 344.256 142.929 345.227 143.591C346.321 144.34 347.854 144.038 350.182 142.42C357.097 137.62 361.063 131.716 362.368 125.285C363.187 121.229 363.333 120.24 363.099 119.376C362.859 118.478 362.011 118.416 359.858 119.299C358.189 120.012 356.439 120.591 354.634 121.027L354.47 121.075C353.314 121.362 352.19 121.731 351.112 122.179ZM348.483 125.337C348.482 125.337 348.482 125.337 348.483 125.337C349.283 125.183 349.943 124.977 350.761 124.656C350.966 124.569 352.265 124.027 352.703 123.854C353.581 123.513 354.441 123.225 355.453 122.947C357.032 122.515 358.167 122.577 358.893 123.139C359.466 123.59 359.677 124.224 359.717 125.145C359.729 125.337 359.729 125.481 359.729 125.803C359.729 128.505 357.021 133.905 353.095 136.723C350.557 138.547 348.819 138.964 347.292 137.932C346.087 137.116 345.245 135.7 343.391 131.736C342.302 129.417 342.191 127.848 342.993 126.84C343.648 126.024 344.689 125.707 346.403 125.544L347.14 125.486C347.834 125.429 348.162 125.395 348.483 125.338C348.483 125.338 348.483 125.337 348.483 125.337ZM347.251 126.441L346.538 126.499C345.134 126.629 344.373 126.864 343.97 127.368C343.426 128.054 343.513 129.336 344.479 131.39C346.245 135.153 347.058 136.531 348.035 137.193C348.989 137.836 350.165 137.553 352.323 136.003C355.985 133.372 358.559 128.241 358.559 125.803C358.559 125.496 358.559 125.357 358.548 125.184C358.518 124.493 358.372 124.065 358.085 123.84C357.734 123.566 357.032 123.528 355.822 123.859C354.928 124.101 354.055 124.39 353.207 124.723C352.785 124.886 351.493 125.429 351.264 125.52C350.465 125.849 349.62 126.101 348.749 126.269C348.363 126.345 348 126.384 347.251 126.441ZM214.032 83.7316C213.101 85.7956 211.961 87.2116 209.855 89.2035L208.334 90.6291C207.801 91.1327 207.288 91.6497 206.795 92.1795C205.745 93.3052 204.828 94.5107 204.057 95.7794C202.39 98.5154 199.881 100.666 196.54 102.447C194.054 103.771 191.714 104.664 187.374 106.09C180.933 108.202 177.762 106.694 171.45 98.2178C169.777 95.9666 166.302 94.0754 160.932 92.1411C159.177 91.5027 153.397 89.6259 152.491 89.2995C149.589 88.2531 148.372 87.514 148.735 86.4916C149.127 85.378 151.835 84.5476 157.791 83.5732C167.519 81.9797 173.544 81.7397 181.149 82.1236C185.771 82.3588 186.806 82.3636 188.602 81.9989C189.766 81.7685 190.895 81.3749 192.112 80.7509L193.744 79.9301C199.512 76.9829 201.314 76.1093 203.864 75.1782C207.392 73.8774 210.048 73.5846 212.019 74.5062C216.231 76.4837 216.512 78.2021 214.032 83.7316ZM212.932 83.3956C215.242 78.2597 215.038 77.0309 211.434 75.3414C209.878 74.6118 207.562 74.8662 204.344 76.0518C201.864 76.9637 200.074 77.8277 194.358 80.7413L192.726 81.5717C191.541 82.1907 190.244 82.6508 188.883 82.9348C186.917 83.3236 185.829 83.3188 181.079 83.0788C173.568 82.7044 167.642 82.9396 158.025 84.5188C155.158 84.9844 153.081 85.4212 151.713 85.8388C150.525 86.2036 149.934 86.5348 149.858 86.7556C149.765 87.0292 150.724 87.6148 152.959 88.4163C153.836 88.7379 159.622 90.6147 161.406 91.2627C166.975 93.2739 170.614 95.2466 172.445 97.7138C178.499 105.84 181.143 107.102 186.941 105.202C191.211 103.795 193.498 102.922 195.909 101.64C199.079 99.9457 201.448 97.9202 203.016 95.3522C203.859 93.9602 204.783 92.7603 205.859 91.5987C206.369 91.0525 206.9 90.5194 207.45 90.0003L208.971 88.5747C210.995 86.6596 212.06 85.3348 212.932 83.3956ZM209.047 83.2084C204.403 89.3523 198.208 93.6483 189.567 95.3186C184.993 96.197 182.272 94.9394 181.892 92.4723C181.57 90.3363 183.232 88.1236 185.402 88.1236C187.169 88.1236 188.678 87.3172 194.399 83.7268C195.259 83.1892 195.903 82.786 196.54 82.4116C199.114 80.8757 201.086 79.9301 202.87 79.4933C206.128 78.6917 208.328 78.4613 209.51 78.9077C210.972 79.4549 210.808 80.8901 209.047 83.2084ZM208.556 82.9588C210.147 80.8469 210.276 79.7237 209.264 79.3445C208.264 78.9653 206.152 79.1861 203.034 79.9541C201.337 80.3717 199.407 81.2933 196.885 82.7956C196.254 83.1748 195.61 83.5732 194.75 84.1108C188.854 87.8164 187.368 88.6035 185.402 88.6035C183.635 88.6035 182.185 90.5331 182.477 92.4147C182.805 94.5746 185.18 95.669 189.433 94.8482C197.903 93.2163 203.976 89.0019 208.556 82.9588ZM283.78 29.0989C291.9 31.4797 295.919 31.4797 302.277 29.1037C304.044 28.4461 305.477 27.6926 308.712 25.8302C311.971 23.9486 313.421 23.1854 315.229 22.5086C317.651 21.6063 319.78 21.3663 321.793 21.8943C324.086 22.499 325.42 27.7982 325.759 35.55C326.051 42.3659 325.455 49.4362 324.32 51.9658C323.255 54.3321 320.892 55.8873 317.587 56.7753C315.131 57.3921 312.573 57.6869 310.005 57.6489C306.618 57.6489 304.74 58.8008 302.868 61.316C302.652 61.5992 301.961 62.564 301.868 62.6936C300.844 64.0855 300.084 64.7719 298.984 65.0695C298.434 65.2231 297.773 65.4679 296.72 65.9047L295.298 66.4951C294.696 66.7495 294.204 66.9463 293.719 67.1383C289.957 68.6263 286.857 69.4039 283.681 69.4039C280.34 69.4039 277.807 70.407 275.479 72.2454C274.8 72.7782 273.022 74.4198 272.77 74.6166C271.285 75.7878 269.301 76.6517 266.423 77.5445C265.604 77.7941 262.925 78.5669 262.767 78.6101L261.562 78.9845C261.041 79.1573 260.521 79.2869 259.983 79.3733C256.736 79.9205 253.466 79.1141 249.464 77.2517C248.721 76.9013 246.463 75.783 246.095 75.6102C244.896 75.0534 243.685 74.8758 240.777 74.6982L239.765 74.6262C236.969 74.4342 235.273 74.079 233.787 73.2006C230.862 71.4678 229.826 69.4759 230.481 67.2823C231.26 64.6807 234.284 61.9928 239.169 58.988C240.415 58.2261 241.683 57.4883 242.971 56.7753C242.778 56.8857 245.504 55.3737 246.071 55.0473C247.669 54.1305 248.879 53.1753 253.53 49.2682L254.168 48.7402C256.209 47.0314 257.613 45.9131 258.918 44.9819C260.614 43.7819 261.679 42.1259 263.305 38.718L263.674 37.9452C265.253 34.6236 266.178 33.1453 267.693 32.0269C268.523 31.4125 271.6 28.8877 272.332 28.4269C274.66 26.987 277.017 27.1166 283.78 29.0989ZM283.581 29.5501C276.994 27.6206 274.806 27.4958 272.689 28.8157C271.992 29.2477 268.945 31.7485 268.079 32.3821C266.663 33.4285 265.762 34.8732 264.218 38.118L263.849 38.8908C262.194 42.3755 261.088 44.0747 259.304 45.3467C257.441 46.6992 255.653 48.1198 253.945 49.6042C249.254 53.5401 248.049 54.5001 246.411 55.4409C245.832 55.7721 243.106 57.2841 243.304 57.1689C241.842 57.9897 240.66 58.6712 239.52 59.372C234.74 62.3144 231.78 64.9399 231.049 67.3975C230.452 69.3895 231.388 71.1894 234.126 72.807C235.507 73.623 237.115 73.959 239.812 74.151L240.824 74.2134C243.819 74.4054 245.083 74.5878 246.382 75.1974C246.762 75.3702 249.014 76.4933 249.751 76.8293C253.647 78.6437 256.794 79.4213 259.866 78.9029C260.369 78.8213 260.86 78.7013 261.34 78.5429C261.747 78.4093 262.156 78.2813 262.568 78.1589C262.732 78.1109 265.411 77.3429 266.219 77.0933C269.026 76.2293 270.945 75.3846 272.361 74.271C272.595 74.0886 274.373 72.447 275.069 71.8998C277.503 69.9798 280.171 68.9239 283.681 68.9239C286.752 68.9239 289.776 68.1607 293.467 66.7063C293.947 66.5143 294.433 66.3223 295.035 66.0679C295.105 66.0391 296.164 65.5927 296.457 65.4775C297.533 65.0311 298.212 64.7767 298.797 64.6135C299.733 64.3639 300.411 63.74 301.365 62.444L302.359 61.0616C304.342 58.4216 306.378 57.1689 310.005 57.1689C312.608 57.1689 315.112 56.9337 317.399 56.3193C320.558 55.4745 322.781 54.0153 323.776 51.8026C324.87 49.3498 325.472 42.3227 325.174 35.5644C324.846 28.1101 323.53 22.8542 321.617 22.355C319.757 21.8655 317.774 22.091 315.475 22.9454C313.708 23.603 312.275 24.3566 309.04 26.2238C305.781 28.1053 304.331 28.8637 302.523 29.5453C296.012 31.9693 291.841 31.9693 283.581 29.5501ZM291.87 39.4044C295.018 39.4044 296.287 39.3036 297.556 38.9436C298.294 38.7372 303.377 36.6396 306.261 35.6028C307.373 35.2092 308.344 34.4316 310.122 32.7037C311.62 31.2445 311.988 30.9037 312.696 30.3805C314.861 28.7725 316.832 28.8061 318.675 30.9709C322.319 35.2428 321.956 38.622 318.716 43.9403C318.183 44.7998 317.695 45.6773 317.253 46.5706C317.066 46.9546 316.668 47.8666 316.615 47.9626C316.516 48.1786 316.417 48.3514 316.3 48.5242C315.931 49.0714 315.387 49.585 313.93 50.7802C312.526 51.9322 310.912 52.3497 307.098 52.8585C306.039 53.0025 305.811 53.0313 305.343 53.1033C301.821 53.6313 299.727 54.3945 298.182 56.0169C296.094 58.22 293.561 59.6072 289.419 61.172C289.098 61.2872 288.776 61.412 288.366 61.556L287.325 61.94C285.771 62.4746 284.265 63.1002 282.821 63.812C281.317 64.5799 280.018 64.9399 277.31 65.4727C272.291 66.4615 270.126 67.2775 267.149 69.9655C264.154 72.6726 261.199 73.6326 257.42 73.1814C254.285 72.8022 251.202 71.7366 243.638 68.6311C239.952 67.1191 239.876 64.8967 242.76 62.1224C244.738 60.2312 244.82 60.1736 254.109 54.2313C258.859 51.193 261.697 49.1578 263.838 47.089C265.318 45.6587 266.295 44.3387 266.739 43.1051C269.957 34.3212 274.052 32.5549 280.065 35.6364C281.206 36.222 283.932 37.8204 284.266 37.9884C286.231 39.0204 288.08 39.4044 291.87 39.4044ZM291.87 40.3643C287.869 40.3643 285.804 39.9372 283.634 38.7996C283.265 38.6076 280.551 37.0188 279.445 36.4476C274.151 33.7357 270.869 35.1516 267.862 43.3835C267.359 44.7611 266.3 46.1914 264.733 47.7082C262.521 49.8442 259.643 51.9082 254.823 54.9897C245.662 60.8504 245.545 60.932 243.65 62.7464C241.21 65.0983 241.257 66.5863 244.164 67.7767C251.6 70.8246 254.63 71.8758 257.584 72.231C260.965 72.6342 263.539 71.799 266.283 69.3223C269.454 66.4615 271.811 65.5687 277.035 64.5415C279.627 64.028 280.837 63.6968 282.2 62.996C283.69 62.2619 285.242 61.617 286.845 61.0664L287.887 60.6824L288.928 60.2984C292.918 58.796 295.31 57.4809 297.258 55.4313C299.013 53.5737 301.353 52.7241 305.132 52.1577C305.618 52.0858 305.84 52.0569 306.91 51.913C310.479 51.433 311.941 51.0586 313.1 50.1034C314.48 48.9706 314.978 48.5002 315.276 48.0586C315.364 47.929 315.445 47.7898 315.533 47.6074C315.568 47.5354 315.972 46.6186 316.171 46.2155C316.545 45.4475 317.019 44.5835 317.674 43.5083C320.74 38.4732 321.067 35.4444 317.715 31.5181C316.311 29.8669 315.159 29.8477 313.48 31.0909C312.831 31.5709 312.468 31.9069 311.011 33.3229C309.116 35.1708 308.063 36.006 306.729 36.486C303.909 37.494 298.762 39.6204 297.937 39.8508C296.509 40.2539 295.135 40.3643 291.87 40.3643ZM284.438 44.4899C284.44 44.4915 284.442 44.4929 284.444 44.4942C287.643 46.3642 290.491 46.2774 295.105 44.9147C298.258 43.9835 298.569 43.9067 299.61 43.9067C301.072 43.9019 302.073 44.5595 302.675 46.0474C303.646 48.4378 301.318 50.137 295.48 52.1338C293.9 52.6761 285.974 55.1001 283.78 55.8441C279.182 57.3993 275.631 58.9256 272.741 60.716C265.125 65.4391 262.001 66.4423 258.871 65.3623C258.134 65.0946 257.426 64.7767 256.753 64.4119L255.589 63.7976C255.157 63.5683 254.72 63.3443 254.279 63.1256C252.331 62.1656 252.629 61.0712 254.776 59.6024C255.566 59.06 261.012 55.9497 262.691 54.8457C266.844 52.1145 269.658 49.3402 271.121 46.0427C272.917 41.9867 273.981 40.2347 275.099 39.6156C276.111 39.0588 277.064 39.3612 278.714 40.5275C279.082 40.7963 280.703 42.0059 281.118 42.3035C282.246 43.1187 283.287 43.8142 284.432 44.4856C284.434 44.4868 284.436 44.4883 284.438 44.4899ZM284.093 44.8787C284.091 44.8771 284.089 44.8756 284.087 44.8744C282.93 44.1934 281.872 43.4931 280.732 42.6683C280.305 42.3611 278.696 41.1515 278.334 40.8923C276.871 39.8556 276.14 39.6204 275.426 40.0139C274.455 40.5467 273.414 42.2699 271.671 46.2058C270.167 49.5994 267.283 52.4409 263.06 55.2201C261.357 56.3385 255.917 59.444 255.151 59.972C253.267 61.2584 253.068 61.9736 254.583 62.7176L255.905 63.3896L257.069 64.004C257.929 64.4503 258.52 64.7239 259.099 64.9207C261.966 65.9143 264.926 64.9543 272.39 60.332C275.327 58.5128 278.913 56.9721 283.564 55.3977C285.763 54.6537 293.684 52.2297 295.263 51.6922C300.821 49.7866 302.95 48.2362 302.125 46.2011C301.599 44.9003 300.809 44.3771 299.61 44.3819C298.674 44.3819 298.352 44.4635 295.304 45.3659C290.526 46.7766 287.502 46.873 284.099 44.883C284.097 44.8817 284.095 44.8803 284.093 44.8787Z\" fill=\"#A3A3A3\" fill-opacity=\"0.17\"/>\n                    <path d=\"M142.101 164V157.318L162.773 135.901C164.98 133.574 166.8 131.536 168.232 129.786C169.683 128.016 170.767 126.335 171.483 124.744C172.199 123.153 172.557 121.463 172.557 119.673C172.557 117.645 172.08 115.895 171.125 114.423C170.171 112.932 168.868 111.788 167.218 110.993C165.567 110.178 163.708 109.77 161.639 109.77C159.452 109.77 157.543 110.217 155.912 111.112C154.281 112.007 153.029 113.27 152.154 114.901C151.279 116.531 150.841 118.44 150.841 120.628H142.041C142.041 116.909 142.896 113.658 144.607 110.874C146.317 108.089 148.664 105.932 151.646 104.401C154.629 102.849 158.02 102.074 161.818 102.074C165.656 102.074 169.037 102.839 171.96 104.371C174.904 105.882 177.2 107.95 178.851 110.575C180.502 113.18 181.327 116.124 181.327 119.405C181.327 121.672 180.899 123.889 180.044 126.057C179.209 128.224 177.747 130.641 175.659 133.305C173.571 135.95 170.668 139.162 166.949 142.94L154.808 155.648V156.095H182.311V164H142.101ZM213.781 164.835C210.043 164.835 206.682 164.119 203.699 162.688C200.736 161.236 198.369 159.247 196.6 156.722C194.83 154.196 193.885 151.312 193.766 148.071H202.715C202.933 150.696 204.097 152.854 206.205 154.544C208.313 156.234 210.838 157.08 213.781 157.08C216.128 157.08 218.206 156.543 220.016 155.469C221.845 154.375 223.277 152.874 224.311 150.964C225.365 149.055 225.892 146.878 225.892 144.432C225.892 141.946 225.355 139.729 224.281 137.78C223.208 135.831 221.726 134.3 219.837 133.186C217.968 132.072 215.82 131.506 213.394 131.486C211.544 131.486 209.685 131.804 207.816 132.44C205.946 133.077 204.435 133.912 203.281 134.946L194.84 133.693L198.27 102.909H231.858V110.814H205.936L203.997 127.906H204.355C205.548 126.753 207.129 125.788 209.098 125.013C211.087 124.237 213.215 123.849 215.482 123.849C219.2 123.849 222.512 124.734 225.415 126.504C228.338 128.274 230.635 130.69 232.306 133.753C233.996 136.795 234.831 140.295 234.811 144.253C234.831 148.21 233.936 151.74 232.127 154.842C230.337 157.945 227.851 160.391 224.669 162.18C221.507 163.95 217.878 164.835 213.781 164.835ZM263.783 153.739V113.409H271.807V153.739H263.783ZM247.645 137.571V129.577H287.975V137.571H247.645Z\" fill=\"url(#paint1_linear_211_527)\"/>\n                    <path d=\"M49.8864 191.295H46.3409C46.2045 190.538 45.9508 189.871 45.5795 189.295C45.2083 188.72 44.7538 188.231 44.2159 187.83C43.678 187.428 43.0758 187.125 42.4091 186.92C41.75 186.716 41.0492 186.614 40.3068 186.614C38.9659 186.614 37.7652 186.951 36.7045 187.625C35.6515 188.299 34.8182 189.288 34.2045 190.591C33.5985 191.894 33.2955 193.485 33.2955 195.364C33.2955 197.258 33.5985 198.856 34.2045 200.159C34.8182 201.462 35.6553 202.447 36.7159 203.114C37.7765 203.78 38.9697 204.114 40.2955 204.114C41.0303 204.114 41.7273 204.015 42.3864 203.818C43.053 203.614 43.6553 203.314 44.1932 202.92C44.7311 202.527 45.1856 202.045 45.5568 201.477C45.9356 200.902 46.197 200.242 46.3409 199.5L49.8864 199.511C49.697 200.655 49.3295 201.708 48.7841 202.67C48.2462 203.625 47.553 204.451 46.7045 205.148C45.8636 205.837 44.9015 206.371 43.8182 206.75C42.7348 207.129 41.553 207.318 40.2727 207.318C38.2576 207.318 36.4621 206.841 34.8864 205.886C33.3106 204.924 32.0682 203.549 31.1591 201.761C30.2576 199.973 29.8068 197.841 29.8068 195.364C29.8068 192.879 30.2614 190.746 31.1705 188.966C32.0795 187.178 33.322 185.807 34.8977 184.852C36.4735 183.89 38.2652 183.409 40.2727 183.409C41.5076 183.409 42.6591 183.587 43.7273 183.943C44.803 184.292 45.7689 184.807 46.625 185.489C47.4811 186.163 48.1894 186.989 48.75 187.966C49.3106 188.936 49.6894 190.045 49.8864 191.295ZM61.1676 207.352C59.5313 207.352 58.1032 206.977 56.8835 206.227C55.6638 205.477 54.7169 204.428 54.0426 203.08C53.3684 201.731 53.0312 200.155 53.0312 198.352C53.0312 196.542 53.3684 194.958 54.0426 193.602C54.7169 192.246 55.6638 191.193 56.8835 190.443C58.1032 189.693 59.5313 189.318 61.1676 189.318C62.804 189.318 64.232 189.693 65.4517 190.443C66.6714 191.193 67.6184 192.246 68.2926 193.602C68.9669 194.958 69.304 196.542 69.304 198.352C69.304 200.155 68.9669 201.731 68.2926 203.08C67.6184 204.428 66.6714 205.477 65.4517 206.227C64.232 206.977 62.804 207.352 61.1676 207.352ZM61.179 204.5C62.2396 204.5 63.1184 204.22 63.8153 203.659C64.5123 203.098 65.0275 202.352 65.3608 201.42C65.7017 200.489 65.8722 199.462 65.8722 198.341C65.8722 197.227 65.7017 196.205 65.3608 195.273C65.0275 194.333 64.5123 193.58 63.8153 193.011C63.1184 192.443 62.2396 192.159 61.179 192.159C60.1108 192.159 59.2244 192.443 58.5199 193.011C57.8229 193.58 57.304 194.333 56.9631 195.273C56.6297 196.205 56.4631 197.227 56.4631 198.341C56.4631 199.462 56.6297 200.489 56.9631 201.42C57.304 202.352 57.8229 203.098 58.5199 203.659C59.2244 204.22 60.1108 204.5 61.179 204.5ZM73.0966 207V189.545H76.358V192.386H76.5739C76.9375 191.424 77.5322 190.674 78.358 190.136C79.1837 189.591 80.1723 189.318 81.3239 189.318C82.4905 189.318 83.4678 189.591 84.2557 190.136C85.0511 190.682 85.6383 191.432 86.017 192.386H86.1989C86.6155 191.455 87.2784 190.712 88.1875 190.159C89.0966 189.598 90.1799 189.318 91.4375 189.318C93.0208 189.318 94.3125 189.814 95.3125 190.807C96.3201 191.799 96.8239 193.295 96.8239 195.295V207H93.4261V195.614C93.4261 194.432 93.1042 193.576 92.4602 193.045C91.8163 192.515 91.0473 192.25 90.1534 192.25C89.0473 192.25 88.1875 192.591 87.5739 193.273C86.9602 193.947 86.6534 194.814 86.6534 195.875V207H83.267V195.398C83.267 194.451 82.9716 193.689 82.3807 193.114C81.7898 192.538 81.0208 192.25 80.0739 192.25C79.4299 192.25 78.8352 192.42 78.2898 192.761C77.7519 193.095 77.3163 193.561 76.983 194.159C76.6572 194.758 76.4943 195.451 76.4943 196.239V207H73.0966ZM101.378 213.545V189.545H104.696V192.375H104.98C105.177 192.011 105.461 191.591 105.832 191.114C106.204 190.636 106.719 190.22 107.378 189.864C108.037 189.5 108.908 189.318 109.991 189.318C111.401 189.318 112.658 189.674 113.764 190.386C114.87 191.098 115.738 192.125 116.366 193.466C117.003 194.807 117.321 196.42 117.321 198.307C117.321 200.193 117.007 201.811 116.378 203.159C115.749 204.5 114.885 205.534 113.787 206.261C112.688 206.981 111.435 207.341 110.026 207.341C108.965 207.341 108.098 207.163 107.423 206.807C106.757 206.451 106.234 206.034 105.855 205.557C105.476 205.08 105.185 204.655 104.98 204.284H104.776V213.545H101.378ZM104.707 198.273C104.707 199.5 104.885 200.576 105.241 201.5C105.598 202.424 106.113 203.148 106.787 203.67C107.461 204.186 108.287 204.443 109.264 204.443C110.279 204.443 111.128 204.174 111.81 203.636C112.491 203.091 113.007 202.352 113.355 201.42C113.711 200.489 113.889 199.439 113.889 198.273C113.889 197.121 113.715 196.087 113.366 195.17C113.026 194.254 112.51 193.53 111.821 193C111.139 192.47 110.287 192.205 109.264 192.205C108.279 192.205 107.446 192.458 106.764 192.966C106.09 193.473 105.579 194.182 105.23 195.091C104.882 196 104.707 197.061 104.707 198.273ZM128.651 207.352C126.931 207.352 125.45 206.985 124.207 206.25C122.973 205.508 122.018 204.466 121.344 203.125C120.677 201.777 120.344 200.197 120.344 198.386C120.344 196.598 120.677 195.023 121.344 193.659C122.018 192.295 122.957 191.231 124.162 190.466C125.374 189.701 126.791 189.318 128.412 189.318C129.397 189.318 130.351 189.481 131.276 189.807C132.2 190.133 133.029 190.644 133.764 191.341C134.499 192.038 135.079 192.943 135.503 194.057C135.927 195.163 136.139 196.508 136.139 198.091V199.295H122.264V196.75H132.81C132.81 195.856 132.628 195.064 132.264 194.375C131.901 193.678 131.389 193.129 130.73 192.727C130.079 192.326 129.313 192.125 128.435 192.125C127.48 192.125 126.647 192.36 125.935 192.83C125.23 193.292 124.685 193.898 124.298 194.648C123.92 195.39 123.73 196.197 123.73 197.068V199.057C123.73 200.223 123.935 201.216 124.344 202.034C124.76 202.852 125.34 203.477 126.082 203.909C126.825 204.333 127.692 204.545 128.685 204.545C129.329 204.545 129.916 204.455 130.446 204.273C130.976 204.083 131.435 203.803 131.821 203.432C132.207 203.061 132.503 202.602 132.707 202.057L135.923 202.636C135.666 203.583 135.204 204.413 134.537 205.125C133.878 205.83 133.048 206.379 132.048 206.773C131.056 207.159 129.923 207.352 128.651 207.352ZM148.057 189.545V192.273H138.523V189.545H148.057ZM141.08 185.364H144.477V201.875C144.477 202.534 144.576 203.03 144.773 203.364C144.97 203.689 145.223 203.913 145.534 204.034C145.852 204.148 146.197 204.205 146.568 204.205C146.841 204.205 147.08 204.186 147.284 204.148C147.489 204.11 147.648 204.08 147.761 204.057L148.375 206.864C148.178 206.939 147.898 207.015 147.534 207.091C147.17 207.174 146.716 207.22 146.17 207.227C145.277 207.242 144.443 207.083 143.67 206.75C142.898 206.417 142.273 205.902 141.795 205.205C141.318 204.508 141.08 203.633 141.08 202.58V185.364ZM151.815 207V189.545H155.213V207H151.815ZM153.531 186.852C152.94 186.852 152.433 186.655 152.009 186.261C151.592 185.86 151.384 185.383 151.384 184.83C151.384 184.269 151.592 183.792 152.009 183.398C152.433 182.996 152.94 182.795 153.531 182.795C154.122 182.795 154.626 182.996 155.043 183.398C155.467 183.792 155.679 184.269 155.679 184.83C155.679 185.383 155.467 185.86 155.043 186.261C154.626 186.655 154.122 186.852 153.531 186.852ZM167.932 189.545V192.273H158.398V189.545H167.932ZM160.955 185.364H164.352V201.875C164.352 202.534 164.451 203.03 164.648 203.364C164.845 203.689 165.098 203.913 165.409 204.034C165.727 204.148 166.072 204.205 166.443 204.205C166.716 204.205 166.955 204.186 167.159 204.148C167.364 204.11 167.523 204.08 167.636 204.057L168.25 206.864C168.053 206.939 167.773 207.015 167.409 207.091C167.045 207.174 166.591 207.22 166.045 207.227C165.152 207.242 164.318 207.083 163.545 206.75C162.773 206.417 162.148 205.902 161.67 205.205C161.193 204.508 160.955 203.633 160.955 202.58V185.364ZM171.69 207V189.545H175.088V207H171.69ZM173.406 186.852C172.815 186.852 172.308 186.655 171.884 186.261C171.467 185.86 171.259 185.383 171.259 184.83C171.259 184.269 171.467 183.792 171.884 183.398C172.308 182.996 172.815 182.795 173.406 182.795C173.997 182.795 174.501 182.996 174.918 183.398C175.342 183.792 175.554 184.269 175.554 184.83C175.554 185.383 175.342 185.86 174.918 186.261C174.501 186.655 173.997 186.852 173.406 186.852ZM187.011 207.352C185.375 207.352 183.947 206.977 182.727 206.227C181.508 205.477 180.561 204.428 179.886 203.08C179.212 201.731 178.875 200.155 178.875 198.352C178.875 196.542 179.212 194.958 179.886 193.602C180.561 192.246 181.508 191.193 182.727 190.443C183.947 189.693 185.375 189.318 187.011 189.318C188.648 189.318 190.076 189.693 191.295 190.443C192.515 191.193 193.462 192.246 194.136 193.602C194.811 194.958 195.148 196.542 195.148 198.352C195.148 200.155 194.811 201.731 194.136 203.08C193.462 204.428 192.515 205.477 191.295 206.227C190.076 206.977 188.648 207.352 187.011 207.352ZM187.023 204.5C188.083 204.5 188.962 204.22 189.659 203.659C190.356 203.098 190.871 202.352 191.205 201.42C191.545 200.489 191.716 199.462 191.716 198.341C191.716 197.227 191.545 196.205 191.205 195.273C190.871 194.333 190.356 193.58 189.659 193.011C188.962 192.443 188.083 192.159 187.023 192.159C185.955 192.159 185.068 192.443 184.364 193.011C183.667 193.58 183.148 194.333 182.807 195.273C182.473 196.205 182.307 197.227 182.307 198.341C182.307 199.462 182.473 200.489 182.807 201.42C183.148 202.352 183.667 203.098 184.364 203.659C185.068 204.22 185.955 204.5 187.023 204.5ZM202.338 196.636V207H198.94V189.545H202.202V192.386H202.418C202.819 191.462 203.448 190.72 204.304 190.159C205.168 189.598 206.255 189.318 207.565 189.318C208.755 189.318 209.796 189.568 210.69 190.068C211.584 190.561 212.277 191.295 212.77 192.273C213.262 193.25 213.509 194.458 213.509 195.898V207H210.111V196.307C210.111 195.042 209.781 194.053 209.122 193.341C208.463 192.621 207.558 192.261 206.406 192.261C205.618 192.261 204.918 192.432 204.304 192.773C203.698 193.114 203.217 193.614 202.861 194.273C202.512 194.924 202.338 195.712 202.338 196.636ZM233.307 207.33C231.746 207.33 230.402 207.045 229.273 206.477C228.152 205.909 227.288 205.136 226.682 204.159C226.076 203.174 225.773 202.061 225.773 200.818C225.773 199.871 225.97 199.03 226.364 198.295C226.758 197.553 227.307 196.867 228.011 196.239C228.716 195.61 229.53 194.977 230.455 194.341L234.205 191.693C234.841 191.277 235.337 190.837 235.693 190.375C236.049 189.905 236.227 189.326 236.227 188.636C236.227 188.091 235.992 187.568 235.523 187.068C235.053 186.568 234.424 186.318 233.636 186.318C233.091 186.318 232.61 186.451 232.193 186.716C231.784 186.981 231.462 187.322 231.227 187.739C231 188.148 230.886 188.58 230.886 189.034C230.886 189.564 231.03 190.098 231.318 190.636C231.614 191.174 231.992 191.731 232.455 192.307C232.917 192.875 233.402 193.466 233.909 194.08L244.716 207H240.875L231.932 196.489C231.182 195.602 230.485 194.769 229.841 193.989C229.197 193.201 228.674 192.405 228.273 191.602C227.879 190.792 227.682 189.917 227.682 188.977C227.682 187.909 227.924 186.962 228.409 186.136C228.902 185.303 229.587 184.652 230.466 184.182C231.345 183.712 232.375 183.477 233.557 183.477C234.754 183.477 235.78 183.712 236.636 184.182C237.5 184.644 238.163 185.261 238.625 186.034C239.095 186.799 239.33 187.636 239.33 188.545C239.33 189.652 239.053 190.629 238.5 191.477C237.955 192.318 237.201 193.091 236.239 193.795L231.568 197.239C230.659 197.905 230.027 198.564 229.67 199.216C229.322 199.86 229.148 200.364 229.148 200.727C229.148 201.394 229.318 202.011 229.659 202.58C230.008 203.148 230.492 203.602 231.114 203.943C231.742 204.284 232.477 204.455 233.318 204.455C234.182 204.455 235.023 204.269 235.841 203.898C236.667 203.519 237.413 202.977 238.08 202.273C238.754 201.568 239.288 200.723 239.682 199.739C240.076 198.754 240.273 197.652 240.273 196.432H243.341C243.341 197.932 243.17 199.201 242.83 200.239C242.489 201.269 242.076 202.11 241.591 202.761C241.114 203.405 240.663 203.909 240.239 204.273C240.102 204.394 239.973 204.515 239.852 204.636C239.731 204.758 239.602 204.879 239.466 205C238.678 205.795 237.723 206.383 236.602 206.761C235.489 207.14 234.39 207.33 233.307 207.33ZM256.119 207V183.727H270.71V186.75H259.631V193.841H269.949V196.852H259.631V203.977H270.847V207H256.119ZM290.06 189.545L283.73 207H280.094L273.753 189.545H277.401L281.821 202.977H282.003L286.412 189.545H290.06ZM300.182 207.352C298.462 207.352 296.981 206.985 295.739 206.25C294.504 205.508 293.549 204.466 292.875 203.125C292.208 201.777 291.875 200.197 291.875 198.386C291.875 196.598 292.208 195.023 292.875 193.659C293.549 192.295 294.489 191.231 295.693 190.466C296.905 189.701 298.322 189.318 299.943 189.318C300.928 189.318 301.883 189.481 302.807 189.807C303.731 190.133 304.561 190.644 305.295 191.341C306.03 192.038 306.61 192.943 307.034 194.057C307.458 195.163 307.67 196.508 307.67 198.091V199.295H293.795V196.75H304.341C304.341 195.856 304.159 195.064 303.795 194.375C303.432 193.678 302.92 193.129 302.261 192.727C301.61 192.326 300.845 192.125 299.966 192.125C299.011 192.125 298.178 192.36 297.466 192.83C296.761 193.292 296.216 193.898 295.83 194.648C295.451 195.39 295.261 196.197 295.261 197.068V199.057C295.261 200.223 295.466 201.216 295.875 202.034C296.292 202.852 296.871 203.477 297.614 203.909C298.356 204.333 299.223 204.545 300.216 204.545C300.86 204.545 301.447 204.455 301.977 204.273C302.508 204.083 302.966 203.803 303.352 203.432C303.739 203.061 304.034 202.602 304.239 202.057L307.455 202.636C307.197 203.583 306.735 204.413 306.068 205.125C305.409 205.83 304.58 206.379 303.58 206.773C302.587 207.159 301.455 207.352 300.182 207.352ZM314.838 196.636V207H311.44V189.545H314.702V192.386H314.918C315.319 191.462 315.948 190.72 316.804 190.159C317.668 189.598 318.755 189.318 320.065 189.318C321.255 189.318 322.296 189.568 323.19 190.068C324.084 190.561 324.777 191.295 325.27 192.273C325.762 193.25 326.009 194.458 326.009 195.898V207H322.611V196.307C322.611 195.042 322.281 194.053 321.622 193.341C320.963 192.621 320.058 192.261 318.906 192.261C318.118 192.261 317.418 192.432 316.804 192.773C316.198 193.114 315.717 193.614 315.361 194.273C315.012 194.924 314.838 195.712 314.838 196.636ZM338.713 189.545V192.273H329.179V189.545H338.713ZM331.736 185.364H335.134V201.875C335.134 202.534 335.232 203.03 335.429 203.364C335.626 203.689 335.88 203.913 336.19 204.034C336.509 204.148 336.853 204.205 337.224 204.205C337.497 204.205 337.736 204.186 337.94 204.148C338.145 204.11 338.304 204.08 338.418 204.057L339.031 206.864C338.834 206.939 338.554 207.015 338.19 207.091C337.827 207.174 337.372 207.22 336.827 207.227C335.933 207.242 335.099 207.083 334.327 206.75C333.554 206.417 332.929 205.902 332.452 205.205C331.974 204.508 331.736 203.633 331.736 202.58V185.364ZM355.27 193.807L352.19 194.352C352.062 193.958 351.857 193.583 351.577 193.227C351.304 192.871 350.933 192.58 350.463 192.352C349.993 192.125 349.406 192.011 348.702 192.011C347.74 192.011 346.937 192.227 346.293 192.659C345.649 193.083 345.327 193.633 345.327 194.307C345.327 194.89 345.543 195.36 345.974 195.716C346.406 196.072 347.103 196.364 348.065 196.591L350.838 197.227C352.444 197.598 353.641 198.17 354.429 198.943C355.217 199.716 355.611 200.72 355.611 201.955C355.611 203 355.308 203.932 354.702 204.75C354.103 205.561 353.266 206.197 352.19 206.659C351.122 207.121 349.884 207.352 348.474 207.352C346.52 207.352 344.925 206.936 343.69 206.102C342.455 205.261 341.698 204.068 341.418 202.523L344.702 202.023C344.906 202.879 345.327 203.527 345.963 203.966C346.599 204.398 347.429 204.614 348.452 204.614C349.565 204.614 350.455 204.383 351.122 203.92C351.789 203.451 352.122 202.879 352.122 202.205C352.122 201.659 351.918 201.201 351.509 200.83C351.107 200.458 350.49 200.178 349.656 199.989L346.702 199.341C345.073 198.97 343.868 198.379 343.088 197.568C342.315 196.758 341.929 195.731 341.929 194.489C341.929 193.458 342.217 192.557 342.793 191.784C343.368 191.011 344.164 190.409 345.179 189.977C346.194 189.538 347.357 189.318 348.668 189.318C350.554 189.318 352.039 189.727 353.122 190.545C354.205 191.356 354.921 192.443 355.27 193.807Z\" fill=\"white\"/>\n                    </g>\n                    </g>\n                    <defs>\n                    <filter id=\"filter0_bi_211_527\" x=\"-43\" y=\"-42\" width=\"471\" height=\"397\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n                    <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n                    <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"21\"/>\n                    <feComposite in2=\"SourceAlpha\" operator=\"in\" result=\"effect1_backgroundBlur_211_527\"/>\n                    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_backgroundBlur_211_527\" result=\"shape\"/>\n                    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\n                    <feOffset dx=\"-5\" dy=\"-5\"/>\n                    <feGaussianBlur stdDeviation=\"125\"/>\n                    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\"/>\n                    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.02 0\"/>\n                    <feBlend mode=\"normal\" in2=\"shape\" result=\"effect2_innerShadow_211_527\"/>\n                    </filter>\n                    <radialGradient id=\"paint0_radial_211_527\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(-1) rotate(38.9654) scale(497.733 338.2)\">\n                    <stop stop-color=\"white\" stop-opacity=\"0.4\"/>\n                    <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\"/>\n                    </radialGradient>\n                    <linearGradient id=\"paint1_linear_211_527\" x1=\"216\" y1=\"109\" x2=\"161.738\" y2=\"180.701\" gradientUnits=\"userSpaceOnUse\">\n                    <stop stop-color=\"#690C4C\"/>\n                    <stop offset=\"0.589386\" stop-color=\"#5B1166\"/>\n                    </linearGradient>\n                    <clipPath id=\"clip0_211_527\">\n                    <rect x=\"-1\" width=\"387\" height=\"313\" fill=\"white\"/>\n                    </clipPath>\n                    </defs>\n                </svg>\n            </div>\n\n            <br />\n\n            <div style={{color: 'white', fontSize: 84, fontFamily: 'Lato', fontWeight: '900', wordWrap: 'break-word', margin: '5rem 7rem', marginBottom: '5rem'}}>\n                GRAB <br /> YOUR PLACE <br /> BEFORE ITS TOO LATE\n            </div>\n            <div style={{marginLeft: '10rem', marginBottom: '6rem'}}>\n                <a href=\"https://m.paytm.me/event-details?slug=iit-patnas-esummit24-mar15-2024\" target='_blank' rel='noreferrer'>\n                    <button style={{ background: '#BD0958', borderRadius: 16, overflow: 'hidden', padding: '0.5rem', color: 'white', fontSize: 25}}>Register Now!</button>\n                </a>\n            </div>\n\n\n            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', color: 'white', fontSize: 84, fontFamily: 'Lato', wordWrap: 'break-word', marginBottom: '2rem' }}>\n                <p>EVENTS</p>\n            </div>\n\n\n            <Events></Events>\n            {/* footer */}\n\n            \n            <Footer/>\n        </div>\n    )\n}\n","/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport Esummit from './pages/esummit';\nimport Events from './pages/Events';\nimport { useEffect } from 'react';\n\nfunction App() {\n  const reload = () => window.location.reload();\n  var count = 0;\n\n  useEffect(() => {\n    if (location.pathname === '/ecell/index.html' && count === 0) {\n      reload();\n      count++;\n    }\n    // You can perform any action you want here\n    // For example, make an API call, initialize some data, etc.\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Esummit></Esummit>} />\n       </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","hasOwn","classNames","classes","i","arg","appendClass","parseValue","newClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","globalThis","Function","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useRoutesImpl","dataRouterState","future","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","DataRouterStateHook","UseRouteError","routeId","useCurrentRouteId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","dataRouterContext","static","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","renderFallback","fallbackIndex","v7_partialHydration","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","v7_relativeSplatPath","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","BrowserRouter","_ref4","historyRef","createBrowserHistory","setStateImpl","v7_startTransition","newState","DataRouterHook","Navbar","isMenuOpen","setIsMenuOpen","_jsx","_jsxs","className","margin","esummit","alt","optionsSupported","onceSupported","once","canUseDOM","eventName","handler","wrappedHandler","__once","onceHandler","scrollbarSize","recalc","scrollDiv","position","offsetWidth","clientWidth","useEventCallback","useCommittedRef","toFnRef","refA","refB","mergeRefs","useWillUnmount","onUnmount","valueRef","useUpdatedRef","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","emulateTransitionEnd","duration","called","createEvent","initEvent","triggerEvent","remove","transitionEnd","str","mult","parseFloat","parseDuration","removeEmulate","active","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","abs","innerWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","reset","removeContainerStyle","modal","modalIdx","isTopModal","Context","useWindow","resolveContainerRef","getBoundingClientRect","isReactNative","global","product","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","ImperativeTransition","_ref2","onEntered","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","onFinish","renderTransition","runTransition","NoopTransition","_excluded","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","excluded","sourceKeys","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","mounted","useMounted","prevShow","usePrevious","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","isEscKey","dialogProps","tabIndex","appear","backdropElement","_Fragment","Manager","qsa","selector","replaceClassName","origClass","classToRemove","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","restore","classList","baseVal","hasClass","marginProp","sharedManager","_setPrototypeOf","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","subClass","superClass","_this","initialStatus","isMounting","enter","appearStatus","nextCallback","prevState","_proto","updateStatus","prevProps","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","nodeRef","forceReflow","performEnter","performExit","_this2","appearing","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","_this$props","childProps","TransitionGroupContext","noop","propTypes","transitionEndListener","childRef","mergedRef","attachRef","componentOrElement","normalize","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleAddEndListener","innerProps","fadeStyles","Fade","transitionClasses","isAppearing","offsetHeight","triggerBrowserReflow","TransitionWrapper","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","useBootstrapPrefix","prefix","defaultPrefix","ModalBody","bsPrefix","as","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","variant","CloseButton","ariaLabel","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","AbstractModalHeader","DivStyledAsH4","ModalTitle","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","dir","useIsRTL","modalContext","getModalManager","getSharedManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","handleStaticBackdropClick","backdropProps","baseModalStyle","BaseModal","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","imageMap","a1","a2","a3","a4","a5","a6","a7","EventModal","handleClose","venue","registrationLink","posterCode","description","dateTime","dateOfEvent","getDate","monthArray","getMonth","center","maxWidth","digit","open","showModal","setShowModal","marginRight","cursor","handleShowModal","handleCloseModal","viewBox","fill","xmlns","justifyContent","alignItems","fontFamily","marginLeft","marginBottom","textAlign","fontSize","wordWrap","paddingTop","paddingBottom","borderRadius","border","gap","textDecoration","flexDirection","marginTop","commonjsGlobal","unwrapExports","createCommonjsModule","mapToZero_1","ret","stripStyle_1","val","stepper_1","secondPerFrame","destX","precision","newV","newX","reusedTuple","performanceNow","getNanoSeconds","hrtime","loadTime","process","getTime","performanceNow$1","moduleLoadTime","nodeLoadTime","upTime","uptime","root","vendors","suffix","raf","caf","_now","max","cp","cancelled","round","raf_1","polyfill","requestAnimationFrame","cancelAnimationFrame","shouldStopAnimation_1","currentStyle","currentVelocity","styleValue","Motion_1","_createClass","defineProperties","descriptor","writable","Constructor","protoProps","staticProps","_interopRequireDefault","_mapToZero2","_stripStyle2","_stepper4","_performanceNow2","_raf2","_shouldStopAnimation2","_react2","_propTypes2","msPerFrame","Motion","TypeError","_classCallCheck","wasAnimating","animationID","prevTime","accumulatedTime","unreadPropStyle","clearUnreadPropStyle","destStyle","dirty","_state","lastIdealStyle","lastIdealVelocity","startAnimationIfNecessary","timestamp","propsStyle","onRest","currentTime","timeDelta","currentFrameCompletion","framesToCatchUp","newLastIdealStyle","newLastIdealVelocity","newCurrentStyle","newCurrentVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","stiffness","damping","_stepper2","nextIdealX","nextIdealV","defaultState","_inherits","defaultStyle","renderedChildren","StaggeredMotion_1","StaggeredMotion","unreadPropStyles","currentStyles","currentVelocities","lastIdealStyles","lastIdealVelocities","someDirty","destStyles","styles","shouldStopAnimationAll","newLastIdealStyles","newLastIdealVelocities","newCurrentStyles","newCurrentVelocities","defaultStyles","mergeDiff_1","onRemove","prevKeyIndex","nextKeyIndex","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","TransitionMotion_1","_mergeDiff2","rehydrateStyles","mergedPropsStyles","plainStyles","cUnreadPropStyles","mergedPropsStyle","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","oldIndex","oldMergedPropsStyle","leavingStyle","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","TransitionMotion","unmounting","_mergeAndSync","propStyles","_mergeAndSync2","newMergedPropsStyle","styleThatEntered","defaultStyleCell","_mergeAndSync3","hydratedStyles","presets","noWobble","gentle","wobbly","stiff","spring_1","defaultConfig","_presets2","reorderKeys_1","reactMotion","_interopRequire","spring","stripStyle","reorderKeys","reactMotion_1","reactMotion_4","reactMotion_5","createClass","ScrollHorizontal","_Component","classCallCheck","ReferenceError","possibleConstructorReturn","animValues","currentAnimValues","calculate","onScrollStart","resetMin","resetMax","inherits","pageLock","orig","firstElementChild","DOM","hScrollParent","rawData","mouseY","animationValue","newAnimationValue","newAnimationValueNegative","caniscroll","reverseScroll","nextProps","timer","rect","scroller","offsetLeft","lastElementChild","scrollWidth","win","curr","bounds","springConfig","scrollingElementStyles","transform","willChange","events","setEvents","async","response","fetch","json","fetchEvents","containerWidth","setWidth","animationState","setPlay","animationPlayState","EventCard","Esummit","countdown","setCountdown","days","hours","minutes","seconds","countdownDate","interval","setInterval","distance","clearInterval","overflowX","theme","objectFit","boxShadow","backdropFilter","IITP","filterUnits","stdDeviation","in2","operator","values","dx","dy","k2","k3","cx","cy","gradientUnits","gradientTransform","x1","y1","x2","y2","background","reload","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","App","reportWebVitals"],"sourceRoot":""}